{
  "version": 3,
  "sources": ["../node_modules/@aws-amplify/core/src/constants.ts", "../node_modules/@aws-amplify/core/src/Logger/types.ts", "../node_modules/@aws-amplify/core/src/Logger/ConsoleLogger.ts", "../node_modules/@aws-amplify/core/src/errors/AmplifyError.ts", "../node_modules/@aws-amplify/core/src/types/errors.ts", "../node_modules/@aws-amplify/core/src/errors/createAssertionFunction.ts", "../node_modules/@aws-amplify/core/src/Hub/index.ts", "../node_modules/@aws-amplify/core/src/utils/globalHelpers/index.ts", "../node_modules/@aws-amplify/core/src/utils/convert/base64/base64Decoder.ts", "../node_modules/@aws-amplify/core/src/singleton/Auth/utils/errorHelpers.ts", "../node_modules/@aws-amplify/core/src/singleton/Auth/utils/index.ts", "../node_modules/@aws-amplify/core/src/utils/deepFreeze.ts", "../node_modules/@aws-amplify/core/src/parseAWSExports.ts", "../node_modules/@aws-amplify/core/src/singleton/constants.ts", "../node_modules/uuid/dist/esm-browser/rng.js", "../node_modules/uuid/dist/esm-browser/stringify.js", "../node_modules/uuid/dist/esm-browser/native.js", "../node_modules/uuid/dist/esm-browser/v4.js", "../node_modules/@aws-amplify/core/src/parseAmplifyOutputs.ts", "../node_modules/@aws-amplify/core/src/utils/parseAmplifyConfig.ts", "../node_modules/tslib/tslib.es6.mjs", "../node_modules/@aws-crypto/sha256-js/src/constants.ts", "../node_modules/@aws-crypto/sha256-js/src/RawSha256.ts", "../node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js", "../node_modules/@aws-crypto/util/src/convertToBuffer.ts", "../node_modules/@aws-crypto/util/src/isEmptyData.ts", "../node_modules/@aws-crypto/sha256-js/src/jsSha256.ts", "../node_modules/@smithy/util-hex-encoding/dist-es/index.js", "../node_modules/@aws-amplify/core/src/Platform/types.ts", "../node_modules/@aws-amplify/core/src/Platform/version.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/helpers.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/React.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/Vue.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/Svelte.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/Next.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/Nuxt.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/Angular.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/ReactNative.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/Expo.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/Web.ts", "../node_modules/@aws-amplify/core/src/Platform/detection/index.ts", "../node_modules/@aws-amplify/core/src/Platform/detectFramework.ts", "../node_modules/@aws-amplify/core/src/Platform/customUserAgent.ts", "../node_modules/@aws-amplify/core/src/Platform/index.ts", "../node_modules/@aws-amplify/core/src/utils/isBrowser.ts", "../node_modules/@aws-amplify/core/src/singleton/Auth/index.ts", "../node_modules/@aws-amplify/core/src/singleton/Amplify.ts", "../node_modules/@aws-amplify/core/src/singleton/apis/internal/fetchAuthSession.ts", "../node_modules/@aws-amplify/core/src/singleton/apis/fetchAuthSession.ts", "../node_modules/@aws-amplify/core/src/clients/serde/responseInfo.ts", "../node_modules/@aws-amplify/core/src/clients/serde/json.ts", "../node_modules/@aws-amplify/core/src/clients/internal/composeServiceApi.ts", "../node_modules/@aws-amplify/core/src/clients/endpoints/partitions.ts", "../node_modules/@aws-amplify/core/src/clients/endpoints/getDnsSuffix.ts", "../node_modules/@aws-amplify/core/src/clients/middleware/retry/constants.ts", "../node_modules/@aws-amplify/core/src/clients/middleware/retry/retryMiddleware.ts", "../node_modules/@aws-amplify/core/src/utils/amplifyUuid/index.ts", "../node_modules/@aws-amplify/core/src/clients/middleware/retry/amzSdkInvocationIdHeaderMiddleware.ts", "../node_modules/@aws-amplify/core/src/clients/middleware/retry/amzSdkRequestHeaderMiddleware.ts", "../node_modules/@aws-amplify/core/src/clients/middleware/userAgent/middleware.ts", "../node_modules/@aws-amplify/core/src/clients/internal/composeTransferHandler.ts", "../node_modules/@aws-amplify/core/src/clients/utils/memoization.ts", "../node_modules/@aws-amplify/core/src/clients/handlers/fetch.ts", "../node_modules/@aws-amplify/core/src/clients/handlers/aws/unauthenticated.ts", "../node_modules/@aws-amplify/core/src/utils/retry/constants.ts", "../node_modules/@aws-amplify/core/src/utils/retry/jitteredBackoff.ts", "../node_modules/@aws-amplify/core/src/clients/middleware/retry/jitteredBackoff.ts", "../node_modules/@aws-amplify/core/src/clients/middleware/retry/isClockSkewError.ts", "../node_modules/@aws-amplify/core/src/clients/middleware/retry/defaultRetryDecider.ts", "../node_modules/@aws-amplify/core/src/utils/amplifyUrl/index.ts", "../node_modules/@aws-amplify/core/src/awsClients/cognitoIdentity/base.ts", "../node_modules/@aws-amplify/core/src/awsClients/cognitoIdentity/getId.ts", "../node_modules/@aws-amplify/core/src/awsClients/cognitoIdentity/getCredentialsForIdentity.ts", "../node_modules/@aws-amplify/core/src/errors/PlatformNotSupportedError.ts", "../node_modules/@aws-amplify/core/src/storage/KeyValueStorage.ts", "../node_modules/@aws-amplify/core/src/storage/InMemoryStorage.ts", "../node_modules/@aws-amplify/core/src/storage/utils.ts", "../node_modules/@aws-amplify/core/src/storage/DefaultStorage.ts", "../node_modules/@aws-amplify/core/src/storage/SessionStorage.ts", "../node_modules/@aws-amplify/core/src/storage/SyncKeyValueStorage.ts", "../node_modules/@aws-amplify/core/src/storage/SyncSessionStorage.ts", "../node_modules/js-cookie/dist/js.cookie.mjs", "../node_modules/@aws-amplify/core/src/storage/CookieStorage.ts", "../node_modules/@aws-amplify/core/src/storage/index.ts", "../node_modules/@aws-amplify/core/src/Cache/constants.ts", "../node_modules/@aws-amplify/core/src/Cache/utils/cacheHelpers.ts", "../node_modules/@aws-amplify/core/src/Cache/utils/errorHelpers.ts", "../node_modules/@aws-amplify/core/src/Cache/StorageCacheCommon.ts", "../node_modules/@aws-amplify/core/src/Cache/StorageCache.ts", "../node_modules/@aws-amplify/core/src/Cache/index.ts", "../node_modules/@aws-amplify/core/src/I18n/I18n.ts", "../node_modules/@aws-amplify/core/src/I18n/errorHelpers.ts", "../node_modules/@aws-amplify/core/src/I18n/index.ts", "../node_modules/@aws-amplify/core/src/utils/urlSafeDecode.ts", "../node_modules/@aws-amplify/core/src/utils/deDupeAsyncFunction.ts", "../node_modules/@aws-amplify/core/src/utils/isTokenExpired.ts", "../node_modules/@aws-amplify/core/src/utils/deviceName/getDeviceName.ts", "../node_modules/@aws-amplify/core/src/utils/convert/base64/bytesToString.ts", "../node_modules/@aws-amplify/core/src/utils/convert/base64/base64Encoder.ts", "../node_modules/@aws-amplify/core/src/utils/cryptoSecureRandomInt.ts", "../node_modules/@aws-amplify/core/src/utils/WordArray.ts", "../node_modules/@aws-amplify/auth/src/errors/types/validation.ts", "../node_modules/@aws-amplify/auth/src/common/AuthErrorStrings.ts", "../node_modules/@aws-amplify/auth/src/errors/AuthError.ts", "../node_modules/@aws-amplify/auth/src/errors/utils/assertValidationError.ts", "../node_modules/@aws-amplify/auth/src/foundation/parsers/regionParsers.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/types/errors.ts", "../node_modules/@aws-amplify/auth/src/errors/constants.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/types.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/internal/getCurrentUser.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/getCurrentUser.ts", "../node_modules/@aws-amplify/auth/src/utils/getAuthUserAgentValue.ts", "../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolSerializer.ts", "../node_modules/@aws-amplify/auth/src/errors/utils/assertServiceError.ts", "../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolDeserializer.ts", "../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.ts", "../node_modules/@aws-amplify/auth/src/foundation/constants.ts", "../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/constants.ts", "../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.ts", "../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.ts", "../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.ts", "../node_modules/@aws-amplify/auth/src/foundation/cognitoUserPoolEndpointResolver.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/factories/createCognitoUserPoolEndpointResolver.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/userContextData.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/refreshAuthTokens.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/types.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/errorHelpers.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/constants.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenStore.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/signInWithRedirectStore.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/oAuthStore.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/inflightPromise.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenOrchestrator.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/tokenProvider.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/cacheTokens.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/dispatchSignedInHubEvent.ts", "../node_modules/@aws-amplify/auth/src/client/utils/store/autoSignInStore.ts", "../node_modules/@aws-amplify/auth/src/client/utils/store/signInStore.ts", "../node_modules/@aws-amplify/auth/src/client/utils/passkey/errors.ts", "../node_modules/@aws-amplify/auth/src/client/utils/passkey/getIsPasskeySupported.ts", "../node_modules/@aws-amplify/auth/src/foundation/convert/base64url/convertArrayBufferToBase64Url.ts", "../node_modules/@aws-amplify/auth/src/foundation/convert/base64url/convertBase64UrlToArrayBuffer.ts", "../node_modules/@aws-amplify/auth/src/client/utils/passkey/serde.ts", "../node_modules/@aws-amplify/auth/src/client/utils/passkey/types/index.ts", "../node_modules/@aws-amplify/auth/src/client/utils/passkey/getPasskey.ts", "../node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmDeviceClient.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/textEncoder/index.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/BigInteger/BigInteger.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateS.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/constants.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getBytesFromHex.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHexFromBytes.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHashFromData.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHashFromHex.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getPaddedHex.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateU.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHkdfKey.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getRandomBytes.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getRandomString.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/AuthenticationHelper/AuthenticationHelper.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateA.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getAuthenticationHelper.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/getNewDeviceMetadata.ts", "../node_modules/@aws-amplify/auth/src/client/flows/userAuth/handleWebAuthnSignInResult.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getNowString.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getSignatureString.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/handleDeviceSRPAuth.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/handlePasswordVerifierChallenge.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/retryOnResourceNotFoundException.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/setActiveSignInUsername.ts", "../node_modules/@aws-amplify/auth/src/client/flows/shared/handlePasswordSRP.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/signInHelpers.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithCustomAuth.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithCustomSRPAuth.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/autoSignIn.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithSRP.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithUserPassword.ts", "../node_modules/@aws-amplify/auth/src/client/flows/userAuth/handleUserAuthFlow.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithUserAuth.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signIn.ts", "../node_modules/@aws-amplify/auth/src/Errors.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/createOAuthError.ts", "../node_modules/@aws-amplify/auth/src/types/Auth.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/validateState.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/completeOAuthFlow.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/getRedirectUrl.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/handleFailure.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/enableOAuthListener.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/types.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdStore.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/utils.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdProvider.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/credentialsProvider.ts", "../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/index.ts", "../node_modules/aws-amplify/src/initSingleton.ts", "../src/aws-exports.js", "../src/index.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Logging constants\nexport const AWS_CLOUDWATCH_CATEGORY = 'Logging';\nexport const USER_AGENT_HEADER = 'x-amz-user-agent';\n// Error exception code constants\nexport const NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var LogType;\n(function (LogType) {\n    LogType[\"DEBUG\"] = \"DEBUG\";\n    LogType[\"ERROR\"] = \"ERROR\";\n    LogType[\"INFO\"] = \"INFO\";\n    LogType[\"WARN\"] = \"WARN\";\n    LogType[\"VERBOSE\"] = \"VERBOSE\";\n    LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\n", "/* eslint-disable no-console */\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AWS_CLOUDWATCH_CATEGORY } from '../constants';\nimport { LogType } from './types';\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n            if (type === LogType.INFO && console.info) {\n                log = console.info.bind(console);\n            }\n            if (type === LogType.DEBUG && console.debug) {\n                log = console.debug.bind(console);\n            }\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\n", "export class AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, metadata, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        if (metadata) {\n            // If metadata exists, explicitly only record the following properties.\n            const { extendedRequestId, httpStatusCode, requestId } = metadata;\n            this.metadata = { extendedRequestId, httpStatusCode, requestId };\n        }\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n", "export var AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n    AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from './AmplifyError';\nexport const createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n    const { message, recoverySuggestion } = errorMap[name];\n    if (!assertion) {\n        throw new AssertionError({\n            name,\n            message: additionalContext\n                ? `${message} ${additionalContext}`\n                : message,\n            recoverySuggestion,\n        });\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants';\nimport { AmplifyError } from '../errors';\nexport const AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nexport class HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nexport const Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nexport const HubInternal = new HubClass('internal-hub');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from '../../errors';\nexport const getCrypto = () => {\n    if (typeof window === 'object' && typeof window.crypto === 'object') {\n        return window.crypto;\n    }\n    // Next.js global polyfill\n    if (typeof crypto === 'object') {\n        return crypto;\n    }\n    throw new AmplifyError({\n        name: 'MissingPolyfill',\n        message: 'Cannot resolve the `crypto` function from the environment.',\n    });\n};\nexport const getBtoa = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n        return window.btoa;\n    }\n    // Next.js global polyfill\n    if (typeof btoa === 'function') {\n        return btoa;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `btoa` function from the environment.',\n    });\n};\nexport const getAtob = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob;\n    }\n    // Next.js global polyfill\n    if (typeof atob === 'function') {\n        return atob;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `atob` function from the environment.',\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getAtob } from '../../globalHelpers';\nexport const base64Decoder = {\n    convert(input, options) {\n        let inputStr = input;\n        // urlSafe character replacement options conform to the base64 url spec\n        // https://datatracker.ietf.org/doc/html/rfc4648#page-7\n        if (options?.urlSafe) {\n            inputStr = inputStr.replace(/-/g, '+').replace(/_/g, '/');\n        }\n        return getAtob()(inputStr);\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../../errors';\nexport var AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n        message: 'Auth Token Provider not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n        message: 'Auth UserPool or IdentityPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n        message: 'Auth UserPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n    },\n    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n        message: 'Invalid identity pool id provided.',\n        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n    },\n    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n        message: 'oauth param not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n    },\n};\nexport const assert = createAssertionFunction(authConfigurationErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decoder } from '../../../utils/convert';\nimport { AuthConfigurationErrorCode, assert } from './errorHelpers';\nexport function assertTokenProviderConfig(cognitoConfig) {\n    let assertionValid = true; // assume valid until otherwise proveed\n    if (!cognitoConfig) {\n        assertionValid = false;\n    }\n    else {\n        assertionValid =\n            !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n    }\n    assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n}\nexport function assertOAuthConfig(cognitoConfig) {\n    const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignOut &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignIn &&\n        !!cognitoConfig?.loginWith?.oauth?.responseType;\n    assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n}\nexport function assertIdentityPoolIdConfig(cognitoConfig) {\n    const validConfig = !!cognitoConfig?.identityPoolId;\n    assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n}\n/**\n * Decodes payload of JWT token\n *\n * @param {String} token A string representing a token to be decoded\n * @throws {@link Error} - Throws error when token is invalid or payload malformed.\n */\nexport function decodeJWT(token) {\n    const tokenParts = token.split('.');\n    if (tokenParts.length !== 3) {\n        throw new Error('Invalid token');\n    }\n    try {\n        const base64WithUrlSafe = tokenParts[1];\n        const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonStr = decodeURIComponent(base64Decoder\n            .convert(base64)\n            .split('')\n            .map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`)\n            .join(''));\n        const payload = JSON.parse(jsonStr);\n        return {\n            toString: () => token,\n            payload,\n        };\n    }\n    catch (err) {\n        throw new Error('Invalid token payload');\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const deepFreeze = (object) => {\n    const propNames = Reflect.ownKeys(object);\n    for (const name of propNames) {\n        const value = object[name];\n        if ((value && typeof value === 'object') || typeof value === 'function') {\n            deepFreeze(value);\n        }\n    }\n    return Object.freeze(object);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from './Logger';\nimport { AmplifyError } from './errors';\nconst logger = new ConsoleLogger('parseAWSExports');\nconst authTypeMapping = {\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    OPENID_CONNECT: 'oidc',\n    NONE: 'none',\n    AWS_LAMBDA: 'lambda',\n    // `LAMBDA` is an incorrect value that was added during the v6 rewrite.\n    // Keeping it as a valid value until v7 to prevent breaking customers who might\n    // be relying on it as a workaround.\n    // ref: https://github.com/aws-amplify/amplify-js/pull/12922\n    // TODO: @v7 remove next line\n    LAMBDA: 'lambda',\n};\n/**\n * Converts the object imported from `aws-exports.js` or `amplifyconfiguration.json` files generated by\n * the Amplify CLI into an object that conforms to the {@link ResourcesConfig}.\n *\n * @param config A configuration object imported  from `aws-exports.js` or `amplifyconfiguration.json`.\n *\n * @returns An object that conforms to the {@link ResourcesConfig} .\n */\nexport const parseAWSExports = (config = {}) => {\n    if (!Object.prototype.hasOwnProperty.call(config, 'aws_project_region')) {\n        throw new AmplifyError({\n            name: 'InvalidParameterException',\n            message: 'Invalid config parameter.',\n            recoverySuggestion: 'Ensure passing the config object imported from  `amplifyconfiguration.json`.',\n        });\n    }\n    const { aws_appsync_apiKey, aws_appsync_authenticationType, aws_appsync_graphqlEndpoint, aws_appsync_region, aws_bots_config, aws_cognito_identity_pool_id, aws_cognito_sign_up_verification_method, aws_cognito_mfa_configuration, aws_cognito_mfa_types, aws_cognito_password_protection_settings, aws_cognito_verification_mechanisms, aws_cognito_signup_attributes, aws_cognito_social_providers, aws_cognito_username_attributes, aws_mandatory_sign_in, aws_mobile_analytics_app_id, aws_mobile_analytics_app_region, aws_user_files_s3_bucket, aws_user_files_s3_bucket_region, aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing, aws_user_pools_id, aws_user_pools_web_client_id, geo, oauth, predictions, aws_cloud_logic_custom, Notifications, modelIntrospection, } = config;\n    const amplifyConfig = {};\n    // Analytics\n    if (aws_mobile_analytics_app_id) {\n        amplifyConfig.Analytics = {\n            Pinpoint: {\n                appId: aws_mobile_analytics_app_id,\n                region: aws_mobile_analytics_app_region,\n            },\n        };\n    }\n    // Notifications\n    const { InAppMessaging, Push } = Notifications ?? {};\n    if (InAppMessaging?.AWSPinpoint || Push?.AWSPinpoint) {\n        if (InAppMessaging?.AWSPinpoint) {\n            const { appId, region } = InAppMessaging.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                InAppMessaging: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n        if (Push?.AWSPinpoint) {\n            const { appId, region } = Push.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                ...amplifyConfig.Notifications,\n                PushNotification: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n    }\n    // Interactions\n    if (Array.isArray(aws_bots_config)) {\n        amplifyConfig.Interactions = {\n            LexV1: Object.fromEntries(aws_bots_config.map(bot => [bot.name, bot])),\n        };\n    }\n    // API\n    if (aws_appsync_graphqlEndpoint) {\n        const defaultAuthMode = authTypeMapping[aws_appsync_authenticationType];\n        if (!defaultAuthMode) {\n            logger.debug(`Invalid authentication type ${aws_appsync_authenticationType}. Falling back to IAM.`);\n        }\n        amplifyConfig.API = {\n            GraphQL: {\n                endpoint: aws_appsync_graphqlEndpoint,\n                apiKey: aws_appsync_apiKey,\n                region: aws_appsync_region,\n                defaultAuthMode: defaultAuthMode ?? 'iam',\n            },\n        };\n        if (modelIntrospection) {\n            amplifyConfig.API.GraphQL.modelIntrospection = modelIntrospection;\n        }\n    }\n    // Auth\n    const mfaConfig = aws_cognito_mfa_configuration\n        ? {\n            status: aws_cognito_mfa_configuration &&\n                aws_cognito_mfa_configuration.toLowerCase(),\n            totpEnabled: aws_cognito_mfa_types?.includes('TOTP') ?? false,\n            smsEnabled: aws_cognito_mfa_types?.includes('SMS') ?? false,\n        }\n        : undefined;\n    const passwordFormatConfig = aws_cognito_password_protection_settings\n        ? {\n            minLength: aws_cognito_password_protection_settings.passwordPolicyMinLength,\n            requireLowercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_LOWERCASE') ?? false,\n            requireUppercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_UPPERCASE') ?? false,\n            requireNumbers: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_NUMBERS') ?? false,\n            requireSpecialCharacters: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_SYMBOLS') ?? false,\n        }\n        : undefined;\n    const mergedUserAttributes = Array.from(new Set([\n        ...(aws_cognito_verification_mechanisms ?? []),\n        ...(aws_cognito_signup_attributes ?? []),\n    ]));\n    const userAttributes = mergedUserAttributes.reduce((attributes, key) => ({\n        ...attributes,\n        // All user attributes generated by the CLI are required\n        [key.toLowerCase()]: { required: true },\n    }), {});\n    const loginWithEmailEnabled = aws_cognito_username_attributes?.includes('EMAIL') ?? false;\n    const loginWithPhoneEnabled = aws_cognito_username_attributes?.includes('PHONE_NUMBER') ?? false;\n    if (aws_cognito_identity_pool_id || aws_user_pools_id) {\n        amplifyConfig.Auth = {\n            Cognito: {\n                identityPoolId: aws_cognito_identity_pool_id,\n                allowGuestAccess: aws_mandatory_sign_in !== 'enable',\n                signUpVerificationMethod: aws_cognito_sign_up_verification_method,\n                userAttributes,\n                userPoolClientId: aws_user_pools_web_client_id,\n                userPoolId: aws_user_pools_id,\n                mfa: mfaConfig,\n                passwordFormat: passwordFormatConfig,\n                loginWith: {\n                    username: !(loginWithEmailEnabled || loginWithPhoneEnabled),\n                    email: loginWithEmailEnabled,\n                    phone: loginWithPhoneEnabled,\n                },\n            },\n        };\n    }\n    const hasOAuthConfig = oauth ? Object.keys(oauth).length > 0 : false;\n    const hasSocialProviderConfig = aws_cognito_social_providers\n        ? aws_cognito_social_providers.length > 0\n        : false;\n    if (amplifyConfig.Auth && hasOAuthConfig) {\n        amplifyConfig.Auth.Cognito.loginWith = {\n            ...amplifyConfig.Auth.Cognito.loginWith,\n            oauth: {\n                ...getOAuthConfig(oauth),\n                ...(hasSocialProviderConfig && {\n                    providers: parseSocialProviders(aws_cognito_social_providers),\n                }),\n            },\n        };\n    }\n    // Storage\n    if (aws_user_files_s3_bucket) {\n        amplifyConfig.Storage = {\n            S3: {\n                bucket: aws_user_files_s3_bucket,\n                region: aws_user_files_s3_bucket_region,\n                dangerouslyConnectToHttpEndpointForTesting: aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing,\n            },\n        };\n    }\n    // Geo\n    if (geo) {\n        const { amazon_location_service } = geo;\n        amplifyConfig.Geo = {\n            LocationService: {\n                maps: amazon_location_service.maps,\n                geofenceCollections: amazon_location_service.geofenceCollections,\n                searchIndices: amazon_location_service.search_indices,\n                region: amazon_location_service.region,\n            },\n        };\n    }\n    // REST API\n    if (aws_cloud_logic_custom) {\n        amplifyConfig.API = {\n            ...amplifyConfig.API,\n            REST: aws_cloud_logic_custom.reduce((acc, api) => {\n                const { name, endpoint, region, service } = api;\n                return {\n                    ...acc,\n                    [name]: {\n                        endpoint,\n                        ...(service ? { service } : undefined),\n                        ...(region ? { region } : undefined),\n                    },\n                };\n            }, {}),\n        };\n    }\n    // Predictions\n    if (predictions) {\n        // map VoiceId from speechGenerator defaults to voiceId\n        const { VoiceId: voiceId } = predictions?.convert?.speechGenerator?.defaults ?? {};\n        amplifyConfig.Predictions = voiceId\n            ? {\n                ...predictions,\n                convert: {\n                    ...predictions.convert,\n                    speechGenerator: {\n                        ...predictions.convert.speechGenerator,\n                        defaults: { voiceId },\n                    },\n                },\n            }\n            : predictions;\n    }\n    return amplifyConfig;\n};\nconst getRedirectUrl = (redirectStr) => redirectStr?.split(',') ?? [];\nconst getOAuthConfig = ({ domain, scope, redirectSignIn, redirectSignOut, responseType, }) => ({\n    domain,\n    scopes: scope,\n    redirectSignIn: getRedirectUrl(redirectSignIn),\n    redirectSignOut: getRedirectUrl(redirectSignOut),\n    responseType,\n});\nconst parseSocialProviders = (aws_cognito_social_providers) => {\n    return aws_cognito_social_providers.map((provider) => {\n        const updatedProvider = provider.toLowerCase();\n        return updatedProvider.charAt(0).toUpperCase() + updatedProvider.slice(1);\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const ADD_OAUTH_LISTENER = Symbol('oauth-listener');\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\r\n// require the crypto API and do not support built-in fallback to lower quality random number\r\n// generators (like Math.random()).\r\nlet getRandomValues;\r\nconst rnds8 = new Uint8Array(16);\r\nexport default function rng() {\r\n  // lazy load so that environments that need to polyfill have a chance to do so\r\n  if (!getRandomValues) {\r\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\r\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\r\n\r\n    if (!getRandomValues) {\r\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\r\n    }\r\n  }\r\n\r\n  return getRandomValues(rnds8);\r\n}", "import validate from './validate.js';\r\n/**\r\n * Convert array of 16 byte values to UUID string format of the form:\r\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\r\n */\r\n\r\nconst byteToHex = [];\r\n\r\nfor (let i = 0; i < 256; ++i) {\r\n  byteToHex.push((i + 0x100).toString(16).slice(1));\r\n}\r\n\r\nexport function unsafeStringify(arr, offset = 0) {\r\n  // Note: Be careful editing this code!  It's been tuned for performance\r\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\r\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\r\n}\r\n\r\nfunction stringify(arr, offset = 0) {\r\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\r\n  // of the following:\r\n  // - One or more input array values don't map to a hex octet (leading to\r\n  // \"undefined\" in the uuid)\r\n  // - Invalid input values for the RFC `version` or `variant` fields\r\n\r\n  if (!validate(uuid)) {\r\n    throw TypeError('Stringified UUID is invalid');\r\n  }\r\n\r\n  return uuid;\r\n}\r\n\r\nexport default stringify;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\r\nexport default {\r\n  randomUUID\r\n};", "import native from './native.js';\r\nimport rng from './rng.js';\r\nimport { unsafeStringify } from './stringify.js';\r\n\r\nfunction v4(options, buf, offset) {\r\n  if (native.randomUUID && !buf && !options) {\r\n    return native.randomUUID();\r\n  }\r\n\r\n  options = options || {};\r\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\r\n\r\n  rnds[6] = rnds[6] & 0x0f | 0x40;\r\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\r\n\r\n  if (buf) {\r\n    offset = offset || 0;\r\n\r\n    for (let i = 0; i < 16; ++i) {\r\n      buf[offset + i] = rnds[i];\r\n    }\r\n\r\n    return buf;\r\n  }\r\n\r\n  return unsafeStringify(rnds);\r\n}\r\n\r\nexport default v4;", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isAmplifyOutputs(config) {\n    // version format initially will be '1' but is expected to be something like x.y where x is major and y minor version\n    const { version } = config;\n    if (!version) {\n        return false;\n    }\n    return version.startsWith('1');\n}\nfunction parseStorage(amplifyOutputsStorageProperties) {\n    if (!amplifyOutputsStorageProperties) {\n        return undefined;\n    }\n    const { bucket_name, aws_region, buckets } = amplifyOutputsStorageProperties;\n    return {\n        S3: {\n            bucket: bucket_name,\n            region: aws_region,\n            buckets: buckets && createBucketInfoMap(buckets),\n        },\n    };\n}\nfunction parseAuth(amplifyOutputsAuthProperties) {\n    if (!amplifyOutputsAuthProperties) {\n        return undefined;\n    }\n    const { user_pool_id, user_pool_client_id, identity_pool_id, password_policy, mfa_configuration, mfa_methods, unauthenticated_identities_enabled, oauth, username_attributes, standard_required_attributes, groups, } = amplifyOutputsAuthProperties;\n    const authConfig = {\n        Cognito: {\n            userPoolId: user_pool_id,\n            userPoolClientId: user_pool_client_id,\n            groups,\n        },\n    };\n    if (identity_pool_id) {\n        authConfig.Cognito = {\n            ...authConfig.Cognito,\n            identityPoolId: identity_pool_id,\n        };\n    }\n    if (password_policy) {\n        authConfig.Cognito.passwordFormat = {\n            requireLowercase: password_policy.require_lowercase,\n            requireNumbers: password_policy.require_numbers,\n            requireUppercase: password_policy.require_uppercase,\n            requireSpecialCharacters: password_policy.require_symbols,\n            minLength: password_policy.min_length ?? 6,\n        };\n    }\n    if (mfa_configuration) {\n        authConfig.Cognito.mfa = {\n            status: getMfaStatus(mfa_configuration),\n            smsEnabled: mfa_methods?.includes('SMS'),\n            totpEnabled: mfa_methods?.includes('TOTP'),\n        };\n    }\n    if (unauthenticated_identities_enabled) {\n        authConfig.Cognito.allowGuestAccess = unauthenticated_identities_enabled;\n    }\n    if (oauth) {\n        authConfig.Cognito.loginWith = {\n            oauth: {\n                domain: oauth.domain,\n                redirectSignIn: oauth.redirect_sign_in_uri,\n                redirectSignOut: oauth.redirect_sign_out_uri,\n                responseType: oauth.response_type === 'token' ? 'token' : 'code',\n                scopes: oauth.scopes,\n                providers: getOAuthProviders(oauth.identity_providers),\n            },\n        };\n    }\n    if (username_attributes) {\n        authConfig.Cognito.loginWith = {\n            ...authConfig.Cognito.loginWith,\n            email: username_attributes.includes('email'),\n            phone: username_attributes.includes('phone_number'),\n            // Signing in with a username is not currently supported in Gen2, this should always evaluate to false\n            username: username_attributes.includes('username'),\n        };\n    }\n    if (standard_required_attributes) {\n        authConfig.Cognito.userAttributes = standard_required_attributes.reduce((acc, curr) => ({ ...acc, [curr]: { required: true } }), {});\n    }\n    return authConfig;\n}\nexport function parseAnalytics(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties?.amazon_pinpoint) {\n        return undefined;\n    }\n    const { amazon_pinpoint } = amplifyOutputsAnalyticsProperties;\n    return {\n        Pinpoint: {\n            appId: amazon_pinpoint.app_id,\n            region: amazon_pinpoint.aws_region,\n        },\n    };\n}\nfunction parseGeo(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties) {\n        return undefined;\n    }\n    const { aws_region, geofence_collections, maps, search_indices } = amplifyOutputsAnalyticsProperties;\n    return {\n        LocationService: {\n            region: aws_region,\n            searchIndices: search_indices,\n            geofenceCollections: geofence_collections,\n            maps,\n        },\n    };\n}\nfunction parseData(amplifyOutputsDataProperties) {\n    if (!amplifyOutputsDataProperties) {\n        return undefined;\n    }\n    const { aws_region, default_authorization_type, url, api_key, model_introspection, } = amplifyOutputsDataProperties;\n    const GraphQL = {\n        endpoint: url,\n        defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n        region: aws_region,\n        apiKey: api_key,\n        modelIntrospection: model_introspection,\n    };\n    return {\n        GraphQL,\n    };\n}\nfunction parseCustom(amplifyOutputsCustomProperties) {\n    if (!amplifyOutputsCustomProperties?.events) {\n        return undefined;\n    }\n    const { url, aws_region, api_key, default_authorization_type } = amplifyOutputsCustomProperties.events;\n    const Events = {\n        endpoint: url,\n        defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n        region: aws_region,\n        apiKey: api_key,\n    };\n    return {\n        Events,\n    };\n}\nfunction parseNotifications(amplifyOutputsNotificationsProperties) {\n    if (!amplifyOutputsNotificationsProperties) {\n        return undefined;\n    }\n    const { aws_region, channels, amazon_pinpoint_app_id } = amplifyOutputsNotificationsProperties;\n    const hasInAppMessaging = channels.includes('IN_APP_MESSAGING');\n    const hasPushNotification = channels.includes('APNS') || channels.includes('FCM');\n    if (!(hasInAppMessaging || hasPushNotification)) {\n        return undefined;\n    }\n    // At this point, we know the Amplify outputs contains at least one supported channel\n    const notificationsConfig = {};\n    if (hasInAppMessaging) {\n        notificationsConfig.InAppMessaging = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    if (hasPushNotification) {\n        notificationsConfig.PushNotification = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    return notificationsConfig;\n}\nexport function parseAmplifyOutputs(amplifyOutputs) {\n    const resourcesConfig = {};\n    if (amplifyOutputs.storage) {\n        resourcesConfig.Storage = parseStorage(amplifyOutputs.storage);\n    }\n    if (amplifyOutputs.auth) {\n        resourcesConfig.Auth = parseAuth(amplifyOutputs.auth);\n    }\n    if (amplifyOutputs.analytics) {\n        resourcesConfig.Analytics = parseAnalytics(amplifyOutputs.analytics);\n    }\n    if (amplifyOutputs.geo) {\n        resourcesConfig.Geo = parseGeo(amplifyOutputs.geo);\n    }\n    if (amplifyOutputs.data) {\n        resourcesConfig.API = parseData(amplifyOutputs.data);\n    }\n    if (amplifyOutputs.custom) {\n        const customConfig = parseCustom(amplifyOutputs.custom);\n        if (customConfig && 'Events' in customConfig) {\n            resourcesConfig.API = { ...resourcesConfig.API, ...customConfig };\n        }\n    }\n    if (amplifyOutputs.notifications) {\n        resourcesConfig.Notifications = parseNotifications(amplifyOutputs.notifications);\n    }\n    return resourcesConfig;\n}\nconst authModeNames = {\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AWS_LAMBDA: 'lambda',\n    OPENID_CONNECT: 'oidc',\n};\nfunction getGraphQLAuthMode(authType) {\n    return authModeNames[authType];\n}\nconst providerNames = {\n    GOOGLE: 'Google',\n    LOGIN_WITH_AMAZON: 'Amazon',\n    FACEBOOK: 'Facebook',\n    SIGN_IN_WITH_APPLE: 'Apple',\n};\nfunction getOAuthProviders(providers = []) {\n    return providers.reduce((oAuthProviders, provider) => {\n        if (providerNames[provider] !== undefined) {\n            oAuthProviders.push(providerNames[provider]);\n        }\n        return oAuthProviders;\n    }, []);\n}\nfunction getMfaStatus(mfaConfiguration) {\n    if (mfaConfiguration === 'OPTIONAL')\n        return 'optional';\n    if (mfaConfiguration === 'REQUIRED')\n        return 'on';\n    return 'off';\n}\nfunction createBucketInfoMap(buckets) {\n    const mappedBuckets = {};\n    buckets.forEach(({ name, bucket_name: bucketName, aws_region: region, paths }) => {\n        if (name in mappedBuckets) {\n            throw new Error(`Duplicate friendly name found: ${name}. Name must be unique.`);\n        }\n        const sanitizedPaths = paths\n            ? Object.entries(paths).reduce((acc, [key, value]) => {\n                if (value !== undefined) {\n                    acc[key] = value;\n                }\n                return acc;\n            }, {})\n            : undefined;\n        mappedBuckets[name] = {\n            bucketName,\n            region,\n            paths: sanitizedPaths,\n        };\n    });\n    return mappedBuckets;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseAWSExports } from '../parseAWSExports';\nimport { isAmplifyOutputs, parseAmplifyOutputs } from '../parseAmplifyOutputs';\n/**\n * Parses the variety of configuration shapes that Amplify can accept into a ResourcesConfig.\n *\n * @param amplifyConfig An Amplify configuration object conforming to one of the supported schemas.\n * @return A ResourcesConfig for the provided configuration object.\n */\nexport const parseAmplifyConfig = (amplifyConfig) => {\n    if (Object.keys(amplifyConfig).some(key => key.startsWith('aws_'))) {\n        return parseAWSExports(amplifyConfig);\n    }\n    else if (isAmplifyOutputs(amplifyConfig)) {\n        return parseAmplifyOutputs(amplifyConfig);\n    }\n    else {\n        return amplifyConfig;\n    }\n};\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n  extendStatics = Object.setPrototypeOf ||\r\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n  return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n  if (typeof b !== \"function\" && b !== null)\r\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n  extendStatics(d, b);\r\n  function __() { this.constructor = d; }\r\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n  __assign = Object.assign || function __assign(t) {\r\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n          s = arguments[i];\r\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n      }\r\n      return t;\r\n  }\r\n  return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n  var t = {};\r\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n      t[p] = s[p];\r\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n              t[p[i]] = s[p[i]];\r\n      }\r\n  return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n  return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n  var _, done = false;\r\n  for (var i = decorators.length - 1; i >= 0; i--) {\r\n      var context = {};\r\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n      if (kind === \"accessor\") {\r\n          if (result === void 0) continue;\r\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n          if (_ = accept(result.get)) descriptor.get = _;\r\n          if (_ = accept(result.set)) descriptor.set = _;\r\n          if (_ = accept(result.init)) initializers.unshift(_);\r\n      }\r\n      else if (_ = accept(result)) {\r\n          if (kind === \"field\") initializers.unshift(_);\r\n          else descriptor[key] = _;\r\n      }\r\n  }\r\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n  done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n  var useValue = arguments.length > 2;\r\n  for (var i = 0; i < initializers.length; i++) {\r\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n  }\r\n  return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n  return new (P || (P = Promise))(function (resolve, reject) {\r\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n  });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n  function verb(n) { return function (v) { return step([n, v]); }; }\r\n  function step(op) {\r\n      if (f) throw new TypeError(\"Generator is already executing.\");\r\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n          if (y = 0, t) op = [op[0] & 2, t.value];\r\n          switch (op[0]) {\r\n              case 0: case 1: t = op; break;\r\n              case 4: _.label++; return { value: op[1], done: false };\r\n              case 5: _.label++; y = op[1]; op = [0]; continue;\r\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n              default:\r\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                  if (t[2]) _.ops.pop();\r\n                  _.trys.pop(); continue;\r\n          }\r\n          op = body.call(thisArg, _);\r\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n  }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n  if (k2 === undefined) k2 = k;\r\n  var desc = Object.getOwnPropertyDescriptor(m, k);\r\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n  }\r\n  Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n  if (k2 === undefined) k2 = k;\r\n  o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n  if (m) return m.call(o);\r\n  if (o && typeof o.length === \"number\") return {\r\n      next: function () {\r\n          if (o && i >= o.length) o = void 0;\r\n          return { value: o && o[i++], done: !o };\r\n      }\r\n  };\r\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n  if (!m) return o;\r\n  var i = m.call(o), r, ar = [], e;\r\n  try {\r\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n  }\r\n  catch (error) { e = { error: error }; }\r\n  finally {\r\n      try {\r\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n      }\r\n      finally { if (e) throw e.error; }\r\n  }\r\n  return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n  for (var ar = [], i = 0; i < arguments.length; i++)\r\n      ar = ar.concat(__read(arguments[i]));\r\n  return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n          r[k] = a[j];\r\n  return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n      if (ar || !(i in from)) {\r\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n          ar[i] = from[i];\r\n      }\r\n  }\r\n  return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n  function fulfill(value) { resume(\"next\", value); }\r\n  function reject(value) { resume(\"throw\", value); }\r\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n  var i, p;\r\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n  var m = o[Symbol.asyncIterator], i;\r\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n  return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n  o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n  ownKeys = Object.getOwnPropertyNames || function (o) {\r\n    var ar = [];\r\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n    return ar;\r\n  };\r\n  return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n  if (mod && mod.__esModule) return mod;\r\n  var result = {};\r\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n  __setModuleDefault(result, mod);\r\n  return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n  return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n  if (value !== null && value !== void 0) {\r\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n    var dispose, inner;\r\n    if (async) {\r\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n      dispose = value[Symbol.asyncDispose];\r\n    }\r\n    if (dispose === void 0) {\r\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n      dispose = value[Symbol.dispose];\r\n      if (async) inner = dispose;\r\n    }\r\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n    env.stack.push({ value: value, dispose: dispose, async: async });\r\n  }\r\n  else if (async) {\r\n    env.stack.push({ async: true });\r\n  }\r\n  return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n  var e = new Error(message);\r\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n  function fail(e) {\r\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n    env.hasError = true;\r\n  }\r\n  var r, s = 0;\r\n  function next() {\r\n    while (r = env.stack.pop()) {\r\n      try {\r\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n        if (r.dispose) {\r\n          var result = r.dispose.call(r.value);\r\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n        }\r\n        else s |= 1;\r\n      }\r\n      catch (e) {\r\n        fail(e);\r\n      }\r\n    }\r\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n    if (env.hasError) throw env.error;\r\n  }\r\n  return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n      });\r\n  }\r\n  return path;\r\n}\r\n\r\nexport default {\r\n  __extends,\r\n  __assign,\r\n  __rest,\r\n  __decorate,\r\n  __param,\r\n  __esDecorate,\r\n  __runInitializers,\r\n  __propKey,\r\n  __setFunctionName,\r\n  __metadata,\r\n  __awaiter,\r\n  __generator,\r\n  __createBinding,\r\n  __exportStar,\r\n  __values,\r\n  __read,\r\n  __spread,\r\n  __spreadArrays,\r\n  __spreadArray,\r\n  __await,\r\n  __asyncGenerator,\r\n  __asyncDelegator,\r\n  __asyncValues,\r\n  __makeTemplateObject,\r\n  __importStar,\r\n  __importDefault,\r\n  __classPrivateFieldGet,\r\n  __classPrivateFieldSet,\r\n  __classPrivateFieldIn,\r\n  __addDisposableResource,\r\n  __disposeResources,\r\n  __rewriteRelativeImportExtension,\r\n};\r\n", "/**\r\n * @internal\r\n */\r\nexport const BLOCK_SIZE: number = 64;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const DIGEST_LENGTH: number = 32;\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const KEY = new Uint32Array([\r\n  0x428a2f98,\r\n  0x71374491,\r\n  0xb5c0fbcf,\r\n  0xe9b5dba5,\r\n  0x3956c25b,\r\n  0x59f111f1,\r\n  0x923f82a4,\r\n  0xab1c5ed5,\r\n  0xd807aa98,\r\n  0x12835b01,\r\n  0x243185be,\r\n  0x550c7dc3,\r\n  0x72be5d74,\r\n  0x80deb1fe,\r\n  0x9bdc06a7,\r\n  0xc19bf174,\r\n  0xe49b69c1,\r\n  0xefbe4786,\r\n  0x0fc19dc6,\r\n  0x240ca1cc,\r\n  0x2de92c6f,\r\n  0x4a7484aa,\r\n  0x5cb0a9dc,\r\n  0x76f988da,\r\n  0x983e5152,\r\n  0xa831c66d,\r\n  0xb00327c8,\r\n  0xbf597fc7,\r\n  0xc6e00bf3,\r\n  0xd5a79147,\r\n  0x06ca6351,\r\n  0x14292967,\r\n  0x27b70a85,\r\n  0x2e1b2138,\r\n  0x4d2c6dfc,\r\n  0x53380d13,\r\n  0x650a7354,\r\n  0x766a0abb,\r\n  0x81c2c92e,\r\n  0x92722c85,\r\n  0xa2bfe8a1,\r\n  0xa81a664b,\r\n  0xc24b8b70,\r\n  0xc76c51a3,\r\n  0xd192e819,\r\n  0xd6990624,\r\n  0xf40e3585,\r\n  0x106aa070,\r\n  0x19a4c116,\r\n  0x1e376c08,\r\n  0x2748774c,\r\n  0x34b0bcb5,\r\n  0x391c0cb3,\r\n  0x4ed8aa4a,\r\n  0x5b9cca4f,\r\n  0x682e6ff3,\r\n  0x748f82ee,\r\n  0x78a5636f,\r\n  0x84c87814,\r\n  0x8cc70208,\r\n  0x90befffa,\r\n  0xa4506ceb,\r\n  0xbef9a3f7,\r\n  0xc67178f2\r\n]);\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const INIT = [\r\n  0x6a09e667,\r\n  0xbb67ae85,\r\n  0x3c6ef372,\r\n  0xa54ff53a,\r\n  0x510e527f,\r\n  0x9b05688c,\r\n  0x1f83d9ab,\r\n  0x5be0cd19\r\n];\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\r\n", "import {\r\n  BLOCK_SIZE,\r\n  DIGEST_LENGTH,\r\n  INIT,\r\n  KEY,\r\n  MAX_HASHABLE_LENGTH\r\n} from \"./constants\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class RawSha256 {\r\n  private state: Int32Array = Int32Array.from(INIT);\r\n  private temp: Int32Array = new Int32Array(64);\r\n  private buffer: Uint8Array = new Uint8Array(64);\r\n  private bufferLength: number = 0;\r\n  private bytesHashed: number = 0;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  finished: boolean = false;\r\n\r\n  update(data: Uint8Array): void {\r\n    if (this.finished) {\r\n      throw new Error(\"Attempted to update an already finished hash.\");\r\n    }\r\n\r\n    let position = 0;\r\n    let { byteLength } = data;\r\n    this.bytesHashed += byteLength;\r\n\r\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\r\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\r\n    }\r\n\r\n    while (byteLength > 0) {\r\n      this.buffer[this.bufferLength++] = data[position++];\r\n      byteLength--;\r\n\r\n      if (this.bufferLength === BLOCK_SIZE) {\r\n        this.hashBuffer();\r\n        this.bufferLength = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  digest(): Uint8Array {\r\n    if (!this.finished) {\r\n      const bitsHashed = this.bytesHashed * 8;\r\n      const bufferView = new DataView(\r\n        this.buffer.buffer,\r\n        this.buffer.byteOffset,\r\n        this.buffer.byteLength\r\n      );\r\n\r\n      const undecoratedLength = this.bufferLength;\r\n      bufferView.setUint8(this.bufferLength++, 0x80);\r\n\r\n      // Ensure the final block has enough room for the hashed length\r\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\r\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\r\n          bufferView.setUint8(i, 0);\r\n        }\r\n        this.hashBuffer();\r\n        this.bufferLength = 0;\r\n      }\r\n\r\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\r\n        bufferView.setUint8(i, 0);\r\n      }\r\n      bufferView.setUint32(\r\n        BLOCK_SIZE - 8,\r\n        Math.floor(bitsHashed / 0x100000000),\r\n        true\r\n      );\r\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\r\n\r\n      this.hashBuffer();\r\n\r\n      this.finished = true;\r\n    }\r\n\r\n    // The value in state is little-endian rather than big-endian, so flip\r\n    // each word into a new Uint8Array\r\n    const out = new Uint8Array(DIGEST_LENGTH);\r\n    for (let i = 0; i < 8; i++) {\r\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\r\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\r\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\r\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\r\n    }\r\n\r\n    return out;\r\n  }\r\n\r\n  private hashBuffer(): void {\r\n    const { buffer, state } = this;\r\n\r\n    let state0 = state[0],\r\n      state1 = state[1],\r\n      state2 = state[2],\r\n      state3 = state[3],\r\n      state4 = state[4],\r\n      state5 = state[5],\r\n      state6 = state[6],\r\n      state7 = state[7];\r\n\r\n    for (let i = 0; i < BLOCK_SIZE; i++) {\r\n      if (i < 16) {\r\n        this.temp[i] =\r\n          ((buffer[i * 4] & 0xff) << 24) |\r\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\r\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\r\n          (buffer[i * 4 + 3] & 0xff);\r\n      } else {\r\n        let u = this.temp[i - 2];\r\n        const t1 =\r\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\r\n\r\n        u = this.temp[i - 15];\r\n        const t2 =\r\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\r\n\r\n        this.temp[i] =\r\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\r\n      }\r\n\r\n      const t1 =\r\n        ((((((state4 >>> 6) | (state4 << 26)) ^\r\n          ((state4 >>> 11) | (state4 << 21)) ^\r\n          ((state4 >>> 25) | (state4 << 7))) +\r\n          ((state4 & state5) ^ (~state4 & state6))) |\r\n          0) +\r\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\r\n        0;\r\n\r\n      const t2 =\r\n        ((((state0 >>> 2) | (state0 << 30)) ^\r\n          ((state0 >>> 13) | (state0 << 19)) ^\r\n          ((state0 >>> 22) | (state0 << 10))) +\r\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\r\n        0;\r\n\r\n      state7 = state6;\r\n      state6 = state5;\r\n      state5 = state4;\r\n      state4 = (state3 + t1) | 0;\r\n      state3 = state2;\r\n      state2 = state1;\r\n      state1 = state0;\r\n      state0 = (t1 + t2) | 0;\r\n    }\r\n\r\n    state[0] += state0;\r\n    state[1] += state1;\r\n    state[2] += state2;\r\n    state[3] += state3;\r\n    state[4] += state4;\r\n    state[5] += state5;\r\n    state[6] += state6;\r\n    state[7] += state7;\r\n  }\r\n}\r\n", "export const fromUtf8 = (input) => new TextEncoder().encode(input);\r\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport { SourceData } from \"@aws-sdk/types\";\r\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\r\n\r\n// Quick polyfill\r\nconst fromUtf8 =\r\n  typeof Buffer !== \"undefined\" && Buffer.from\r\n    ? (input: string) => Buffer.from(input, \"utf8\")\r\n    : fromUtf8Browser;\r\n\r\nexport function convertToBuffer(data: SourceData): Uint8Array {\r\n  // Already a Uint8, do nothing\r\n  if (data instanceof Uint8Array) return data;\r\n\r\n  if (typeof data === \"string\") {\r\n    return fromUtf8(data);\r\n  }\r\n\r\n  if (ArrayBuffer.isView(data)) {\r\n    return new Uint8Array(\r\n      data.buffer,\r\n      data.byteOffset,\r\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\r\n    );\r\n  }\r\n\r\n  return new Uint8Array(data);\r\n}\r\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport { SourceData } from \"@aws-sdk/types\";\r\n\r\nexport function isEmptyData(data: SourceData): boolean {\r\n  if (typeof data === \"string\") {\r\n    return data.length === 0;\r\n  }\r\n\r\n  return data.byteLength === 0;\r\n}\r\n", "import { BLOCK_SIZE } from \"./constants\";\r\nimport { RawSha256 } from \"./RawSha256\";\r\nimport { Checksum, SourceData } from \"@aws-sdk/types\";\r\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\r\n\r\nexport class Sha256 implements Checksum {\r\n  private readonly secret?: SourceData;\r\n  private hash: RawSha256;\r\n  private outer?: RawSha256;\r\n  private error: any;\r\n\r\n  constructor(secret?: SourceData) {\r\n    this.secret = secret;\r\n    this.hash = new RawSha256();\r\n    this.reset();\r\n  }\r\n\r\n  update(toHash: SourceData): void {\r\n    if (isEmptyData(toHash) || this.error) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.hash.update(convertToBuffer(toHash));\r\n    } catch (e) {\r\n      this.error = e;\r\n    }\r\n  }\r\n\r\n  /* This synchronous method keeps compatibility\r\n   * with the v2 aws-sdk.\r\n   */\r\n  digestSync(): Uint8Array {\r\n    if (this.error) {\r\n      throw this.error;\r\n    }\r\n\r\n    if (this.outer) {\r\n      if (!this.outer.finished) {\r\n        this.outer.update(this.hash.digest());\r\n      }\r\n\r\n      return this.outer.digest();\r\n    }\r\n\r\n    return this.hash.digest();\r\n  }\r\n\r\n  /* The underlying digest method here is synchronous.\r\n   * To keep the same interface with the other hash functions\r\n   * the default is to expose this as an async method.\r\n   * However, it can sometimes be useful to have a sync method.\r\n   */\r\n  async digest(): Promise<Uint8Array> {\r\n    return this.digestSync();\r\n  }\r\n\r\n  reset(): void {\r\n    this.hash = new RawSha256();\r\n    if (this.secret) {\r\n      this.outer = new RawSha256();\r\n      const inner = bufferFromSecret(this.secret);\r\n      const outer = new Uint8Array(BLOCK_SIZE);\r\n      outer.set(inner);\r\n\r\n      for (let i = 0; i < BLOCK_SIZE; i++) {\r\n        inner[i] ^= 0x36;\r\n        outer[i] ^= 0x5c;\r\n      }\r\n\r\n      this.hash.update(inner);\r\n      this.outer.update(outer);\r\n\r\n      // overwrite the copied key in memory\r\n      for (let i = 0; i < inner.byteLength; i++) {\r\n        inner[i] = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\r\n  let input = convertToBuffer(secret);\r\n\r\n  if (input.byteLength > BLOCK_SIZE) {\r\n    const bufferHash = new RawSha256();\r\n    bufferHash.update(input);\r\n    input = bufferHash.digest();\r\n  }\r\n\r\n  const buffer = new Uint8Array(BLOCK_SIZE);\r\n  buffer.set(input);\r\n  return buffer;\r\n}\r\n", "const SHORT_TO_HEX = {};\r\nconst HEX_TO_SHORT = {};\r\nfor (let i = 0; i < 256; i++) {\r\n    let encodedByte = i.toString(16).toLowerCase();\r\n    if (encodedByte.length === 1) {\r\n        encodedByte = `0${encodedByte}`;\r\n    }\r\n    SHORT_TO_HEX[i] = encodedByte;\r\n    HEX_TO_SHORT[encodedByte] = i;\r\n}\r\nexport function fromHex(encoded) {\r\n    if (encoded.length % 2 !== 0) {\r\n        throw new Error(\"Hex encoded strings must have an even number length\");\r\n    }\r\n    const out = new Uint8Array(encoded.length / 2);\r\n    for (let i = 0; i < encoded.length; i += 2) {\r\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\r\n        if (encodedByte in HEX_TO_SHORT) {\r\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\r\n        }\r\n        else {\r\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\r\n        }\r\n    }\r\n    return out;\r\n}\r\nexport function toHex(bytes) {\r\n    let out = \"\";\r\n    for (let i = 0; i < bytes.byteLength; i++) {\r\n        out += SHORT_TO_HEX[bytes[i]];\r\n    }\r\n    return out;\r\n}\r\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var Framework;\n(function (Framework) {\n    // < 100 - Web frameworks\n    Framework[\"WebUnknown\"] = \"0\";\n    Framework[\"React\"] = \"1\";\n    Framework[\"NextJs\"] = \"2\";\n    Framework[\"Angular\"] = \"3\";\n    Framework[\"VueJs\"] = \"4\";\n    Framework[\"Nuxt\"] = \"5\";\n    Framework[\"Svelte\"] = \"6\";\n    // 100s - Server side frameworks\n    Framework[\"ServerSideUnknown\"] = \"100\";\n    Framework[\"ReactSSR\"] = \"101\";\n    Framework[\"NextJsSSR\"] = \"102\";\n    Framework[\"AngularSSR\"] = \"103\";\n    Framework[\"VueJsSSR\"] = \"104\";\n    Framework[\"NuxtSSR\"] = \"105\";\n    Framework[\"SvelteSSR\"] = \"106\";\n    // 200s - Mobile framework\n    Framework[\"ReactNative\"] = \"201\";\n    Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nexport var Category;\n(function (Category) {\n    Category[\"AI\"] = \"ai\";\n    Category[\"API\"] = \"api\";\n    Category[\"Auth\"] = \"auth\";\n    Category[\"Analytics\"] = \"analytics\";\n    Category[\"DataStore\"] = \"datastore\";\n    Category[\"Geo\"] = \"geo\";\n    Category[\"InAppMessaging\"] = \"inappmessaging\";\n    Category[\"Interactions\"] = \"interactions\";\n    Category[\"Predictions\"] = \"predictions\";\n    Category[\"PubSub\"] = \"pubsub\";\n    Category[\"PushNotification\"] = \"pushnotification\";\n    Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nexport var AiAction;\n(function (AiAction) {\n    AiAction[\"CreateConversation\"] = \"1\";\n    AiAction[\"GetConversation\"] = \"2\";\n    AiAction[\"ListConversations\"] = \"3\";\n    AiAction[\"DeleteConversation\"] = \"4\";\n    AiAction[\"SendMessage\"] = \"5\";\n    AiAction[\"ListMessages\"] = \"6\";\n    AiAction[\"OnMessage\"] = \"7\";\n    AiAction[\"Generation\"] = \"8\";\n    AiAction[\"UpdateConversation\"] = \"9\";\n})(AiAction || (AiAction = {}));\nexport var AnalyticsAction;\n(function (AnalyticsAction) {\n    AnalyticsAction[\"Record\"] = \"1\";\n    AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nexport var ApiAction;\n(function (ApiAction) {\n    ApiAction[\"GraphQl\"] = \"1\";\n    ApiAction[\"Get\"] = \"2\";\n    ApiAction[\"Post\"] = \"3\";\n    ApiAction[\"Put\"] = \"4\";\n    ApiAction[\"Patch\"] = \"5\";\n    ApiAction[\"Del\"] = \"6\";\n    ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nexport var AuthAction;\n(function (AuthAction) {\n    AuthAction[\"SignUp\"] = \"1\";\n    AuthAction[\"ConfirmSignUp\"] = \"2\";\n    AuthAction[\"ResendSignUpCode\"] = \"3\";\n    AuthAction[\"SignIn\"] = \"4\";\n    AuthAction[\"FetchMFAPreference\"] = \"6\";\n    AuthAction[\"UpdateMFAPreference\"] = \"7\";\n    AuthAction[\"SetUpTOTP\"] = \"10\";\n    AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n    AuthAction[\"ConfirmSignIn\"] = \"12\";\n    AuthAction[\"DeleteUserAttributes\"] = \"15\";\n    AuthAction[\"DeleteUser\"] = \"16\";\n    AuthAction[\"UpdateUserAttributes\"] = \"17\";\n    AuthAction[\"FetchUserAttributes\"] = \"18\";\n    AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n    AuthAction[\"SignOut\"] = \"26\";\n    AuthAction[\"UpdatePassword\"] = \"27\";\n    AuthAction[\"ResetPassword\"] = \"28\";\n    AuthAction[\"ConfirmResetPassword\"] = \"29\";\n    AuthAction[\"FederatedSignIn\"] = \"30\";\n    AuthAction[\"RememberDevice\"] = \"32\";\n    AuthAction[\"ForgetDevice\"] = \"33\";\n    AuthAction[\"FetchDevices\"] = \"34\";\n    AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n    AuthAction[\"SignInWithRedirect\"] = \"36\";\n    AuthAction[\"StartWebAuthnRegistration\"] = \"37\";\n    AuthAction[\"CompleteWebAuthnRegistration\"] = \"38\";\n    AuthAction[\"ListWebAuthnCredentials\"] = \"39\";\n    AuthAction[\"DeleteWebAuthnCredential\"] = \"40\";\n})(AuthAction || (AuthAction = {}));\nexport var DataStoreAction;\n(function (DataStoreAction) {\n    DataStoreAction[\"Subscribe\"] = \"1\";\n    DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nexport var GeoAction;\n(function (GeoAction) {\n    GeoAction[\"SearchByText\"] = \"0\";\n    GeoAction[\"SearchByCoordinates\"] = \"1\";\n    GeoAction[\"SearchForSuggestions\"] = \"2\";\n    GeoAction[\"SearchByPlaceId\"] = \"3\";\n    GeoAction[\"SaveGeofences\"] = \"4\";\n    GeoAction[\"GetGeofence\"] = \"5\";\n    GeoAction[\"ListGeofences\"] = \"6\";\n    GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nexport var InAppMessagingAction;\n(function (InAppMessagingAction) {\n    InAppMessagingAction[\"SyncMessages\"] = \"1\";\n    InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n    InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nexport var InteractionsAction;\n(function (InteractionsAction) {\n    InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nexport var PredictionsAction;\n(function (PredictionsAction) {\n    PredictionsAction[\"Convert\"] = \"1\";\n    PredictionsAction[\"Identify\"] = \"2\";\n    PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nexport var PubSubAction;\n(function (PubSubAction) {\n    PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nexport var PushNotificationAction;\n(function (PushNotificationAction) {\n    PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n    PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nexport var StorageAction;\n(function (StorageAction) {\n    StorageAction[\"UploadData\"] = \"1\";\n    StorageAction[\"DownloadData\"] = \"2\";\n    StorageAction[\"List\"] = \"3\";\n    StorageAction[\"Copy\"] = \"4\";\n    StorageAction[\"Remove\"] = \"5\";\n    StorageAction[\"GetProperties\"] = \"6\";\n    StorageAction[\"GetUrl\"] = \"7\";\n    StorageAction[\"GetDataAccess\"] = \"8\";\n    StorageAction[\"ListCallerAccessGrants\"] = \"9\";\n})(StorageAction || (StorageAction = {}));\n", "// generated by genversion\nexport const version = '6.14.3';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const globalExists = () => {\n    return typeof global !== 'undefined';\n};\nexport const globalThisExists = () => {\n    return typeof globalThis !== 'undefined';\n};\nexport const windowExists = () => {\n    return typeof window !== 'undefined';\n};\nexport const documentExists = () => {\n    return typeof document !== 'undefined';\n};\nexport const processExists = () => {\n    return typeof process !== 'undefined';\n};\nexport const keyPrefixMatch = (object, prefix) => {\n    return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { documentExists, processExists } from './helpers';\n// Tested with react 18.2 - built using Vite\nexport function reactWebDetect() {\n    const elementKeyPrefixedWithReact = (key) => {\n        return key.startsWith('_react') || key.startsWith('__react');\n    };\n    const elementIsReactEnabled = (element) => {\n        return Object.keys(element).find(elementKeyPrefixedWithReact);\n    };\n    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nexport function reactSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('react')));\n}\n// use the some\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, keyPrefixMatch, windowExists } from './helpers';\n// Tested with vue 3.3.2\nexport function vueWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__VUE');\n}\nexport function vueSSRDetect() {\n    return globalExists() && keyPrefixMatch(global, '__VUE');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { keyPrefixMatch, processExists, windowExists } from './helpers';\n// Tested with svelte 3.59\nexport function svelteWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nexport function svelteSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('svelte')));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, keyPrefixMatch, windowExists } from './helpers';\n// Tested with next 13.4 / react 18.2\nexport function nextWebDetect() {\n    return (windowExists() &&\n        window.next &&\n        typeof window.next === 'object');\n}\nexport function nextSSRDetect() {\n    return (globalExists() &&\n        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists, windowExists } from './helpers';\n// Tested with nuxt 2.15 / vue 2.7\nexport function nuxtWebDetect() {\n    return (windowExists() &&\n        (window.__NUXT__ !== undefined ||\n            window.$nuxt !== undefined));\n}\nexport function nuxtSSRDetect() {\n    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { documentExists, processExists, windowExists } from './helpers';\n// Tested with @angular/core 16.0.0\nexport function angularWebDetect() {\n    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n    return angularVersionSetInDocument || angularContentSetInWindow;\n}\nexport function angularSSRDetect() {\n    return ((processExists() &&\n        typeof process.env === 'object' &&\n        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n        false);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react-native 0.17.7\nexport function reactNativeDetect() {\n    return (typeof navigator !== 'undefined' &&\n        typeof navigator.product !== 'undefined' &&\n        navigator.product === 'ReactNative');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { globalExists } from './helpers';\n// Tested with expo 48 / react-native 0.71.3\nexport function expoDetect() {\n    return globalExists() && typeof global.expo !== 'undefined';\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { windowExists } from './helpers';\nexport function webDetect() {\n    return windowExists();\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from '../types';\nimport { reactSSRDetect, reactWebDetect } from './React';\nimport { vueSSRDetect, vueWebDetect } from './Vue';\nimport { svelteSSRDetect, svelteWebDetect } from './Svelte';\nimport { nextSSRDetect, nextWebDetect } from './Next';\nimport { nuxtSSRDetect, nuxtWebDetect } from './Nuxt';\nimport { angularSSRDetect, angularWebDetect } from './Angular';\nimport { reactNativeDetect } from './ReactNative';\nimport { expoDetect } from './Expo';\nimport { webDetect } from './Web';\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nexport function detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from './types';\nimport { detect } from './detection';\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nexport const frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nexport const detectFramework = () => {\n    if (!frameworkCache) {\n        frameworkCache = detect();\n        if (resetTriggered) {\n            // The final run of detectFramework:\n            // Starting from this point, the `frameworkCache` becomes \"final\".\n            // So we don't need to notify the observers again so the observer\n            // can be removed after the final notice.\n            while (frameworkChangeObservers.length) {\n                frameworkChangeObservers.pop()?.();\n            }\n        }\n        else {\n            // The first run of detectFramework:\n            // Every time we update the cache, call each observer function\n            frameworkChangeObservers.forEach(fcn => {\n                fcn();\n            });\n        }\n        // Retry once for either Unknown type after a delay (explained below)\n        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n    }\n    return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nexport const observeFrameworkChanges = (fcn) => {\n    // When the `frameworkCache` won't be updated again, we ignore all incoming\n    // observers.\n    if (resetTriggered) {\n        return;\n    }\n    frameworkChangeObservers.push(fcn);\n};\nexport function clearCache() {\n    frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n    if (frameworkCache === framework && !resetTriggered) {\n        setTimeout(() => {\n            clearCache();\n            resetTriggered = true;\n            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n        }, delay);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nexport const setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nexport const getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from './types';\nimport { version } from './version';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework';\nimport { getCustomUserAgent } from './customUserAgent';\nconst BASE_USER_AGENT = `aws-amplify`;\n/** Sanitize Amplify version string be removing special character + and character post the special character  */\nexport const sanitizeAmplifyVersion = (amplifyVersion) => amplifyVersion.replace(/\\+.*/, '');\nclass PlatformBuilder {\n    constructor() {\n        this.userAgent = `${BASE_USER_AGENT}/${sanitizeAmplifyVersion(version)}`;\n    }\n    get framework() {\n        return detectFramework();\n    }\n    get isReactNative() {\n        return (this.framework === Framework.ReactNative ||\n            this.framework === Framework.Expo);\n    }\n    observeFrameworkChanges(fcn) {\n        observeFrameworkChanges(fcn);\n    }\n}\nexport const Platform = new PlatformBuilder();\nexport const getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n    const userAgent = [\n        [BASE_USER_AGENT, sanitizeAmplifyVersion(version)],\n    ];\n    if (category) {\n        userAgent.push([category, action]);\n    }\n    userAgent.push(['framework', detectFramework()]);\n    if (category && action) {\n        const customState = getCustomUserAgent(category, action);\n        if (customState) {\n            customState.forEach(state => {\n                userAgent.push(state);\n            });\n        }\n    }\n    return userAgent;\n};\nexport const getAmplifyUserAgent = (customUserAgentDetails) => {\n    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n    const userAgentString = userAgent\n        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n        .join(' ');\n    return userAgentString;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\n", "export class AuthClass {\n    /**\n     * Configure Auth category\n     *\n     * @internal\n     *\n     * @param authResourcesConfig - Resources configurations required by Auth providers.\n     * @param authOptions - Client options used by library\n     *\n     * @returns void\n     */\n    configure(authResourcesConfig, authOptions) {\n        this.authConfig = authResourcesConfig;\n        this.authOptions = authOptions;\n    }\n    /**\n     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n     * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n     * with `{ forceRefresh: true }` input.\n     *\n     * @param options - Options configuring the fetch behavior.\n     *\n     * @returns Promise of current auth session {@link AuthSession}.\n     */\n    async fetchAuthSession(options = {}) {\n        let credentialsAndIdentityId;\n        let userSub;\n        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n        const tokens = await this.getTokens(options);\n        if (tokens) {\n            userSub = tokens.accessToken?.payload?.sub;\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    tokens,\n                    authenticated: true,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        else {\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    authenticated: false,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        return {\n            tokens,\n            credentials: credentialsAndIdentityId?.credentials,\n            identityId: credentialsAndIdentityId?.identityId,\n            userSub,\n        };\n    }\n    async clearCredentials() {\n        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n    }\n    async getTokens(options) {\n        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMPLIFY_SYMBOL, Hub } from '../Hub';\nimport { deepFreeze } from '../utils';\nimport { parseAmplifyConfig } from '../libraryUtils';\nimport { AuthClass } from './Auth';\nimport { ADD_OAUTH_LISTENER } from './constants';\nexport class AmplifyClass {\n    constructor() {\n        this.oAuthListener = undefined;\n        this.resourcesConfig = {};\n        this.libraryOptions = {};\n        this.Auth = new AuthClass();\n    }\n    /**\n     * Configures Amplify for use with your back-end resources.\n     *\n     * @remarks\n     * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n     * provided values will be used after configuration.\n     *\n     * @remarks\n     * `configure` can be used to specify additional library options where available for supported categories.\n     *\n     * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n     * @param libraryOptions - Additional options for customizing the behavior of the library.\n     */\n    configure(resourcesConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourcesConfig);\n        this.resourcesConfig = resolvedResourceConfig;\n        if (libraryOptions) {\n            this.libraryOptions = libraryOptions;\n        }\n        // Make resource config immutable\n        this.resourcesConfig = deepFreeze(this.resourcesConfig);\n        this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n        Hub.dispatch('core', {\n            event: 'configure',\n            data: this.resourcesConfig,\n        }, 'Configure', AMPLIFY_SYMBOL);\n        this.notifyOAuthListener();\n    }\n    /**\n     * Provides access to the current back-end resource configuration for the Library.\n     *\n     * @returns Returns the immutable back-end resource configuration.\n     */\n    getConfig() {\n        return this.resourcesConfig;\n    }\n    /** @internal */\n    [ADD_OAUTH_LISTENER](listener) {\n        if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n            // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n            listener(this.resourcesConfig.Auth?.Cognito);\n        }\n        else {\n            // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n            this.oAuthListener = listener;\n        }\n    }\n    notifyOAuthListener() {\n        if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth ||\n            !this.oAuthListener) {\n            return;\n        }\n        this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n        // the listener should only be notified once with a valid oauth config\n        this.oAuthListener = undefined;\n    }\n}\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` orchestrates cross-category communication within the library.\n */\nexport const Amplify = new AmplifyClass();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const fetchAuthSession = (amplify, options) => {\n    return amplify.Auth.fetchAuthSession(options);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '../Amplify';\nimport { fetchAuthSession as fetchAuthSessionInternal } from './internal/fetchAuthSession';\n/**\n * Fetch the auth session including the tokens and credentials if they are available. By default it\n * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n * with `{ forceRefresh: true }` input.\n *\n * @param options - Options configuring the fetch behavior.\n * @throws {@link AuthError} - Throws error when session information cannot be refreshed.\n * @returns Promise<AuthSession>\n */\nexport const fetchAuthSession = (options) => {\n    return fetchAuthSessionInternal(Amplify, options);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseMetadata } from './responseInfo';\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nexport const parseJsonError = async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const body = await parseJsonBody(response);\n    const sanitizeErrorCode = (rawValue) => {\n        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n        if (cleanValue.includes('#')) {\n            return cleanValue.split('#')[1];\n        }\n        return cleanValue;\n    };\n    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n        body.code ??\n        body.__type ??\n        'UnknownError');\n    const message = body.message ?? body.Message ?? 'Unknown error';\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nexport const parseJsonBody = async (response) => {\n    if (!response.body) {\n        throw new Error('Missing response payload');\n    }\n    const output = await response.body.json();\n    return Object.assign(output, {\n        $metadata: parseMetadata(response),\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a service API handler that accepts input as defined shape and responds conforming to defined output shape.\n * A service API handler is composed with:\n * * A transfer handler\n * * A serializer function\n * * A deserializer function\n * * A default config object\n *\n * The returned service API handler, when called, will trigger the following workflow:\n * 1. When calling the service API handler function, the default config object is merged into the input config\n * object to assign the default values of some omitted configs, resulting to a resolved config object.\n * 2. The `endpointResolver` function from the default config object will be invoked with the resolved config object and\n * API input object resulting to an endpoint instance.\n * 3. The serializer function is invoked with API input object and the endpoint instance resulting to an HTTP request\n * instance.\n * 4. The HTTP request instance and the resolved config object is passed to the transfer handler function.\n * 5. The transfer handler function resolves to an HTTP response instance(can be either successful or failed status code).\n * 6. The deserializer function is invoked with the HTTP response instance resulting to the API output object, and\n * return to the caller.\n *\n *\n * @param transferHandler Async function for dispatching HTTP requests and returning HTTP response.\n * @param serializer  Async function for converting object in defined input shape into HTTP request targeting a given\n * \tendpoint.\n * @param deserializer Async function for converting HTTP response into output object in defined output shape, or error\n * \tshape.\n * @param defaultConfig  object containing default options to be consumed by transfer handler, serializer and\n *  deserializer.\n * @returns a async service API handler function that accepts a config object and input object in defined shape, returns\n * \tan output object in defined shape. It may also throw error instance in defined shape in deserializer. The config\n *  object type is composed with options type of transferHandler, endpointResolver function as well as endpointResolver\n *  function's input options type, region string. The config object property will be marked as optional if it's also\n * \tdefined in defaultConfig.\n *\n * @internal\n */\nexport const composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n    return async (config, input) => {\n        const resolvedConfig = {\n            ...defaultConfig,\n            ...config,\n        };\n        // We need to allow different endpoints based on both given config(other than region) and input.\n        // However for most of non-S3 services, region is the only input for endpoint resolver.\n        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n        // They will be populated automatically by browser, or node-fetch polyfill.\n        const request = await serializer(input, endpoint);\n        const response = await transferHandler(request, {\n            ...resolvedConfig,\n        });\n        return deserializer(response);\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nexport const defaultPartition = {\n    id: 'aws',\n    outputs: {\n        dnsSuffix: 'amazonaws.com',\n    },\n    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-global'],\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nexport const partitionsInfo = {\n    partitions: [\n        defaultPartition,\n        {\n            id: 'aws-cn',\n            outputs: {\n                dnsSuffix: 'amazonaws.com.cn',\n            },\n            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n            regions: ['aws-cn-global'],\n        },\n    ],\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultPartition, partitionsInfo } from './partitions';\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nexport const getDnsSuffix = (region) => {\n    const { partitions } = partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return defaultPartition.outputs.dnsSuffix;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const DEFAULT_RETRY_ATTEMPTS = 3;\nexport const AMZ_SDK_INVOCATION_ID_HEADER = 'amz-sdk-invocation-id';\nexport const AMZ_SDK_REQUEST_HEADER = 'amz-sdk-request';\nexport const DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\n", "import { DEFAULT_RETRY_ATTEMPTS } from './constants';\n/**\n * Middleware that executes the retry logic.\n */\nexport const retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? (context.attemptsCount ?? 0)\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            const { isCredentialsExpiredError, retryable } = await retryDecider(response, error, context);\n            if (retryable) {\n                // Setting isCredentialsInvalid flag to notify signing middleware to forceRefresh credentials provider.\n                context.isCredentialsExpired = !!isCredentialsExpiredError;\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { v4 } from 'uuid';\nconst amplifyUuid = v4;\nexport { amplifyUuid };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { amplifyUuid } from '../../../libraryUtils';\nimport { AMZ_SDK_INVOCATION_ID_HEADER } from './constants';\n/**\n * Middleware injects a UUID string to `amz-sdk-invocation-id` header.\n * if the header is not set already. This header is helpful to provide\n * observability to group the requests caused by automatic retry.\n *\n * This middleware is standalone because of extra UUID dependency, we will\n * NOT use this middleware for API categories.\n *\n * Ref: https://sdk.amazonaws.com/kotlin/api/smithy-kotlin/api/1.0.9/http-client/aws.smithy.kotlin.runtime.http.operation/-http-operation-context/-sdk-invocation-id.html\n */\nexport const amzSdkInvocationIdHeaderMiddlewareFactory = () => next => {\n    return async function amzSdkInvocationIdHeaderMiddleware(request) {\n        if (!request.headers[AMZ_SDK_INVOCATION_ID_HEADER]) {\n            request.headers[AMZ_SDK_INVOCATION_ID_HEADER] = amplifyUuid();\n        }\n        return next(request);\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMZ_SDK_REQUEST_HEADER, DEFAULT_RETRY_ATTEMPTS } from './constants';\n/**\n * Middleware injects `amz-sdk-request` header to indicate the retry state at the time an HTTP request is made.\n * This middleware should co-exist with retryMiddleware as it relies on the retryAttempts value in middleware context\n * set by the retry middleware.\n *\n * Example header: `amz-sdk-request: attempt=1; max=3`.\n *\n * This middleware is standalone because of extra headers may conflict with custom endpoint settings(e.g. CORS), we will\n * NOT use this middleware for API categories.\n */\nexport const amzSdkRequestHeaderMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS }) => (next, context) => {\n    return async function amzSdkRequestHeaderMiddleware(request) {\n        const attemptsCount = context.attemptsCount ?? 0;\n        request.headers[AMZ_SDK_REQUEST_HEADER] =\n            `attempt=${attemptsCount + 1}; max=${maxAttempts}`;\n        return next(request);\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nexport const userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nexport const composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nexport const withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from '../../errors';\nimport { withMemoization } from '../utils/memoization';\nimport { AmplifyErrorCode } from '../../types';\nconst shouldSendBody = (method) => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nexport const fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        if (e instanceof TypeError) {\n            throw new AmplifyError({\n                name: AmplifyErrorCode.NetworkError,\n                message: 'A network error has occurred.',\n                underlyingError: e,\n            });\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: withMemoization(() => resp.text()),\n        blob: withMemoization(() => resp.blob()),\n        json: withMemoization(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { amzSdkInvocationIdHeaderMiddlewareFactory, amzSdkRequestHeaderMiddlewareFactory, retryMiddlewareFactory, } from '../../middleware/retry';\nimport { userAgentMiddlewareFactory, } from '../../middleware/userAgent';\nimport { composeTransferHandler } from '../../internal/composeTransferHandler';\nimport { fetchTransferHandler } from '../fetch';\nexport const unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [\n    userAgentMiddlewareFactory,\n    amzSdkInvocationIdHeaderMiddlewareFactory,\n    retryMiddlewareFactory,\n    amzSdkRequestHeaderMiddlewareFactory,\n]);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const MAX_DELAY_MS = 5 * 60 * 1000;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MAX_DELAY_MS } from './constants';\n/**\n * @private\n * Internal use of Amplify only\n */\nexport function jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { jitteredBackoff as jitteredBackoffUtil } from '../../../utils';\nimport { DEFAULT_MAX_DELAY_MS } from './constants';\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nexport const jitteredBackoff = attempt => {\n    const delayFunction = jitteredBackoffUtil(DEFAULT_MAX_DELAY_MS);\n    const delay = delayFunction(attempt);\n    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nexport const isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode } from '../../../types';\nimport { isClockSkewError } from './isClockSkewError';\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nexport const getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code || parsedError?.name;\n    const statusCode = response?.statusCode;\n    const isRetryable = isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode);\n    return {\n        retryable: isRetryable,\n    };\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => [\n    AmplifyErrorCode.NetworkError,\n    // TODO(vNext): unify the error code `ERR_NETWORK` used by the Storage XHR handler\n    'ERR_NETWORK',\n].includes(error?.name);\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix, parseJsonError, unauthenticatedHandler, } from '../../clients';\nimport { composeTransferHandler } from '../../clients/internal/composeTransferHandler';\nimport { getRetryDecider, jitteredBackoff, } from '../../clients/middleware/retry';\nimport { getAmplifyUserAgent } from '../../Platform';\nimport { observeFrameworkChanges } from '../../Platform/detectFramework';\nimport { AmplifyUrl } from '../../utils/amplifyUrl';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-identity';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => ({\n    url: new AmplifyUrl(`https://cognito-identity.${region}.${getDnsSuffix(region)}`),\n});\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => next => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\nobserveFrameworkChanges(() => {\n    defaultConfig.userAgentValue = getAmplifyUserAgent();\n});\n/**\n * @internal\n */\nexport const getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityService.${operation}`,\n});\n/**\n * @internal\n */\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../clients';\nimport { composeServiceApi } from '../../clients/internal';\nimport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst getIdSerializer = (input, endpoint) => {\n    const headers = getSharedHeaders('GetId');\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getIdDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const body = await parseJsonBody(response);\n        return {\n            IdentityId: body.IdentityId,\n            $metadata: parseMetadata(response),\n        };\n    }\n};\n/**\n * @internal\n */\nexport const getId = composeServiceApi(cognitoIdentityTransferHandler, getIdSerializer, getIdDeserializer, defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, parseMetadata, } from '../../clients';\nimport { composeServiceApi } from '../../clients/internal';\nimport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst getCredentialsForIdentitySerializer = (input, endpoint) => {\n    const headers = getSharedHeaders('GetCredentialsForIdentity');\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getCredentialsForIdentityDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const body = await parseJsonBody(response);\n        return {\n            IdentityId: body.IdentityId,\n            Credentials: deserializeCredentials(body.Credentials),\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst deserializeCredentials = ({ AccessKeyId, SecretKey, SessionToken, Expiration, } = {}) => {\n    return {\n        AccessKeyId,\n        SecretKey,\n        SessionToken,\n        Expiration: Expiration && new Date(Expiration * 1000),\n    };\n};\n/**\n * @internal\n */\nexport const getCredentialsForIdentity = composeServiceApi(cognitoIdentityTransferHandler, getCredentialsForIdentitySerializer, getCredentialsForIdentityDeserializer, defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode } from '../types';\nimport { AmplifyError } from './AmplifyError';\nexport class PlatformNotSupportedError extends AmplifyError {\n    constructor() {\n        super({\n            name: AmplifyErrorCode.PlatformNotSupported,\n            message: 'Function not supported on current platform',\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PlatformNotSupportedError } from '../errors';\n/**\n * @internal\n */\nexport class KeyValueStorage {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    async setItem(key, value) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    async getItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    async removeItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    async clear() {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.clear();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport class InMemoryStorage {\n    constructor() {\n        this.storage = new Map();\n    }\n    get length() {\n        return this.storage.size;\n    }\n    key(index) {\n        if (index > this.length - 1) {\n            return null;\n        }\n        return Array.from(this.storage.keys())[index];\n    }\n    setItem(key, value) {\n        this.storage.set(key, value);\n    }\n    getItem(key) {\n        return this.storage.get(key) ?? null;\n    }\n    removeItem(key) {\n        this.storage.delete(key);\n    }\n    clear() {\n        this.storage.clear();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { InMemoryStorage } from './InMemoryStorage';\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nconst logger = new ConsoleLogger('CoreStorageUtils');\nexport const getLocalStorageWithFallback = () => {\n    try {\n        // Attempt to use localStorage directly\n        if (typeof window !== 'undefined' && window.localStorage) {\n            return window.localStorage;\n        }\n    }\n    catch (e) {\n        // Handle any errors related to localStorage access\n        logger.info('localStorage not found. InMemoryStorage is used as a fallback.');\n    }\n    // Return in-memory storage as a fallback if localStorage is not accessible\n    return new InMemoryStorage();\n};\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nexport const getSessionStorageWithFallback = () => {\n    try {\n        // Attempt to use sessionStorage directly\n        if (typeof window !== 'undefined' && window.sessionStorage) {\n            // Verify we can actually use it by testing access\n            window.sessionStorage.getItem('test');\n            return window.sessionStorage;\n        }\n        throw new Error('sessionStorage is not defined');\n    }\n    catch (e) {\n        // Handle any errors related to sessionStorage access\n        logger.info('sessionStorage not found. InMemoryStorage is used as a fallback.');\n        return new InMemoryStorage();\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { getLocalStorageWithFallback } from './utils';\n/**\n * @internal\n */\nexport class DefaultStorage extends KeyValueStorage {\n    constructor() {\n        super(getLocalStorageWithFallback());\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { getSessionStorageWithFallback } from './utils';\n/**\n * @internal\n */\nexport class SessionStorage extends KeyValueStorage {\n    constructor() {\n        super(getSessionStorageWithFallback());\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PlatformNotSupportedError } from '../errors';\n/**\n * @internal\n */\nexport class SyncKeyValueStorage {\n    constructor(storage) {\n        this._storage = storage;\n    }\n    get storage() {\n        if (!this._storage)\n            throw new PlatformNotSupportedError();\n        return this._storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    setItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    getItem(key) {\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    removeItem(key) {\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    clear() {\n        this.storage.clear();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SyncKeyValueStorage } from './SyncKeyValueStorage';\nimport { getSessionStorageWithFallback } from './utils';\n/**\n * @internal\n */\nexport class SyncSessionStorage extends SyncKeyValueStorage {\n    constructor() {\n        super(getSessionStorageWithFallback());\n    }\n}\n", "/*! js-cookie v3.0.5 | MIT */\r\n/* eslint-disable no-var */\r\nfunction assign (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n    for (var key in source) {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n  return target\r\n}\r\n/* eslint-enable no-var */\r\n\r\n/* eslint-disable no-var */\r\nvar defaultConverter = {\r\n  read: function (value) {\r\n    if (value[0] === '\"') {\r\n      value = value.slice(1, -1);\r\n    }\r\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\r\n  },\r\n  write: function (value) {\r\n    return encodeURIComponent(value).replace(\r\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\r\n      decodeURIComponent\r\n    )\r\n  }\r\n};\r\n/* eslint-enable no-var */\r\n\r\n/* eslint-disable no-var */\r\n\r\nfunction init (converter, defaultAttributes) {\r\n  function set (name, value, attributes) {\r\n    if (typeof document === 'undefined') {\r\n      return\r\n    }\r\n\r\n    attributes = assign({}, defaultAttributes, attributes);\r\n\r\n    if (typeof attributes.expires === 'number') {\r\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\r\n    }\r\n    if (attributes.expires) {\r\n      attributes.expires = attributes.expires.toUTCString();\r\n    }\r\n\r\n    name = encodeURIComponent(name)\r\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\r\n      .replace(/[()]/g, escape);\r\n\r\n    var stringifiedAttributes = '';\r\n    for (var attributeName in attributes) {\r\n      if (!attributes[attributeName]) {\r\n        continue\r\n      }\r\n\r\n      stringifiedAttributes += '; ' + attributeName;\r\n\r\n      if (attributes[attributeName] === true) {\r\n        continue\r\n      }\r\n\r\n      // Considers RFC 6265 section 5.2:\r\n      // ...\r\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\r\n      //     character:\r\n      // Consume the characters of the unparsed-attributes up to,\r\n      // not including, the first %x3B (\";\") character.\r\n      // ...\r\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\r\n    }\r\n\r\n    return (document.cookie =\r\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\r\n  }\r\n\r\n  function get (name) {\r\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\r\n      return\r\n    }\r\n\r\n    // To prevent the for loop in the first place assign an empty array\r\n    // in case there are no cookies at all.\r\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\r\n    var jar = {};\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var parts = cookies[i].split('=');\r\n      var value = parts.slice(1).join('=');\r\n\r\n      try {\r\n        var found = decodeURIComponent(parts[0]);\r\n        jar[found] = converter.read(value, found);\r\n\r\n        if (name === found) {\r\n          break\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    return name ? jar[name] : jar\r\n  }\r\n\r\n  return Object.create(\r\n    {\r\n      set,\r\n      get,\r\n      remove: function (name, attributes) {\r\n        set(\r\n          name,\r\n          '',\r\n          assign({}, attributes, {\r\n            expires: -1\r\n          })\r\n        );\r\n      },\r\n      withAttributes: function (attributes) {\r\n        return init(this.converter, assign({}, this.attributes, attributes))\r\n      },\r\n      withConverter: function (converter) {\r\n        return init(assign({}, this.converter, converter), this.attributes)\r\n      }\r\n    },\r\n    {\r\n      attributes: { value: Object.freeze(defaultAttributes) },\r\n      converter: { value: Object.freeze(converter) }\r\n    }\r\n  )\r\n}\r\n\r\nvar api = init(defaultConverter, { path: '/' });\r\n/* eslint-enable no-var */\r\n\r\nexport { api as default };\r\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport JsCookie from 'js-cookie';\nexport class CookieStorage {\n    constructor(data = {}) {\n        const { path, domain, expires, sameSite, secure } = data;\n        this.domain = domain;\n        this.path = path || '/';\n        this.expires = Object.prototype.hasOwnProperty.call(data, 'expires')\n            ? expires\n            : 365;\n        this.secure = Object.prototype.hasOwnProperty.call(data, 'secure')\n            ? secure\n            : true;\n        if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n            if (!sameSite || !['strict', 'lax', 'none'].includes(sameSite)) {\n                throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n            }\n            if (sameSite === 'none' && !this.secure) {\n                throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n            }\n            this.sameSite = sameSite;\n        }\n    }\n    async setItem(key, value) {\n        JsCookie.set(key, value, this.getData());\n    }\n    async getItem(key) {\n        const item = JsCookie.get(key);\n        return item ?? null;\n    }\n    async removeItem(key) {\n        JsCookie.remove(key, this.getData());\n    }\n    async clear() {\n        const cookie = JsCookie.get();\n        const promises = Object.keys(cookie).map(key => this.removeItem(key));\n        await Promise.all(promises);\n    }\n    getData() {\n        return {\n            path: this.path,\n            expires: this.expires,\n            domain: this.domain,\n            secure: this.secure,\n            ...(this.sameSite && { sameSite: this.sameSite }),\n        };\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DefaultStorage } from './DefaultStorage';\nimport { InMemoryStorage } from './InMemoryStorage';\nimport { KeyValueStorage } from './KeyValueStorage';\nimport { SessionStorage } from './SessionStorage';\nimport { SyncSessionStorage } from './SyncSessionStorage';\nexport { CookieStorage } from './CookieStorage';\nexport const defaultStorage = new DefaultStorage();\nexport const sessionStorage = new SessionStorage();\nexport const syncSessionStorage = new SyncSessionStorage();\nexport const sharedInMemoryStorage = new KeyValueStorage(new InMemoryStorage());\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default cache config\n */\nexport const defaultConfig = {\n    keyPrefix: 'aws-amplify-cache',\n    capacityInBytes: 1048576,\n    itemMaxSize: 210000,\n    defaultTTL: 259200000,\n    defaultPriority: 5,\n    warningThreshold: 0.8,\n};\nexport const currentSizeKey = 'CurSize';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { currentSizeKey } from '../constants';\n/**\n * return the byte size of the string\n * @param str\n */\nexport function getByteLength(str) {\n    let ret = 0;\n    ret = str.length;\n    for (let i = str.length; i >= 0; i -= 1) {\n        const charCode = str.charCodeAt(i);\n        if (charCode > 0x7f && charCode <= 0x7ff) {\n            ret += 1;\n        }\n        else if (charCode > 0x7ff && charCode <= 0xffff) {\n            ret += 2;\n        }\n        // trail surrogate\n        if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n            i -= 1;\n        }\n    }\n    return ret;\n}\n/**\n * get current time\n */\nexport function getCurrentTime() {\n    const currentTime = new Date();\n    return currentTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nexport function isInteger(value) {\n    if (Number.isInteger) {\n        return Number.isInteger(value);\n    }\n    return (typeof value === 'number' && isFinite(value) && Math.floor(value) === value);\n}\nexport const getCurrentSizeKey = (keyPrefix) => `${keyPrefix}${currentSizeKey}`;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../errors';\nexport var CacheErrorCode;\n(function (CacheErrorCode) {\n    CacheErrorCode[\"NoCacheItem\"] = \"NoCacheItem\";\n    CacheErrorCode[\"NullNextNode\"] = \"NullNextNode\";\n    CacheErrorCode[\"NullPreviousNode\"] = \"NullPreviousNode\";\n})(CacheErrorCode || (CacheErrorCode = {}));\nconst cacheErrorMap = {\n    [CacheErrorCode.NoCacheItem]: {\n        message: 'Item not found in the cache storage.',\n    },\n    [CacheErrorCode.NullNextNode]: {\n        message: 'Next node is null.',\n    },\n    [CacheErrorCode.NullPreviousNode]: {\n        message: 'Previous node is null.',\n    },\n};\nexport const assert = createAssertionFunction(cacheErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { currentSizeKey, defaultConfig } from './constants';\nimport { getByteLength, getCurrentSizeKey, getCurrentTime } from './utils';\nimport { CacheErrorCode, assert } from './utils/errorHelpers';\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nexport class StorageCacheCommon {\n    /**\n     * Initialize the cache\n     *\n     * @param config - Custom configuration for this instance.\n     */\n    constructor({ config, keyValueStorage, }) {\n        this.config = {\n            ...defaultConfig,\n            ...config,\n        };\n        this.keyValueStorage = keyValueStorage;\n        this.sanitizeConfig();\n    }\n    getModuleName() {\n        return 'Cache';\n    }\n    /**\n     * Set custom configuration for the cache instance.\n     *\n     * @param config - customized configuration (without keyPrefix, which can't be changed)\n     *\n     * @return - the current configuration\n     */\n    configure(config) {\n        if (config) {\n            if (config.keyPrefix) {\n                logger.warn('keyPrefix can not be re-configured on an existing Cache instance.');\n            }\n            this.config = {\n                ...this.config,\n                ...config,\n            };\n        }\n        this.sanitizeConfig();\n        return this.config;\n    }\n    /**\n     * return the current size of the cache\n     * @return {Promise}\n     */\n    async getCurrentCacheSize() {\n        let size = await this.getStorage().getItem(getCurrentSizeKey(this.config.keyPrefix));\n        if (!size) {\n            await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), '0');\n            size = '0';\n        }\n        return Number(size);\n    }\n    /**\n     * Set item into cache. You can put number, string, boolean or object.\n     * The cache will first check whether has the same key.\n     * If it has, it will delete the old item and then put the new item in\n     * The cache will pop out items if it is full\n     * You can specify the cache item options. The cache will abort and output a warning:\n     * If the key is invalid\n     * If the size of the item exceeds itemMaxSize.\n     * If the value is undefined\n     * If incorrect cache item configuration\n     * If error happened with browser storage\n     *\n     * @param {String} key - the key of the item\n     * @param {Object} value - the value of the item\n     * @param {Object} [options] - optional, the specified meta-data\n     *\n     * @return {Promise}\n     */\n    async setItem(key, value, options) {\n        logger.debug(`Set item: key is ${key}, value is ${value} with options: ${options}`);\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return;\n        }\n        if (typeof value === 'undefined') {\n            logger.warn(`The value of item should not be undefined!`);\n            return;\n        }\n        const cacheItemOptions = {\n            priority: options?.priority !== undefined\n                ? options.priority\n                : this.config.defaultPriority,\n            expires: options?.expires !== undefined\n                ? options.expires\n                : this.config.defaultTTL + getCurrentTime(),\n        };\n        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n            logger.warn(`Invalid parameter: priority due to out or range. It should be within 1 and 5.`);\n            return;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        const item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n        // check whether this item is too big;\n        if (item.byteSize > this.config.itemMaxSize) {\n            logger.warn(`Item with key: ${key} you are trying to put into is too big!`);\n            return;\n        }\n        try {\n            // first look into the storage, if it exists, delete it.\n            const val = await this.getStorage().getItem(prefixedKey);\n            if (val) {\n                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n            // check whether the cache is full\n            if (await this.isCacheFull(item.byteSize)) {\n                const validKeys = await this.clearInvalidAndGetRemainingKeys();\n                if (await this.isCacheFull(item.byteSize)) {\n                    const sizeToPop = await this.sizeToPop(item.byteSize);\n                    await this.popOutItems(validKeys, sizeToPop);\n                }\n            }\n            // put item in the cache\n            return this.setCacheItem(prefixedKey, item);\n        }\n        catch (e) {\n            logger.warn(`setItem failed! ${e}`);\n        }\n    }\n    /**\n     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n     * If you specified callback function in the options,\n     * then the function will be executed if no such item in the cache\n     * and finally put the return value into cache.\n     * Please make sure the callback function will return the value you want to put into the cache.\n     * The cache will abort output a warning:\n     * If the key is invalid\n     * If error happened with AsyncStorage\n     *\n     * @param {String} key - the key of the item\n     * @param {Object} [options] - the options of callback function\n     *\n     * @return {Promise} - return a promise resolves to be the value of the item\n     */\n    async getItem(key, options) {\n        logger.debug(`Get item: key is ${key} with options ${options}`);\n        let cached;\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return null;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        try {\n            cached = await this.getStorage().getItem(prefixedKey);\n            if (cached != null) {\n                if (await this.isExpired(prefixedKey)) {\n                    // if expired, remove that item and return null\n                    await this.removeCacheItem(prefixedKey, JSON.parse(cached).byteSize);\n                }\n                else {\n                    // if not expired, update its visitedTime and return the value\n                    const item = await this.updateVisitedTime(JSON.parse(cached), prefixedKey);\n                    return item.data;\n                }\n            }\n            if (options?.callback) {\n                const val = options.callback();\n                if (val !== null) {\n                    await this.setItem(key, val, options);\n                }\n                return val;\n            }\n            return null;\n        }\n        catch (e) {\n            logger.warn(`getItem failed! ${e}`);\n            return null;\n        }\n    }\n    /**\n     * remove item from the cache\n     * The cache will abort output a warning:\n     * If error happened with AsyncStorage\n     * @param {String} key - the key of the item\n     * @return {Promise}\n     */\n    async removeItem(key) {\n        logger.debug(`Remove item: key is ${key}`);\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        try {\n            const val = await this.getStorage().getItem(prefixedKey);\n            if (val) {\n                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n        }\n        catch (e) {\n            logger.warn(`removeItem failed! ${e}`);\n        }\n    }\n    /**\n     * Return all the keys owned by this cache.\n     * Will return an empty array if error occurred.\n     *\n     * @return {Promise}\n     */\n    async getAllKeys() {\n        try {\n            return await this.getAllCacheKeys();\n        }\n        catch (e) {\n            logger.warn(`getAllkeys failed! ${e}`);\n            return [];\n        }\n    }\n    getStorage() {\n        return this.keyValueStorage;\n    }\n    /**\n     * check whether item is expired\n     *\n     * @param key - the key of the item\n     *\n     * @return true if the item is expired.\n     */\n    async isExpired(key) {\n        const text = await this.getStorage().getItem(key);\n        assert(text !== null, CacheErrorCode.NoCacheItem, `Key: ${key}`);\n        const item = JSON.parse(text);\n        if (getCurrentTime() >= item.expires) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * delete item from cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param size - optional, the byte size of the item\n     */\n    async removeCacheItem(prefixedKey, size) {\n        const item = await this.getStorage().getItem(prefixedKey);\n        assert(item !== null, CacheErrorCode.NoCacheItem, `Key: ${prefixedKey}`);\n        const itemSize = size ?? JSON.parse(item).byteSize;\n        // first try to update the current size of the cache\n        await this.decreaseCurrentSizeInBytes(itemSize);\n        // try to remove the item from cache\n        try {\n            await this.getStorage().removeItem(prefixedKey);\n        }\n        catch (removeItemError) {\n            // if some error happened, we need to rollback the current size\n            await this.increaseCurrentSizeInBytes(itemSize);\n            logger.error(`Failed to remove item: ${removeItemError}`);\n        }\n    }\n    /**\n     * produce a JSON object with meta-data and data value\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @return - the item which has the meta-data and the value\n     */\n    fillCacheItem(key, value, options) {\n        const item = {\n            key,\n            data: value,\n            timestamp: getCurrentTime(),\n            visitedTime: getCurrentTime(),\n            priority: options.priority ?? 0,\n            expires: options.expires ?? 0,\n            type: typeof value,\n            byteSize: 0,\n        };\n        // calculate byte size\n        item.byteSize = getByteLength(JSON.stringify(item));\n        // re-calculate using cache item with updated byteSize property\n        item.byteSize = getByteLength(JSON.stringify(item));\n        return item;\n    }\n    sanitizeConfig() {\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 ||\n            Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = defaultConfig.warningThreshold;\n        }\n        // Set 5MB limit\n        const cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n    }\n    /**\n     * increase current size of the cache\n     *\n     * @param amount - the amount of the cache szie which need to be increased\n     */\n    async increaseCurrentSizeInBytes(amount) {\n        const size = await this.getCurrentCacheSize();\n        await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size + amount).toString());\n    }\n    /**\n     * decrease current size of the cache\n     *\n     * @param amount - the amount of the cache size which needs to be decreased\n     */\n    async decreaseCurrentSizeInBytes(amount) {\n        const size = await this.getCurrentCacheSize();\n        await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size - amount).toString());\n    }\n    /**\n     * update the visited time if item has been visited\n     *\n     * @param item - the item which need to be updated\n     * @param prefixedKey - the key of the item\n     *\n     * @return the updated item\n     */\n    async updateVisitedTime(item, prefixedKey) {\n        item.visitedTime = getCurrentTime();\n        await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n        return item;\n    }\n    /**\n     * put item into cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param itemData - the value of the item\n     * @param itemSizeInBytes - the byte size of the item\n     */\n    async setCacheItem(prefixedKey, item) {\n        // first try to update the current size of the cache.\n        await this.increaseCurrentSizeInBytes(item.byteSize);\n        // try to add the item into cache\n        try {\n            await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n        }\n        catch (setItemErr) {\n            // if some error happened, we need to rollback the current size\n            await this.decreaseCurrentSizeInBytes(item.byteSize);\n            logger.error(`Failed to set item ${setItemErr}`);\n        }\n    }\n    /**\n     * total space needed when poping out items\n     *\n     * @param itemSize\n     *\n     * @return total space needed\n     */\n    async sizeToPop(itemSize) {\n        const cur = await this.getCurrentCacheSize();\n        const spaceItemNeed = cur + itemSize - this.config.capacityInBytes;\n        const cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;\n        return spaceItemNeed > cacheThresholdSpace\n            ? spaceItemNeed\n            : cacheThresholdSpace;\n    }\n    /**\n     * see whether cache is full\n     *\n     * @param itemSize\n     *\n     * @return true if cache is full\n     */\n    async isCacheFull(itemSize) {\n        const cur = await this.getCurrentCacheSize();\n        return itemSize + cur > this.config.capacityInBytes;\n    }\n    /**\n     * get all the items we have, sort them by their priority,\n     * if priority is same, sort them by their last visited time\n     * pop out items from the low priority (5 is the lowest)\n     * @private\n     * @param keys - all the keys in this cache\n     * @param sizeToPop - the total size of the items which needed to be poped out\n     */\n    async popOutItems(keys, sizeToPop) {\n        const items = [];\n        let remainedSize = sizeToPop;\n        for (const key of keys) {\n            const val = await this.getStorage().getItem(key);\n            if (val != null) {\n                const item = JSON.parse(val);\n                items.push(item);\n            }\n        }\n        // first compare priority\n        // then compare visited time\n        items.sort((a, b) => {\n            if (a.priority > b.priority) {\n                return -1;\n            }\n            else if (a.priority < b.priority) {\n                return 1;\n            }\n            else {\n                if (a.visitedTime < b.visitedTime) {\n                    return -1;\n                }\n                else\n                    return 1;\n            }\n        });\n        for (const item of items) {\n            // pop out items until we have enough room for new item\n            await this.removeCacheItem(item.key, item.byteSize);\n            remainedSize -= item.byteSize;\n            if (remainedSize <= 0) {\n                return;\n            }\n        }\n    }\n    /**\n     * Scan the storage and combine the following operations for efficiency\n     *   1. Clear out all expired keys owned by this cache, not including the size key.\n     *   2. Return the remaining keys.\n     *\n     * @return The remaining valid keys\n     */\n    async clearInvalidAndGetRemainingKeys() {\n        const remainingKeys = [];\n        const keys = await this.getAllCacheKeys({\n            omitSizeKey: true,\n        });\n        for (const key of keys) {\n            if (await this.isExpired(key)) {\n                await this.removeCacheItem(key);\n            }\n            else {\n                remainingKeys.push(key);\n            }\n        }\n        return remainingKeys;\n    }\n    /**\n     * clear the entire cache\n     * The cache will abort and output a warning if error occurs\n     * @return {Promise}\n     */\n    async clear() {\n        logger.debug(`Clear Cache`);\n        try {\n            const keys = await this.getAllKeys();\n            for (const key of keys) {\n                const prefixedKey = `${this.config.keyPrefix}${key}`;\n                await this.getStorage().removeItem(prefixedKey);\n            }\n        }\n        catch (e) {\n            logger.warn(`clear failed! ${e}`);\n        }\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { KeyValueStorage } from '../storage/KeyValueStorage';\nimport { getLocalStorageWithFallback } from '../storage/utils';\nimport { defaultConfig } from './constants';\nimport { StorageCacheCommon } from './StorageCacheCommon';\nimport { getCurrentSizeKey, getCurrentTime } from './utils';\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nexport class StorageCache extends StorageCacheCommon {\n    /**\n     * initialize the cache\n     * @param config - the configuration of the cache\n     */\n    constructor(config) {\n        const storage = getLocalStorageWithFallback();\n        super({ config, keyValueStorage: new KeyValueStorage(storage) });\n        this.storage = storage;\n        this.getItem = this.getItem.bind(this);\n        this.setItem = this.setItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n    }\n    async getAllCacheKeys(options) {\n        const { omitSizeKey } = options ?? {};\n        const keys = [];\n        for (let i = 0; i < this.storage.length; i++) {\n            const key = this.storage.key(i);\n            if (omitSizeKey && key === getCurrentSizeKey(this.config.keyPrefix)) {\n                continue;\n            }\n            if (key?.startsWith(this.config.keyPrefix)) {\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    }\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param {Object} config - the customized configuration\n     * @return {Object} - the new instance of Cache\n     */\n    createInstance(config) {\n        if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n            logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n            config.keyPrefix = getCurrentTime.toString();\n        }\n        return new StorageCache(config);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageCache } from './StorageCache';\nexport const Cache = new StorageCache();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nconst logger = new ConsoleLogger('I18n');\n/**\n * Language translation utility.\n */\nexport class I18n {\n    constructor() {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n    }\n    /**\n     * Sets the default language from the configuration when required.\n     */\n    setDefaultLanguage() {\n        // Default to window language if not set in instance\n        if (!this._lang &&\n            typeof window !== 'undefined' &&\n            window &&\n            window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    setLanguage(lang) {\n        this._lang = lang;\n    }\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    get(key, defVal = undefined) {\n        this.setDefaultLanguage();\n        if (!this._lang) {\n            return typeof defVal !== 'undefined' ? defVal : key;\n        }\n        const lang = this._lang;\n        let val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    getByLanguage(key, language, defVal = null) {\n        if (!language) {\n            return defVal;\n        }\n        const langDict = this._dict[language];\n        if (!langDict) {\n            return defVal;\n        }\n        return langDict[key];\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    putVocabulariesForLanguage(language, vocabularies) {\n        let langDict = this._dict[language];\n        if (!langDict) {\n            langDict = this._dict[language] = {};\n        }\n        this._dict[language] = { ...langDict, ...vocabularies };\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    putVocabularies(vocabularies) {\n        Object.keys(vocabularies).forEach(key => {\n            this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../errors';\nexport var I18nErrorCode;\n(function (I18nErrorCode) {\n    I18nErrorCode[\"NotConfigured\"] = \"NotConfigured\";\n})(I18nErrorCode || (I18nErrorCode = {}));\nconst i18nErrorMap = {\n    [I18nErrorCode.NotConfigured]: {\n        message: 'i18n is not configured.',\n    },\n};\nexport const assert = createAssertionFunction(i18nErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { I18n as I18nClass } from './I18n';\nimport { I18nErrorCode, assert } from './errorHelpers';\nconst logger = new ConsoleLogger('I18n');\nlet _config = { language: null };\nlet _i18n = null;\n/**\n * Export I18n APIs\n */\nexport class I18n {\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    static configure(config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    }\n    static getModuleName() {\n        return 'I18n';\n    }\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    static createInstance() {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18nClass();\n    }\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    static setLanguage(lang) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.setLanguage(lang);\n    }\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    static get(key, defVal) {\n        if (!I18n.checkConfig()) {\n            return typeof defVal === 'undefined' ? key : defVal;\n        }\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        return _i18n.get(key, defVal);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    static putVocabulariesForLanguage(language, vocabularies) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.putVocabulariesForLanguage(language, vocabularies);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    static putVocabularies(vocabularies) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.putVocabularies(vocabularies);\n    }\n    static checkConfig() {\n        if (!_i18n) {\n            I18n.createInstance();\n        }\n        return true;\n    }\n}\n// Create an instance of I18n in the static class\nI18n.createInstance();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function urlSafeDecode(hex) {\n    const matchArr = hex.match(/.{2}/g) || [];\n    return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nexport const deDupeAsyncFunction = (asyncFunction) => {\n    let inflightPromise;\n    return async (...args) => {\n        if (inflightPromise)\n            return inflightPromise;\n        inflightPromise = new Promise((resolve, reject) => {\n            asyncFunction(...args)\n                .then(result => {\n                resolve(result);\n            })\n                .catch(error => {\n                reject(error);\n            })\n                .finally(() => {\n                inflightPromise = undefined;\n            });\n        });\n        return inflightPromise;\n    };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isTokenExpired({ expiresAt, clockDrift, tolerance = 5000, }) {\n    const currentTime = Date.now();\n    return currentTime + clockDrift + tolerance > expiresAt;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Retrieves the device name using the User-Agent Client Hints API if available,\n * falling back to the traditional userAgent string if not.\n *\n * @returns {Promise<string>} A promise that resolves with a string representing the device name.\n *\n * Example Output:\n * navigator.userAgentData:\n *   'macOS 14.2.1 arm macOS Not A(Brand/99.0.0.0;Google Chrome/121.0.6167.160;Chromium/121.0.6167.160'\n * navigator.userAgent:\n *   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0'\n */\nexport const getDeviceName = async () => {\n    const { userAgentData } = navigator;\n    if (!userAgentData)\n        return navigator.userAgent;\n    const { platform = '', platformVersion = '', model = '', architecture = '', fullVersionList = [], } = await userAgentData.getHighEntropyValues([\n        'platform',\n        'platformVersion',\n        'architecture',\n        'model',\n        'fullVersionList',\n    ]);\n    const versionList = fullVersionList\n        .map((v) => `${v.brand}/${v.version}`)\n        .join(';');\n    const deviceName = [\n        platform,\n        platformVersion,\n        architecture,\n        model,\n        platform,\n        versionList,\n    ]\n        .filter(value => value)\n        .join(' ');\n    return deviceName || navigator.userAgent;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function bytesToString(input) {\n    return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBtoa } from '../../globalHelpers';\nimport { bytesToString } from './bytesToString';\nexport const base64Encoder = {\n    /**\n     * Convert input to base64-encoded string\n     * @param input - string to convert to base64\n     * @param options - encoding options that can optionally produce a base64url string\n     * @returns base64-encoded string\n     */\n    convert(input, options = {\n        urlSafe: false,\n        skipPadding: false,\n    }) {\n        const inputStr = typeof input === 'string' ? input : bytesToString(input);\n        let encodedStr = getBtoa()(inputStr);\n        // urlSafe char replacement and skipPadding options conform to the base64url spec\n        // https://datatracker.ietf.org/doc/html/rfc4648#section-5\n        if (options.urlSafe) {\n            encodedStr = encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_');\n        }\n        if (options.skipPadding) {\n            encodedStr = encodedStr.replace(/=/g, '');\n        }\n        return encodedStr;\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCrypto } from './globalHelpers';\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nexport function cryptoSecureRandomInt() {\n    const crypto = getCrypto();\n    const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n    return randomResult;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { cryptoSecureRandomInt } from './cryptoSecureRandomInt';\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n    // Shortcuts\n    const { words } = wordArray;\n    const { sigBytes } = wordArray;\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i++) {\n        const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        hexChars.push((bite >>> 4).toString(16));\n        hexChars.push((bite & 0x0f).toString(16));\n    }\n    return hexChars.join('');\n}\nexport class WordArray {\n    constructor(words, sigBytes) {\n        this.words = [];\n        let Words = words;\n        Words = this.words = Words || [];\n        if (sigBytes !== undefined) {\n            this.sigBytes = sigBytes;\n        }\n        else {\n            this.sigBytes = Words.length * 4;\n        }\n    }\n    random(nBytes) {\n        const words = [];\n        for (let i = 0; i < nBytes; i += 4) {\n            words.push(cryptoSecureRandomInt());\n        }\n        return new WordArray(words, nBytes);\n    }\n    toString() {\n        return hexStringify(this);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthValidationErrorCode;\n(function (AuthValidationErrorCode) {\n    AuthValidationErrorCode[\"EmptySignInUsername\"] = \"EmptySignInUsername\";\n    AuthValidationErrorCode[\"EmptySignInPassword\"] = \"EmptySignInPassword\";\n    AuthValidationErrorCode[\"CustomAuthSignInPassword\"] = \"CustomAuthSignInPassword\";\n    AuthValidationErrorCode[\"EmptySignUpUsername\"] = \"EmptySignUpUsername\";\n    AuthValidationErrorCode[\"EmptySignUpPassword\"] = \"EmptySignUpPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpUsername\"] = \"EmptyConfirmSignUpUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpCode\"] = \"EmptyConfirmSignUpCode\";\n    AuthValidationErrorCode[\"EmptyResendSignUpCodeUsername\"] = \"EmptyresendSignUpCodeUsername\";\n    AuthValidationErrorCode[\"EmptyChallengeResponse\"] = \"EmptyChallengeResponse\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordUsername\"] = \"EmptyConfirmResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordNewPassword\"] = \"EmptyConfirmResetPasswordNewPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordConfirmationCode\"] = \"EmptyConfirmResetPasswordConfirmationCode\";\n    AuthValidationErrorCode[\"EmptyResetPasswordUsername\"] = \"EmptyResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyVerifyTOTPSetupCode\"] = \"EmptyVerifyTOTPSetupCode\";\n    AuthValidationErrorCode[\"EmptyConfirmUserAttributeCode\"] = \"EmptyConfirmUserAttributeCode\";\n    AuthValidationErrorCode[\"IncorrectMFAMethod\"] = \"IncorrectMFAMethod\";\n    AuthValidationErrorCode[\"EmptyUpdatePassword\"] = \"EmptyUpdatePassword\";\n})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthValidationErrorCode } from '../errors/types/validation';\nexport const validationErrorMap = {\n    [AuthValidationErrorCode.EmptyChallengeResponse]: {\n        message: 'challengeResponse is required to confirmSignIn',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n        message: 'username is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n        message: 'code is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n        message: 'confirmationCode is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n        message: 'newPassword is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n        message: 'username is required to resetPassword',\n    },\n    [AuthValidationErrorCode.EmptySignInPassword]: {\n        message: 'password is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignInUsername]: {\n        message: 'username is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignUpPassword]: {\n        message: 'password is required to signUp',\n    },\n    [AuthValidationErrorCode.EmptySignUpUsername]: {\n        message: 'username is required to signUp',\n    },\n    [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n        message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n        recoverySuggestion: 'Do not include a password in your signIn call.',\n    },\n    [AuthValidationErrorCode.IncorrectMFAMethod]: {\n        message: 'Incorrect MFA method was chosen. It should be either SMS, TOTP, or EMAIL',\n        recoverySuggestion: 'Try to pass SMS, TOTP, or EMAIL as the challengeResponse',\n    },\n    [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n        message: 'code is required to verifyTotpSetup',\n    },\n    [AuthValidationErrorCode.EmptyUpdatePassword]: {\n        message: 'oldPassword and newPassword are required to changePassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n        message: 'confirmation code is required to confirmUserAttribute',\n    },\n};\n// TODO: delete this code when the Auth class is removed.\nexport var AuthErrorStrings;\n(function (AuthErrorStrings) {\n    AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n    AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n    AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n    AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n    AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n    AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n    AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n    AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n    AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n    AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n    AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n    AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n    AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n    AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n    AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n    AuthErrorStrings[\"OAUTH_ERROR\"] = \"Couldn't finish OAuth flow, check your User Pool HostedUI settings\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\nexport var AuthErrorCodes;\n(function (AuthErrorCodes) {\n    AuthErrorCodes[\"SignInException\"] = \"SignInException\";\n    AuthErrorCodes[\"OAuthSignInError\"] = \"OAuthSignInException\";\n})(AuthErrorCodes || (AuthErrorCodes = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, } from '@aws-amplify/core/internals/utils';\nexport class AuthError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { validationErrorMap } from '../../common/AuthErrorStrings';\nimport { AuthError } from '../AuthError';\nexport function assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new AuthError({ name, message, recoverySuggestion });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../errors/AuthError';\nexport function getRegionFromUserPoolId(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nexport function getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AssociateSoftwareTokenException;\n(function (AssociateSoftwareTokenException) {\n    AssociateSoftwareTokenException[\"ConcurrentModificationException\"] = \"ConcurrentModificationException\";\n    AssociateSoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    AssociateSoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    AssociateSoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    AssociateSoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    AssociateSoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    AssociateSoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n})(AssociateSoftwareTokenException || (AssociateSoftwareTokenException = {}));\nexport var ChangePasswordException;\n(function (ChangePasswordException) {\n    ChangePasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ChangePasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ChangePasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ChangePasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ChangePasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ChangePasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ChangePasswordException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ChangePasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ChangePasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ChangePasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ChangePasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ChangePasswordException || (ChangePasswordException = {}));\nexport var ConfirmDeviceException;\n(function (ConfirmDeviceException) {\n    ConfirmDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmDeviceException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmDeviceException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ConfirmDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ConfirmDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmDeviceException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n    ConfirmDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmDeviceException || (ConfirmDeviceException = {}));\nexport var ConfirmForgotPasswordException;\n(function (ConfirmForgotPasswordException) {\n    ConfirmForgotPasswordException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmForgotPasswordException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmForgotPasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmForgotPasswordException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmForgotPasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmForgotPasswordException || (ConfirmForgotPasswordException = {}));\nexport var ConfirmSignUpException;\n(function (ConfirmSignUpException) {\n    ConfirmSignUpException[\"AliasExistsException\"] = \"AliasExistsException\";\n    ConfirmSignUpException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmSignUpException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmSignUpException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmSignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmSignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmSignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmSignUpException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmSignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmSignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmSignUpException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmSignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmSignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmSignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmSignUpException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmSignUpException || (ConfirmSignUpException = {}));\nexport var DeleteUserAttributesException;\n(function (DeleteUserAttributesException) {\n    DeleteUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserAttributesException || (DeleteUserAttributesException = {}));\nexport var DeleteUserException;\n(function (DeleteUserException) {\n    DeleteUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserException || (DeleteUserException = {}));\nexport var ForgetDeviceException;\n(function (ForgetDeviceException) {\n    ForgetDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgetDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgetDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgetDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ForgetDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgetDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ForgetDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgetDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgetDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ForgetDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgetDeviceException || (ForgetDeviceException = {}));\nexport var ForgotPasswordException;\n(function (ForgotPasswordException) {\n    ForgotPasswordException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgotPasswordException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgotPasswordException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgotPasswordException || (ForgotPasswordException = {}));\nexport var GetUserException;\n(function (GetUserException) {\n    GetUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserException || (GetUserException = {}));\nexport var GetIdException;\n(function (GetIdException) {\n    GetIdException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetIdException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetIdException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetIdException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetIdException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetIdException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetIdException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetIdException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetIdException || (GetIdException = {}));\nexport var GetCredentialsForIdentityException;\n(function (GetCredentialsForIdentityException) {\n    GetCredentialsForIdentityException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetCredentialsForIdentityException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetCredentialsForIdentityException[\"InvalidIdentityPoolConfigurationException\"] = \"InvalidIdentityPoolConfigurationException\";\n    GetCredentialsForIdentityException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetCredentialsForIdentityException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetCredentialsForIdentityException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetCredentialsForIdentityException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetCredentialsForIdentityException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetCredentialsForIdentityException || (GetCredentialsForIdentityException = {}));\nexport var GetUserAttributeVerificationException;\n(function (GetUserAttributeVerificationException) {\n    GetUserAttributeVerificationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    GetUserAttributeVerificationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserAttributeVerificationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserAttributeVerificationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    GetUserAttributeVerificationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    GetUserAttributeVerificationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetUserAttributeVerificationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserAttributeVerificationException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserAttributeVerificationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserAttributeVerificationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserAttributeVerificationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    GetUserAttributeVerificationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    GetUserAttributeVerificationException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserAttributeVerificationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserAttributeVerificationException || (GetUserAttributeVerificationException = {}));\nexport var GlobalSignOutException;\n(function (GlobalSignOutException) {\n    GlobalSignOutException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GlobalSignOutException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GlobalSignOutException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GlobalSignOutException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GlobalSignOutException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GlobalSignOutException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GlobalSignOutException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GlobalSignOutException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n})(GlobalSignOutException || (GlobalSignOutException = {}));\nexport var InitiateAuthException;\n(function (InitiateAuthException) {\n    InitiateAuthException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    InitiateAuthException[\"ForbiddenException\"] = \"ForbiddenException\";\n    InitiateAuthException[\"InternalErrorException\"] = \"InternalErrorException\";\n    InitiateAuthException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    InitiateAuthException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    InitiateAuthException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    InitiateAuthException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    InitiateAuthException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    InitiateAuthException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    InitiateAuthException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    InitiateAuthException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    InitiateAuthException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    InitiateAuthException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    InitiateAuthException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    InitiateAuthException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(InitiateAuthException || (InitiateAuthException = {}));\nexport var ResendConfirmationException;\n(function (ResendConfirmationException) {\n    ResendConfirmationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ResendConfirmationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ResendConfirmationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ResendConfirmationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ResendConfirmationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ResendConfirmationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ResendConfirmationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ResendConfirmationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ResendConfirmationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ResendConfirmationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ResendConfirmationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ResendConfirmationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ResendConfirmationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ResendConfirmationException || (ResendConfirmationException = {}));\nexport var RespondToAuthChallengeException;\n(function (RespondToAuthChallengeException) {\n    RespondToAuthChallengeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    RespondToAuthChallengeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    RespondToAuthChallengeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    RespondToAuthChallengeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    RespondToAuthChallengeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    RespondToAuthChallengeException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    RespondToAuthChallengeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    RespondToAuthChallengeException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    RespondToAuthChallengeException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    RespondToAuthChallengeException[\"MFAMethodNotFoundException\"] = \"MFAMethodNotFoundException\";\n    RespondToAuthChallengeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    RespondToAuthChallengeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    RespondToAuthChallengeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    RespondToAuthChallengeException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    RespondToAuthChallengeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    RespondToAuthChallengeException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    RespondToAuthChallengeException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    RespondToAuthChallengeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    RespondToAuthChallengeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(RespondToAuthChallengeException || (RespondToAuthChallengeException = {}));\nexport var SetUserMFAPreferenceException;\n(function (SetUserMFAPreferenceException) {\n    SetUserMFAPreferenceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    SetUserMFAPreferenceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SetUserMFAPreferenceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SetUserMFAPreferenceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SetUserMFAPreferenceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    SetUserMFAPreferenceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SetUserMFAPreferenceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    SetUserMFAPreferenceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(SetUserMFAPreferenceException || (SetUserMFAPreferenceException = {}));\nexport var SignUpException;\n(function (SignUpException) {\n    SignUpException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    SignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SignUpException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    SignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    SignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SignUpException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    SignUpException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    SignUpException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    SignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    SignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    SignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    SignUpException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n})(SignUpException || (SignUpException = {}));\nexport var UpdateUserAttributesException;\n(function (UpdateUserAttributesException) {\n    UpdateUserAttributesException[\"AliasExistsException\"] = \"AliasExistsException\";\n    UpdateUserAttributesException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    UpdateUserAttributesException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    UpdateUserAttributesException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    UpdateUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateUserAttributesException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    UpdateUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    UpdateUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateUserAttributesException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    UpdateUserAttributesException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    UpdateUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateUserAttributesException || (UpdateUserAttributesException = {}));\nexport var VerifySoftwareTokenException;\n(function (VerifySoftwareTokenException) {\n    VerifySoftwareTokenException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifySoftwareTokenException[\"EnableSoftwareTokenMFAException\"] = \"EnableSoftwareTokenMFAException\";\n    VerifySoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifySoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifySoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifySoftwareTokenException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    VerifySoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifySoftwareTokenException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifySoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifySoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    VerifySoftwareTokenException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifySoftwareTokenException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifySoftwareTokenException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifySoftwareTokenException || (VerifySoftwareTokenException = {}));\nexport var VerifyUserAttributeException;\n(function (VerifyUserAttributeException) {\n    VerifyUserAttributeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    VerifyUserAttributeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifyUserAttributeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    VerifyUserAttributeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifyUserAttributeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifyUserAttributeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifyUserAttributeException[\"LimitExceededException\"] = \"LimitExceededException\";\n    VerifyUserAttributeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifyUserAttributeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifyUserAttributeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifyUserAttributeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifyUserAttributeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifyUserAttributeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifyUserAttributeException || (VerifyUserAttributeException = {}));\nexport var UpdateDeviceStatusException;\n(function (UpdateDeviceStatusException) {\n    UpdateDeviceStatusException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateDeviceStatusException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateDeviceStatusException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateDeviceStatusException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    UpdateDeviceStatusException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateDeviceStatusException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateDeviceStatusException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateDeviceStatusException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateDeviceStatusException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateDeviceStatusException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateDeviceStatusException || (UpdateDeviceStatusException = {}));\nexport var ListDevicesException;\n(function (ListDevicesException) {\n    ListDevicesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ListDevicesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ListDevicesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ListDevicesException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ListDevicesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ListDevicesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ListDevicesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ListDevicesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ListDevicesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ListDevicesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ListDevicesException || (ListDevicesException = {}));\nexport const SETUP_TOTP_EXCEPTION = 'SetUpTOTPException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from './AuthError';\nexport const USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nexport const USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nexport const DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nexport const AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nexport const INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nexport const INVALID_APP_SCHEME_EXCEPTION = 'InvalidAppSchemeException';\nexport const INVALID_PREFERRED_REDIRECT_EXCEPTION = 'InvalidPreferredRedirectUrlException';\nexport const invalidRedirectException = new AuthError({\n    name: INVALID_REDIRECT_EXCEPTION,\n    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n});\nexport const invalidAppSchemeException = new AuthError({\n    name: INVALID_APP_SCHEME_EXCEPTION,\n    message: 'A valid non-http app scheme was not found in the config.',\n    recoverySuggestion: 'Please make sure a valid custom app scheme is present in the config.',\n});\nexport const invalidPreferredRedirectUrlException = new AuthError({\n    name: INVALID_PREFERRED_REDIRECT_EXCEPTION,\n    message: 'The given preferredRedirectUrl does not match any items in the redirectSignOutUrls array from the config.',\n    recoverySuggestion: 'Please make sure a matching preferredRedirectUrl is provided.',\n});\nexport const INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nexport const invalidOriginException = new AuthError({\n    name: INVALID_ORIGIN_EXCEPTION,\n    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n});\nexport const OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nexport const TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nexport const UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { DEVICE_METADATA_NOT_FOUND_EXCEPTION, TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nexport function isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nexport function assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport const oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nexport const tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nexport function assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nexport function assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nexport const OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types';\nexport const getCurrentUser = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n    const authUser = {\n        username: username,\n        userId: sub,\n    };\n    const signInDetails = getSignInDetailsFromTokens(tokens);\n    if (signInDetails) {\n        authUser.signInDetails = signInDetails;\n    }\n    return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n    return tokens?.signInDetails;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getCurrentUser as getCurrentUserInternal } from './internal/getCurrentUser';\n/**\n * Gets the current user from the idToken.\n *\n * @param input -  The GetCurrentUserInput object.\n * @returns GetCurrentUserOutput\n * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const getCurrentUser = async () => {\n    return getCurrentUserInternal(Amplify);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Category, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nexport const getAuthUserAgentValue = (action, customUserAgentDetails) => getAmplifyUserAgent({\n    category: Category.Auth,\n    action,\n    ...customUserAgentDetails,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const createUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\nconst buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../AuthError';\nexport function assertServiceError(error) {\n    if (!error ||\n        error.name === 'Error' ||\n        error instanceof TypeError) {\n        throw new AuthError({\n            name: AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: error,\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseJsonBody, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../../../../errors/AuthError';\nexport const createUserPoolDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        throw new AuthError({\n            name: error.name,\n            message: error.message,\n            metadata: error.$metadata,\n        });\n    }\n    return parseJsonBody(response);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { unauthenticatedHandler, } from '@aws-amplify/core/internals/aws-client-utils';\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nexport const COGNITO_IDP_SERVICE_NAME = 'cognito-idp';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getRetryDecider, jitteredBackoff, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { getAmplifyUserAgent } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from '../../../constants';\nexport const DEFAULT_SERVICE_CLIENT_API_CONFIG = {\n    service: COGNITO_IDP_SERVICE_NAME,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createInitiateAuthClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('InitiateAuth'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createRespondToAuthChallengeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('RespondToAuthChallenge'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createAssociateSoftwareTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('AssociateSoftwareToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from './constants';\nexport const cognitoUserPoolEndpointResolver = ({ region, }) => ({\n    url: new AmplifyUrl(`https://${COGNITO_IDP_SERVICE_NAME}.${region}.${getDnsSuffix(region)}`),\n});\n", "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolEndpointResolver } from '../../../foundation/cognitoUserPoolEndpointResolver';\nexport const createCognitoUserPoolEndpointResolver = ({ endpointOverride }) => (input) => {\n    if (endpointOverride) {\n        return { url: new AmplifyUrl(endpointOverride) };\n    }\n    return cognitoUserPoolEndpointResolver(input);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function getUserContextData({ username, userPoolId, userPoolClientId, }) {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    const amazonCognitoAdvancedSecurityData = window\n        .AmazonCognitoAdvancedSecurityData;\n    if (typeof amazonCognitoAdvancedSecurityData === 'undefined') {\n        return undefined;\n    }\n    const advancedSecurityData = amazonCognitoAdvancedSecurityData.getData(username, userPoolId, userPoolClientId);\n    if (advancedSecurityData) {\n        const userContextData = {\n            EncodedData: advancedSecurityData,\n        };\n        return userContextData;\n    }\n    return {};\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig, deDupeAsyncFunction, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokensWithRefreshToken } from '../utils/types';\nimport { AuthError } from '../../../errors/AuthError';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getUserContextData } from './userContextData';\nconst refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig.Cognito;\n    const region = getRegionFromUserPoolId(userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const refreshTokenString = tokens.refreshToken;\n    const AuthParameters = {\n        REFRESH_TOKEN: refreshTokenString,\n    };\n    if (tokens.deviceMetadata?.deviceKey) {\n        AuthParameters.DEVICE_KEY = tokens.deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { AuthenticationResult } = await initiateAuth({ region }, {\n        ClientId: userPoolClientId,\n        AuthFlow: 'REFRESH_TOKEN_AUTH',\n        AuthParameters,\n        UserContextData,\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken\n        ? decodeJWT(AuthenticationResult.IdToken)\n        : undefined;\n    const { iat } = accessToken.payload;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n        throw new AuthError({\n            name: 'iatNotFoundException',\n            message: 'iat not found in access token',\n        });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n        accessToken,\n        idToken,\n        clockDrift,\n        refreshToken: refreshTokenString,\n        username,\n    };\n};\nexport const refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nexport const refreshAuthTokensWithoutDedupe = refreshAuthTokensFunction;\n", "export const AuthTokenStorageKeys = {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    oidcProvider: 'oidcProvider',\n    clockDrift: 'clockDrift',\n    refreshToken: 'refreshToken',\n    deviceKey: 'deviceKey',\n    randomPasswordKey: 'randomPasswordKey',\n    deviceGroupKey: 'deviceGroupKey',\n    signInDetails: 'signInDetails',\n    oauthMetadata: 'oauthMetadata',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction, } from '@aws-amplify/core/internals/utils';\nexport var TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n    TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n    [TokenProviderErrorCode.InvalidAuthTokens]: {\n        message: 'Invalid tokens.',\n        recoverySuggestion: 'Make sure the tokens are valid.',\n    },\n};\nexport const assert = createAssertionFunction(tokenValidationErrorMap);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const AUTH_KEY_PREFIX = 'CognitoIdentityServiceProvider';\n", "import { assertTokenProviderConfig, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { AuthTokenStorageKeys, } from './types';\nimport { TokenProviderErrorCode, assert } from './errorHelpers';\nimport { AUTH_KEY_PREFIX } from './constants';\nexport class DefaultTokenStore {\n    getKeyValueStorage() {\n        if (!this.keyValueStorage) {\n            throw new AuthError({\n                name: 'KeyValueStorageNotFoundException',\n                message: 'KeyValueStorage was not found in TokenStore',\n            });\n        }\n        return this.keyValueStorage;\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    async loadTokens() {\n        // TODO(v6): migration logic should be here\n        // Reading V5 tokens old format\n        try {\n            const authKeys = await this.getAuthKeys();\n            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n            if (!accessTokenString) {\n                throw new AuthError({\n                    name: 'NoSessionFoundException',\n                    message: 'Auth session was not found. Make sure to call signIn.',\n                });\n            }\n            const accessToken = decodeJWT(accessTokenString);\n            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n            const idToken = itString ? decodeJWT(itString) : undefined;\n            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n                undefined;\n            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n            const clockDrift = Number.parseInt(clockDriftString);\n            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n            const tokens = {\n                accessToken,\n                idToken,\n                refreshToken,\n                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n                clockDrift,\n                username: await this.getLastAuthUser(),\n            };\n            if (signInDetails) {\n                tokens.signInDetails = JSON.parse(signInDetails);\n            }\n            return tokens;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    async storeTokens(tokens) {\n        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n        const lastAuthUser = tokens.username;\n        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n        const authKeys = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n        if (tokens.idToken) {\n            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.idToken);\n        }\n        if (tokens.refreshToken) {\n            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.refreshToken);\n        }\n        if (tokens.deviceMetadata) {\n            if (tokens.deviceMetadata.deviceKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n            }\n            if (tokens.deviceMetadata.deviceGroupKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n            }\n            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n        }\n        if (tokens.signInDetails) {\n            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.signInDetails);\n        }\n        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n    }\n    async clearTokens() {\n        const authKeys = await this.getAuthKeys();\n        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n            this.getKeyValueStorage().removeItem(authKeys.idToken),\n            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n            this.getKeyValueStorage().removeItem(authKeys.oauthMetadata),\n        ]);\n    }\n    async getDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n        return randomPassword && deviceGroupKey && deviceKey\n            ? {\n                deviceKey,\n                deviceGroupKey,\n                randomPassword,\n            }\n            : null;\n    }\n    async clearDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n        ]);\n    }\n    async getAuthKeys(username) {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const lastAuthUser = username ?? (await this.getLastAuthUser());\n        return createKeysForAuthStorage(AUTH_KEY_PREFIX, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n    }\n    getLastAuthUserKey() {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const identifier = this.authConfig.Cognito.userPoolClientId;\n        return `${AUTH_KEY_PREFIX}.${identifier}.LastAuthUser`;\n    }\n    async getLastAuthUser() {\n        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n            'username';\n        return lastAuthUser;\n    }\n    async setOAuthMetadata(metadata) {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(oauthMetadataKey, JSON.stringify(metadata));\n    }\n    async getOAuthMetadata() {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        const oauthMetadata = await this.getKeyValueStorage().getItem(oauthMetadataKey);\n        return oauthMetadata && JSON.parse(oauthMetadata);\n    }\n}\nexport const createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nexport function getAuthStorageKeys(authKeys) {\n    const keys = Object.values({ ...authKeys });\n    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n        ...acc,\n        [authKey]: `${prefix}.${identifier}.${authKey}`,\n    }), {});\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { OAuthStorageKeys } from './types';\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nexport class DefaultOAuthStore {\n    constructor(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    async clearOAuthInflightData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await Promise.all([\n            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n            this.keyValueStorage.removeItem(authKeys.oauthState),\n        ]);\n    }\n    async clearOAuthData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.clearOAuthInflightData();\n        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n    }\n    loadOAuthState() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthState);\n    }\n    storeOAuthState(state) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n    }\n    loadPKCE() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n    }\n    storePKCE(pkce) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n    }\n    setAuthConfig(authConfigParam) {\n        this.cognitoConfig = authConfigParam;\n    }\n    async loadOAuthInFlight() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n    }\n    async storeOAuthInFlight(inflight) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n    }\n    async loadOAuthSignIn() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n            [];\n        return {\n            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n            preferPrivateSession: preferPrivateSession === 'true',\n        };\n    }\n    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage } from '@aws-amplify/core';\nimport { DefaultOAuthStore } from '../signInWithRedirectStore';\nexport const oAuthStore = new DefaultOAuthStore(defaultStorage);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst inflightPromises = [];\nexport const addInflightPromise = (resolver) => {\n    inflightPromises.push(resolver);\n};\nexport const resolveAndClearInflightPromises = () => {\n    while (inflightPromises.length) {\n        inflightPromises.pop()?.();\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub, } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL, AmplifyErrorCode, assertTokenProviderConfig, isBrowser, isTokenExpired, } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../errors/AuthError';\nimport { oAuthStore } from '../utils/oauth/oAuthStore';\nimport { addInflightPromise } from '../utils/oauth/inflightPromise';\nexport class TokenOrchestrator {\n    constructor() {\n        this.waitForInflightOAuth = isBrowser()\n            ? async () => {\n                if (!(await oAuthStore.loadOAuthInFlight())) {\n                    return;\n                }\n                if (this.inflightPromise) {\n                    return this.inflightPromise;\n                }\n                // when there is valid oauth config and there is an inflight oauth flow, try\n                // to block async calls that require fetching tokens before the oauth flow completes\n                // e.g. getCurrentUser, fetchAuthSession etc.\n                this.inflightPromise = new Promise((resolve, _reject) => {\n                    addInflightPromise(resolve);\n                });\n                return this.inflightPromise;\n            }\n            : async () => {\n                // no-op for non-browser environments\n            };\n    }\n    setAuthConfig(authConfig) {\n        oAuthStore.setAuthConfig(authConfig.Cognito);\n        this.authConfig = authConfig;\n    }\n    setTokenRefresher(tokenRefresher) {\n        this.tokenRefresher = tokenRefresher;\n    }\n    setAuthTokenStore(tokenStore) {\n        this.tokenStore = tokenStore;\n    }\n    getTokenStore() {\n        if (!this.tokenStore) {\n            throw new AuthError({\n                name: 'EmptyTokenStoreException',\n                message: 'TokenStore not set',\n            });\n        }\n        return this.tokenStore;\n    }\n    getTokenRefresher() {\n        if (!this.tokenRefresher) {\n            throw new AuthError({\n                name: 'EmptyTokenRefresherException',\n                message: 'TokenRefresher not set',\n            });\n        }\n        return this.tokenRefresher;\n    }\n    async getTokens(options) {\n        let tokens;\n        try {\n            assertTokenProviderConfig(this.authConfig?.Cognito);\n        }\n        catch (_err) {\n            // Token provider not configured\n            return null;\n        }\n        await this.waitForInflightOAuth();\n        this.inflightPromise = undefined;\n        tokens = await this.getTokenStore().loadTokens();\n        const username = await this.getTokenStore().getLastAuthUser();\n        if (tokens === null) {\n            return null;\n        }\n        const idTokenExpired = !!tokens?.idToken &&\n            isTokenExpired({\n                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n                clockDrift: tokens.clockDrift ?? 0,\n            });\n        const accessTokenExpired = isTokenExpired({\n            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n            clockDrift: tokens.clockDrift ?? 0,\n        });\n        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n            tokens = await this.refreshTokens({\n                tokens,\n                username,\n            });\n            if (tokens === null) {\n                return null;\n            }\n        }\n        return {\n            accessToken: tokens?.accessToken,\n            idToken: tokens?.idToken,\n            signInDetails: tokens?.signInDetails,\n        };\n    }\n    async refreshTokens({ tokens, username, }) {\n        try {\n            const { signInDetails } = tokens;\n            const newTokens = await this.getTokenRefresher()({\n                tokens,\n                authConfig: this.authConfig,\n                username,\n            });\n            newTokens.signInDetails = signInDetails;\n            await this.setTokens({ tokens: newTokens });\n            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n            return newTokens;\n        }\n        catch (err) {\n            return this.handleErrors(err);\n        }\n    }\n    handleErrors(err) {\n        assertServiceError(err);\n        if (err.name !== AmplifyErrorCode.NetworkError) {\n            // TODO(v6): Check errors on client\n            this.clearTokens();\n        }\n        Hub.dispatch('auth', {\n            event: 'tokenRefresh_failure',\n            data: { error: err },\n        }, 'Auth', AMPLIFY_SYMBOL);\n        if (err.name.startsWith('NotAuthorizedException')) {\n            return null;\n        }\n        throw err;\n    }\n    async setTokens({ tokens }) {\n        return this.getTokenStore().storeTokens(tokens);\n    }\n    async clearTokens() {\n        return this.getTokenStore().clearTokens();\n    }\n    getDeviceMetadata(username) {\n        return this.getTokenStore().getDeviceMetadata(username);\n    }\n    clearDeviceMetadata(username) {\n        return this.getTokenStore().clearDeviceMetadata(username);\n    }\n    setOAuthMetadata(metadata) {\n        return this.getTokenStore().setOAuthMetadata(metadata);\n    }\n    getOAuthMetadata() {\n        return this.getTokenStore().getOAuthMetadata();\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage, } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens';\nimport { DefaultTokenStore } from './TokenStore';\nimport { TokenOrchestrator } from './TokenOrchestrator';\nexport class CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider';\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nexport const cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nexport const { tokenOrchestrator } = cognitoUserPoolsTokenProvider;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from './tokenProvider';\nexport async function cacheCognitoTokens(AuthenticationResult) {\n    if (AuthenticationResult.AccessToken) {\n        const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n        const currentTime = new Date().getTime();\n        const clockDrift = accessTokenIssuedAtInMillis > 0\n            ? accessTokenIssuedAtInMillis - currentTime\n            : 0;\n        let idToken;\n        let refreshToken;\n        let deviceMetadata;\n        if (AuthenticationResult.RefreshToken) {\n            refreshToken = AuthenticationResult.RefreshToken;\n        }\n        if (AuthenticationResult.IdToken) {\n            idToken = decodeJWT(AuthenticationResult.IdToken);\n        }\n        if (AuthenticationResult?.NewDeviceMetadata) {\n            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n        }\n        const tokens = {\n            accessToken,\n            idToken,\n            refreshToken,\n            clockDrift,\n            deviceMetadata,\n            username: AuthenticationResult.username,\n        };\n        if (AuthenticationResult?.signInDetails) {\n            tokens.signInDetails = AuthenticationResult.signInDetails;\n        }\n        await tokenOrchestrator.setTokens({\n            tokens,\n        });\n    }\n    else {\n        // This would be a service error\n        throw new AmplifyError({\n            message: 'Invalid tokens',\n            name: 'InvalidTokens',\n            recoverySuggestion: 'Check Cognito UserPool settings',\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nimport { AuthError } from '../../../errors/AuthError';\nexport const ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\nexport const dispatchSignedInHubEvent = async () => {\n    try {\n        Hub.dispatch('auth', {\n            event: 'signedIn',\n            data: await getCurrentUser(),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    catch (error) {\n        if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n            throw new AuthError({\n                name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n                message: ERROR_MESSAGE,\n                recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.',\n            });\n        }\n        throw error;\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction defaultState() {\n    return {\n        active: false,\n    };\n}\nconst autoSignInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_SESSION':\n            return {\n                ...state,\n                session: action.value,\n            };\n        case 'START':\n            return {\n                ...state,\n                active: true,\n            };\n        case 'RESET':\n            return defaultState();\n        default:\n            return state;\n    }\n};\nconst createAutoSignInStore = (reducer) => {\n    let currentState = reducer(defaultState(), { type: 'RESET' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nexport const autoSignInStore = createAutoSignInStore(autoSignInReducer);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { syncSessionStorage } from '@aws-amplify/core';\n// Minutes until stored session invalidates is defaulted to 3 minutes\n// to maintain parity with Amazon Cognito user pools API behavior\nconst MS_TO_EXPIRY = 3 * 60 * 1000;\nconst TGT_STATE = 'CognitoSignInState';\nconst SIGN_IN_STATE_KEYS = {\n    username: `${TGT_STATE}.username`,\n    challengeName: `${TGT_STATE}.challengeName`,\n    signInSession: `${TGT_STATE}.signInSession`,\n    expiry: `${TGT_STATE}.expiry`,\n};\nconst signInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_SIGN_IN_SESSION':\n            persistSignInState({ signInSession: action.value });\n            return {\n                ...state,\n                signInSession: action.value,\n            };\n        case 'SET_SIGN_IN_STATE':\n            persistSignInState(action.value);\n            return {\n                ...action.value,\n            };\n        case 'SET_CHALLENGE_NAME':\n            persistSignInState({ challengeName: action.value });\n            return {\n                ...state,\n                challengeName: action.value,\n            };\n        case 'SET_USERNAME':\n            persistSignInState({ username: action.value });\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_INITIAL_STATE':\n            return getInitialState();\n        case 'RESET_STATE':\n            clearPersistedSignInState();\n            return getDefaultState();\n        // this state is never reachable\n        default:\n            return state;\n    }\n};\nconst isExpired = (expiryDate) => {\n    const expiryTimestamp = Number(expiryDate);\n    const currentTimestamp = Date.now();\n    return expiryTimestamp <= currentTimestamp;\n};\nexport const resetActiveSignInState = () => {\n    signInStore.dispatch({ type: 'RESET_STATE' });\n};\nconst clearPersistedSignInState = () => {\n    for (const stateKey of Object.values(SIGN_IN_STATE_KEYS)) {\n        syncSessionStorage.removeItem(stateKey);\n    }\n};\nconst getDefaultState = () => ({\n    username: undefined,\n    challengeName: undefined,\n    signInSession: undefined,\n});\n// Hydrate signInStore from syncSessionStorage if the session has not expired\nconst getInitialState = () => {\n    const expiry = syncSessionStorage.getItem(SIGN_IN_STATE_KEYS.expiry);\n    if (!expiry || isExpired(expiry)) {\n        clearPersistedSignInState();\n        return getDefaultState();\n    }\n    const username = syncSessionStorage.getItem(SIGN_IN_STATE_KEYS.username) ?? undefined;\n    const challengeName = (syncSessionStorage.getItem(SIGN_IN_STATE_KEYS.challengeName) ?? undefined);\n    const signInSession = syncSessionStorage.getItem(SIGN_IN_STATE_KEYS.signInSession) ?? undefined;\n    return {\n        username,\n        challengeName,\n        signInSession,\n    };\n};\nconst createStore = reducer => {\n    let currentState = reducer(getDefaultState(), { type: 'SET_INITIAL_STATE' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nexport const signInStore = createStore(signInReducer);\nexport function setActiveSignInState(state) {\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_STATE',\n        value: state,\n    });\n}\n// Save local state into Session Storage\nexport const persistSignInState = ({ challengeName, signInSession, username, }) => {\n    username && syncSessionStorage.setItem(SIGN_IN_STATE_KEYS.username, username);\n    challengeName &&\n        syncSessionStorage.setItem(SIGN_IN_STATE_KEYS.challengeName, challengeName);\n    if (signInSession) {\n        syncSessionStorage.setItem(SIGN_IN_STATE_KEYS.signInSession, signInSession);\n        // Updates expiry when session is passed\n        syncSessionStorage.setItem(SIGN_IN_STATE_KEYS.expiry, String(Date.now() + MS_TO_EXPIRY));\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, AmplifyErrorCode, createAssertionFunction, } from '@aws-amplify/core/internals/utils';\nexport class PasskeyError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = PasskeyError;\n        Object.setPrototypeOf(this, PasskeyError.prototype);\n    }\n}\nexport var PasskeyErrorCode;\n(function (PasskeyErrorCode) {\n    // not supported\n    PasskeyErrorCode[\"PasskeyNotSupported\"] = \"PasskeyNotSupported\";\n    // duplicate passkey\n    PasskeyErrorCode[\"PasskeyAlreadyExists\"] = \"PasskeyAlreadyExists\";\n    // misconfigurations\n    PasskeyErrorCode[\"InvalidPasskeyRegistrationOptions\"] = \"InvalidPasskeyRegistrationOptions\";\n    PasskeyErrorCode[\"InvalidPasskeyAuthenticationOptions\"] = \"InvalidPasskeyAuthenticationOptions\";\n    PasskeyErrorCode[\"RelyingPartyMismatch\"] = \"RelyingPartyMismatch\";\n    // failed credential creation / retrieval\n    PasskeyErrorCode[\"PasskeyRegistrationFailed\"] = \"PasskeyRegistrationFailed\";\n    PasskeyErrorCode[\"PasskeyRetrievalFailed\"] = \"PasskeyRetrievalFailed\";\n    // cancel / aborts\n    PasskeyErrorCode[\"PasskeyRegistrationCanceled\"] = \"PasskeyRegistrationCanceled\";\n    PasskeyErrorCode[\"PasskeyAuthenticationCanceled\"] = \"PasskeyAuthenticationCanceled\";\n    PasskeyErrorCode[\"PasskeyOperationAborted\"] = \"PasskeyOperationAborted\";\n})(PasskeyErrorCode || (PasskeyErrorCode = {}));\nconst notSupportedRecoverySuggestion = 'Passkeys may not be supported on this device. Ensure your application is running in a secure context (HTTPS) and Web Authentication API is supported.';\nconst abortOrCancelRecoverySuggestion = 'User may have canceled the ceremony or another interruption has occurred. Check underlying error for details.';\nconst misconfigurationRecoverySuggestion = 'Ensure your user pool is configured to support the WEB_AUTHN as an authentication factor.';\nconst passkeyErrorMap = {\n    [PasskeyErrorCode.PasskeyNotSupported]: {\n        message: 'Passkeys may not be supported on this device.',\n        recoverySuggestion: notSupportedRecoverySuggestion,\n    },\n    [PasskeyErrorCode.InvalidPasskeyRegistrationOptions]: {\n        message: 'Invalid passkey registration options.',\n        recoverySuggestion: misconfigurationRecoverySuggestion,\n    },\n    [PasskeyErrorCode.InvalidPasskeyAuthenticationOptions]: {\n        message: 'Invalid passkey authentication options.',\n        recoverySuggestion: misconfigurationRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyRegistrationFailed]: {\n        message: 'Device failed to create passkey.',\n        recoverySuggestion: notSupportedRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyRetrievalFailed]: {\n        message: 'Device failed to retrieve passkey.',\n        recoverySuggestion: 'Passkeys may not be available on this device. Try an alternative authentication factor like PASSWORD, EMAIL_OTP, or SMS_OTP.',\n    },\n    [PasskeyErrorCode.PasskeyAlreadyExists]: {\n        message: 'Passkey already exists in authenticator.',\n        recoverySuggestion: 'Proceed with existing passkey or try again after deleting the credential.',\n    },\n    [PasskeyErrorCode.PasskeyRegistrationCanceled]: {\n        message: 'Passkey registration ceremony has been canceled.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyAuthenticationCanceled]: {\n        message: 'Passkey authentication ceremony has been canceled.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyOperationAborted]: {\n        message: 'Passkey operation has been aborted.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.RelyingPartyMismatch]: {\n        message: 'Relying party does not match current domain.',\n        recoverySuggestion: 'Ensure relying party identifier matches current domain.',\n    },\n};\nexport const assertPasskeyError = createAssertionFunction(passkeyErrorMap, PasskeyError);\n/**\n * Handle Passkey Authentication Errors\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nexport const handlePasskeyAuthenticationError = (err) => {\n    if (err instanceof PasskeyError) {\n        return err;\n    }\n    if (err instanceof Error) {\n        if (err.name === 'NotAllowedError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyAuthenticationCanceled];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyAuthenticationCanceled,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return handlePasskeyError(err);\n};\n/**\n * Handle Passkey Registration Errors\n * https://w3c.github.io/webauthn/#sctn-create-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nexport const handlePasskeyRegistrationError = (err) => {\n    if (err instanceof PasskeyError) {\n        return err;\n    }\n    if (err instanceof Error) {\n        // Duplicate Passkey\n        if (err.name === 'InvalidStateError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyAlreadyExists];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyAlreadyExists,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n        // User Cancels Ceremony / Generic Catch All\n        if (err.name === 'NotAllowedError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyRegistrationCanceled];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyRegistrationCanceled,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return handlePasskeyError(err);\n};\n/**\n * Handles Overlapping Passkey Errors Between Registration & Authentication\n * https://w3c.github.io/webauthn/#sctn-create-request-exceptions\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyError = (err) => {\n    if (err instanceof Error) {\n        // Passkey Operation Aborted\n        if (err.name === 'AbortError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyOperationAborted];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyOperationAborted,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n        // Relying Party / Domain Mismatch\n        if (err.name === 'SecurityError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.RelyingPartyMismatch];\n            return new PasskeyError({\n                name: PasskeyErrorCode.RelyingPartyMismatch,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return new PasskeyError({\n        name: AmplifyErrorCode.Unknown,\n        message: 'An unknown error has occurred.',\n        underlyingError: err,\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isBrowser } from '@aws-amplify/core/internals/utils';\n/**\n * Determines if passkey is supported in current context\n * Will return false if executed in non-secure context\n * @returns boolean\n */\nexport const getIsPasskeySupported = () => {\n    return (isBrowser() &&\n        window.isSecureContext &&\n        'credentials' in navigator &&\n        typeof window.PublicKeyCredential === 'function');\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encoder } from '@aws-amplify/core/internals/utils';\n// https://datatracker.ietf.org/doc/html/rfc4648#page-7\n/**\n * Converts an ArrayBuffer to a base64url encoded string\n * @param buffer - the ArrayBuffer instance of a Uint8Array\n * @returns string - a base64url encoded string\n */\nexport const convertArrayBufferToBase64Url = (buffer) => {\n    return base64Encoder.convert(new Uint8Array(buffer), {\n        urlSafe: true,\n        skipPadding: true,\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decoder } from '@aws-amplify/core/internals/utils';\n/**\n * Converts a base64url encoded string to an ArrayBuffer\n * @param base64url - a base64url encoded string\n * @returns ArrayBuffer\n */\nexport const convertBase64UrlToArrayBuffer = (base64url) => {\n    return Uint8Array.from(base64Decoder.convert(base64url, { urlSafe: true }), x => x.charCodeAt(0)).buffer;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { convertArrayBufferToBase64Url, convertBase64UrlToArrayBuffer, } from '../../../foundation/convert';\n/**\n * Deserializes Public Key Credential Creation Options JSON\n * @param input PasskeyCreateOptionsJson\n * @returns PublicKeyCredentialCreationOptions\n */\nexport const deserializeJsonToPkcCreationOptions = (input) => {\n    const userIdBuffer = convertBase64UrlToArrayBuffer(input.user.id);\n    const challengeBuffer = convertBase64UrlToArrayBuffer(input.challenge);\n    const excludeCredentialsWithBuffer = (input.excludeCredentials || []).map(excludeCred => ({\n        ...excludeCred,\n        id: convertBase64UrlToArrayBuffer(excludeCred.id),\n    }));\n    return {\n        ...input,\n        excludeCredentials: excludeCredentialsWithBuffer,\n        challenge: challengeBuffer,\n        user: {\n            ...input.user,\n            id: userIdBuffer,\n        },\n    };\n};\n/**\n * Serializes a Public Key Credential With Attestation to JSON\n * @param input PasskeyCreateResult\n * @returns PasskeyCreateResultJson\n */\nexport const serializePkcWithAttestationToJson = (input) => {\n    const response = {\n        clientDataJSON: convertArrayBufferToBase64Url(input.response.clientDataJSON),\n        attestationObject: convertArrayBufferToBase64Url(input.response.attestationObject),\n        transports: input.response.getTransports(),\n        publicKeyAlgorithm: input.response.getPublicKeyAlgorithm(),\n        authenticatorData: convertArrayBufferToBase64Url(input.response.getAuthenticatorData()),\n    };\n    const publicKey = input.response.getPublicKey();\n    if (publicKey) {\n        response.publicKey = convertArrayBufferToBase64Url(publicKey);\n    }\n    const resultJson = {\n        type: input.type,\n        id: input.id,\n        rawId: convertArrayBufferToBase64Url(input.rawId),\n        clientExtensionResults: input.getClientExtensionResults(),\n        response,\n    };\n    if (input.authenticatorAttachment) {\n        resultJson.authenticatorAttachment = input.authenticatorAttachment;\n    }\n    return resultJson;\n};\n/**\n * Deserializes Public Key Credential Get Options JSON\n * @param input PasskeyGetOptionsJson\n * @returns PublicKeyCredentialRequestOptions\n */\nexport const deserializeJsonToPkcGetOptions = (input) => {\n    const challengeBuffer = convertBase64UrlToArrayBuffer(input.challenge);\n    const allowedCredentialsWithBuffer = (input.allowCredentials || []).map(allowedCred => ({\n        ...allowedCred,\n        id: convertBase64UrlToArrayBuffer(allowedCred.id),\n    }));\n    return {\n        ...input,\n        challenge: challengeBuffer,\n        allowCredentials: allowedCredentialsWithBuffer,\n    };\n};\n/**\n * Serializes a Public Key Credential With Attestation to JSON\n * @param input PasskeyGetResult\n * @returns PasskeyGetResultJson\n */\nexport const serializePkcWithAssertionToJson = (input) => {\n    const response = {\n        clientDataJSON: convertArrayBufferToBase64Url(input.response.clientDataJSON),\n        authenticatorData: convertArrayBufferToBase64Url(input.response.authenticatorData),\n        signature: convertArrayBufferToBase64Url(input.response.signature),\n    };\n    if (input.response.userHandle) {\n        response.userHandle = convertArrayBufferToBase64Url(input.response.userHandle);\n    }\n    const resultJson = {\n        id: input.id,\n        rawId: convertArrayBufferToBase64Url(input.rawId),\n        type: input.type,\n        clientExtensionResults: input.getClientExtensionResults(),\n        response,\n    };\n    if (input.authenticatorAttachment) {\n        resultJson.authenticatorAttachment = input.authenticatorAttachment;\n    }\n    return resultJson;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PasskeyErrorCode, assertPasskeyError } from '../errors';\n/**\n * Passkey Create Types\n */\nexport { assertValidCredentialCreationOptions, } from './shared';\nexport function assertCredentialIsPkcWithAuthenticatorAttestationResponse(credential) {\n    assertPasskeyError(credential &&\n        credential instanceof PublicKeyCredential &&\n        credential.response instanceof AuthenticatorAttestationResponse, PasskeyErrorCode.PasskeyRegistrationFailed);\n}\nexport function assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential) {\n    assertPasskeyError(credential &&\n        credential instanceof PublicKeyCredential &&\n        credential.response instanceof AuthenticatorAssertionResponse, PasskeyErrorCode.PasskeyRetrievalFailed);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PasskeyErrorCode, assertPasskeyError, handlePasskeyAuthenticationError, } from './errors';\nimport { getIsPasskeySupported } from './getIsPasskeySupported';\nimport { deserializeJsonToPkcGetOptions, serializePkcWithAssertionToJson, } from './serde';\nimport { assertCredentialIsPkcWithAuthenticatorAssertionResponse, } from './types';\nexport const getPasskey = async (input) => {\n    try {\n        const isPasskeySupported = getIsPasskeySupported();\n        assertPasskeyError(isPasskeySupported, PasskeyErrorCode.PasskeyNotSupported);\n        const passkeyGetOptions = deserializeJsonToPkcGetOptions(input);\n        const credential = await navigator.credentials.get({\n            publicKey: passkeyGetOptions,\n        });\n        assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential);\n        return serializePkcWithAssertionToJson(credential);\n    }\n    catch (err) {\n        throw handlePasskeyAuthenticationError(err);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { createUserPoolDeserializer, createUserPoolSerializer, } from './shared/serde';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createConfirmDeviceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmDevice'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const textEncoder = {\n    convert(input) {\n        return new TextEncoder().encode(input);\n    },\n};\n", "/* eslint-disable */\n// @ts-nocheck -> BigInteger is already a vended utility\n// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\nexport default BigInteger;\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\nfunction BigInteger(a, b) {\n    if (a != null)\n        this.fromString(a, b);\n}\n// return new, unset BigInteger\nfunction nbi() {\n    return new BigInteger(null, null);\n}\n// Bits per digit\nlet dbits;\n// JavaScript engine analysis\nconst canary = 0xdeadbeefcafe;\nconst j_lm = (canary & 0xffffff) === 0xefcafe;\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n    while (--n >= 0) {\n        const v = x * this[i++] + w[j] + c;\n        c = Math.floor(v / 0x4000000);\n        w[j++] = v & 0x3ffffff;\n    }\n    return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n    const xl = x & 0x7fff;\n    const xh = x >> 15;\n    while (--n >= 0) {\n        let l = this[i] & 0x7fff;\n        const h = this[i++] >> 15;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n        w[j++] = l & 0x3fffffff;\n    }\n    return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n    const xl = x & 0x3fff;\n    const xh = x >> 14;\n    while (--n >= 0) {\n        let l = this[i] & 0x3fff;\n        const h = this[i++] >> 14;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n        c = (l >> 28) + (m >> 14) + xh * h;\n        w[j++] = l & 0xfffffff;\n    }\n    return c;\n}\nconst inBrowser = typeof navigator !== 'undefined';\nif (inBrowser && j_lm && navigator.appName === 'Microsoft Internet Explorer') {\n    BigInteger.prototype.am = am2;\n    dbits = 30;\n}\nelse if (inBrowser && j_lm && navigator.appName !== 'Netscape') {\n    BigInteger.prototype.am = am1;\n    dbits = 26;\n}\nelse {\n    // Mozilla/Netscape seems to prefer am3\n    BigInteger.prototype.am = am3;\n    dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nconst BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nconst BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nconst BI_RC = [];\nlet rr, vv;\nrr = '0'.charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'a'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'A'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n    const c = BI_RC[s.charCodeAt(i)];\n    return c == null ? -1 : c;\n}\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n    for (let i = this.t - 1; i >= 0; --i)\n        r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n}\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n    this.t = 1;\n    this.s = x < 0 ? -1 : 0;\n    if (x > 0)\n        this[0] = x;\n    else if (x < -1)\n        this[0] = x + this.DV;\n    else\n        this.t = 0;\n}\n// return bigint initialized to value\nfunction nbv(i) {\n    const r = nbi();\n    r.fromInt(i);\n    return r;\n}\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n    let k;\n    if (b === 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    this.t = 0;\n    this.s = 0;\n    let i = s.length;\n    let mi = false;\n    let sh = 0;\n    while (--i >= 0) {\n        const x = intAt(s, i);\n        if (x < 0) {\n            if (s.charAt(i) === '-')\n                mi = true;\n            continue;\n        }\n        mi = false;\n        if (sh === 0)\n            this[this.t++] = x;\n        else if (sh + k > this.DB) {\n            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n            this[this.t++] = x >> (this.DB - sh);\n        }\n        else\n            this[this.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= this.DB)\n            sh -= this.DB;\n    }\n    this.clamp();\n    if (mi)\n        BigInteger.ZERO.subTo(this, this);\n}\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n    const c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)\n        --this.t;\n}\n// (public) return string representation in given radix\nfunction bnToString(b) {\n    if (this.s < 0)\n        return '-' + this.negate().toString(b);\n    let k;\n    if (b == 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    const km = (1 << k) - 1;\n    let d;\n    let m = false;\n    let r = '';\n    let i = this.t;\n    let p = this.DB - ((i * this.DB) % k);\n    if (i-- > 0) {\n        if (p < this.DB && (d = this[i] >> p) > 0) {\n            m = true;\n            r = int2char(d);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (this[i] & ((1 << p) - 1)) << (k - p);\n                d |= this[--i] >> (p += this.DB - k);\n            }\n            else {\n                d = (this[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += this.DB;\n                    --i;\n                }\n            }\n            if (d > 0)\n                m = true;\n            if (m)\n                r += int2char(d);\n        }\n    }\n    return m ? r : '0';\n}\n// (public) -this\nfunction bnNegate() {\n    const r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n}\n// (public) |this|\nfunction bnAbs() {\n    return this.s < 0 ? this.negate() : this;\n}\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n    let r = this.s - a.s;\n    if (r != 0)\n        return r;\n    let i = this.t;\n    r = i - a.t;\n    if (r != 0)\n        return this.s < 0 ? -r : r;\n    while (--i >= 0)\n        if ((r = this[i] - a[i]) != 0)\n            return r;\n    return 0;\n}\n// returns bit length of the integer x\nfunction nbits(x) {\n    let r = 1;\n    let t;\n    if ((t = x >>> 16) !== 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) !== 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) !== 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) !== 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) !== 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n    if (this.t <= 0)\n        return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n}\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n    let i;\n    for (i = this.t - 1; i >= 0; --i)\n        r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i)\n        r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n}\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n    for (let i = n; i < this.t; ++i)\n        r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n}\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << cbs) - 1;\n    const ds = Math.floor(n / this.DB);\n    let c = (this.s << bs) & this.DM;\n    let i;\n    for (i = this.t - 1; i >= 0; --i) {\n        r[i + ds + 1] = (this[i] >> cbs) | c;\n        c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i)\n        r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n}\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n    r.s = this.s;\n    const ds = Math.floor(n / this.DB);\n    if (ds >= this.t) {\n        r.t = 0;\n        return;\n    }\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (let i = ds + 1; i < this.t; ++i) {\n        r[i - ds - 1] |= (this[i] & bm) << cbs;\n        r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0)\n        r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n}\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] - a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c -= a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c -= a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c -= a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c < -1)\n        r[i++] = this.DV + c;\n    else if (c > 0)\n        r[i++] = c;\n    r.t = i;\n    r.clamp();\n}\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n    const x = this.abs();\n    const y = a.abs();\n    let i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < y.t; ++i)\n        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s !== a.s)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n    const x = this.abs();\n    let i = (r.t = 2 * x.t);\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i) {\n        const c = x.am(i, x[i], r, 2 * i, 0, 1);\n        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >=\n            x.DV) {\n            r[i + x.t] -= x.DV;\n            r[i + x.t + 1] = 1;\n        }\n    }\n    if (r.t > 0)\n        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n}\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n    const pm = m.abs();\n    if (pm.t <= 0)\n        return;\n    const pt = this.abs();\n    if (pt.t < pm.t) {\n        if (q != null)\n            q.fromInt(0);\n        if (r != null)\n            this.copyTo(r);\n        return;\n    }\n    if (r === null)\n        r = nbi();\n    const y = nbi();\n    const ts = this.s;\n    const ms = m.s;\n    const nsh = this.DB - nbits(pm[pm.t - 1]);\n    // normalize modulus\n    if (nsh > 0) {\n        pm.lShiftTo(nsh, y);\n        pt.lShiftTo(nsh, r);\n    }\n    else {\n        pm.copyTo(y);\n        pt.copyTo(r);\n    }\n    const ys = y.t;\n    const y0 = y[ys - 1];\n    if (y0 === 0)\n        return;\n    const yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n    const d1 = this.FV / yt;\n    const d2 = (1 << this.F1) / yt;\n    const e = 1 << this.F2;\n    let i = r.t;\n    let j = i - ys;\n    const t = q === null ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y);\n    // \"negative\" y so we can replace sub with am later\n    while (y.t < ys)\n        y[y.t++] = 0;\n    while (--j >= 0) {\n        // Estimate quotient digit\n        let qd = r[--i] === y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n            // Try it out\n            y.dlShiftTo(j, t);\n            r.subTo(t, r);\n            while (r[i] < --qd)\n                r.subTo(t, r);\n        }\n    }\n    if (q !== null) {\n        r.drShiftTo(ys, q);\n        if (ts !== ms)\n            BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0)\n        r.rShiftTo(nsh, r);\n    // Denormalize remainder\n    if (ts < 0)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (public) this mod a\nfunction bnMod(a) {\n    const r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        a.subTo(r, r);\n    return r;\n}\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n    if (this.t < 1)\n        return 0;\n    const x = this[0];\n    if ((x & 1) === 0)\n        return 0;\n    let y = x & 3;\n    // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\n    // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\n    // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\n    // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - ((x * y) % this.DV))) % this.DV;\n    // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return y > 0 ? this.DV - y : -y;\n}\nfunction bnEquals(a) {\n    return this.compareTo(a) === 0;\n}\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] + a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c += a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c += a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c > 0)\n        r[i++] = c;\n    else if (c < -1)\n        r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n}\n// (public) this + a\nfunction bnAdd(a) {\n    const r = nbi();\n    this.addTo(a, r);\n    return r;\n}\n// (public) this - a\nfunction bnSubtract(a) {\n    const r = nbi();\n    this.subTo(a, r);\n    return r;\n}\n// (public) this * a\nfunction bnMultiply(a) {\n    const r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n}\n// (public) this / a\nfunction bnDivide(a) {\n    const r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n}\n// Montgomery reduction\nfunction Montgomery(m) {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n}\n// xR mod m\nfunction montConvert(x) {\n    const r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        this.m.subTo(r, r);\n    return r;\n}\n// x/R mod m\nfunction montRevert(x) {\n    const r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n}\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n    while (x.t <= this.mt2)\n        // pad x so am has enough room later\n        x[x.t++] = 0;\n    for (let i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        let j = x[i] & 0x7fff;\n        const u0 = (j * this.mpl +\n            (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) &\n            x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i + this.m.t;\n        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n        // propagate carry\n        while (x[j] >= x.DV) {\n            x[j] -= x.DV;\n            x[++j]++;\n        }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0)\n        x.subTo(this.m, x);\n}\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n    let i = e.bitLength();\n    let k;\n    let r = nbv(1);\n    const z = new Montgomery(m);\n    if (i <= 0)\n        return r;\n    else if (i < 18)\n        k = 1;\n    else if (i < 48)\n        k = 3;\n    else if (i < 144)\n        k = 4;\n    else if (i < 768)\n        k = 5;\n    else\n        k = 6;\n    // precomputation\n    const g = [];\n    let n = 3;\n    const k1 = k - 1;\n    const km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1) {\n        const g2 = nbi();\n        z.sqrTo(g[1], g2);\n        while (n <= km) {\n            g[n] = nbi();\n            z.mulTo(g2, g[n - 2], g[n]);\n            n += 2;\n        }\n    }\n    let j = e.t - 1;\n    let w;\n    let is1 = true;\n    let r2 = nbi();\n    let t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0) {\n        if (i >= k1)\n            w = (e[j] >> (i - k1)) & km;\n        else {\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n            if (j > 0)\n                w |= e[j - 1] >> (this.DB + i - k1);\n        }\n        n = k;\n        while ((w & 1) === 0) {\n            w >>= 1;\n            --n;\n        }\n        if ((i -= n) < 0) {\n            i += this.DB;\n            --j;\n        }\n        if (is1) {\n            // ret == 1, don't bother squaring or multiplying it\n            g[w].copyTo(r);\n            is1 = false;\n        }\n        else {\n            while (n > 1) {\n                z.sqrTo(r, r2);\n                z.sqrTo(r2, r);\n                n -= 2;\n            }\n            if (n > 0)\n                z.sqrTo(r, r2);\n            else {\n                t = r;\n                r = r2;\n                r2 = t;\n            }\n            z.mulTo(r2, g[w], r);\n        }\n        while (j >= 0 && (e[j] & (1 << i)) === 0) {\n            z.sqrTo(r, r2);\n            t = r;\n            r = r2;\n            r2 = t;\n            if (--i < 0) {\n                i = this.DB - 1;\n                --j;\n            }\n        }\n    }\n    const result = z.revert(r);\n    callback(null, result);\n    return result;\n}\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport const calculateS = async ({ a, g, k, x, B, N, U, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(x, N, (outerErr, outerResult) => {\n            if (outerErr) {\n                reject(outerErr);\n                return;\n            }\n            B.subtract(k.multiply(outerResult)).modPow(a.add(U.multiply(x)), N, (innerErr, innerResult) => {\n                if (innerErr) {\n                    reject(innerErr);\n                    return;\n                }\n                resolve(innerResult.mod(N));\n            });\n        });\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const INIT_N = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' +\n    '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' +\n    'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' +\n    'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' +\n    'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' +\n    'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' +\n    '83655D23DCA3AD961C62F356208552BB9ED529077096966D' +\n    '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' +\n    'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' +\n    'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' +\n    '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' +\n    'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' +\n    'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' +\n    'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' +\n    'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' +\n    '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nexport const SHORT_TO_HEX = {};\nexport const HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { HEX_TO_SHORT } from './constants';\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nexport const getBytesFromHex = (encoded) => {\n    if (encoded.length % 2 !== 0) {\n        throw new Error('Hex encoded strings must have an even number length');\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SHORT_TO_HEX } from './constants';\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nexport const getHexFromBytes = (bytes) => {\n    let out = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes';\n/**\n * Calculate a hash from a `SourceData`\n * @param {SourceData} data Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nexport const getHashFromData = (data) => {\n    const sha256 = new Sha256();\n    sha256.update(data);\n    const hashedData = sha256.digestSync();\n    const hashHexFromUint8 = getHexFromBytes(hashedData);\n    return new Array(64 - hashHexFromUint8.length).join('0') + hashHexFromUint8;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBytesFromHex } from './getBytesFromHex';\nimport { getHashFromData } from './getHashFromData';\n/**\n * Calculate a hash from a hex string\n * @param {string} hexStr Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nexport const getHashFromHex = (hexStr) => getHashFromData(getBytesFromHex(hexStr));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from './BigInteger';\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\nconst HEX_MSB_REGEX = /^[89a-f]/i;\n/**\n * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n *\n * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n * byte array containing the two's-complement representation of a BigInteger. The array contains\n * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n *\n * Examples showing how ambiguity is avoided by left padding with:\n * \t\"00\" (for positive values where the most-significant-bit is set)\n *  \"FF\" (for negative values where the most-significant-bit is set)\n *\n * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n * padHex(bigInteger.fromInt(20))    === \"14\"\n *\n * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n * padHex(bigInteger.fromInt(56))    === \"38\"\n *\n * padHex(bigInteger.fromInt(-20))   === \"EC\"\n * padHex(bigInteger.fromInt(236))   === \"00EC\"\n *\n * padHex(bigInteger.fromInt(-56))   === \"C8\"\n * padHex(bigInteger.fromInt(200))   === \"00C8\"\n *\n * @param {AuthBigInteger} bigInt Number to encode.\n * @returns {String} even-length hex string of the two's complement encoding.\n */\nexport const getPaddedHex = (bigInt) => {\n    if (!(bigInt instanceof BigInteger)) {\n        throw new Error('Not a BigInteger');\n    }\n    const isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n    /* Get a hex string for abs(bigInt) */\n    let hexStr = bigInt.abs().toString(16);\n    /* Pad hex to even length if needed */\n    hexStr = hexStr.length % 2 !== 0 ? `0${hexStr}` : hexStr;\n    /* Prepend \"00\" if the most significant bit is set */\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? `00${hexStr}` : hexStr;\n    if (isNegative) {\n        /* Flip the bits of the representation */\n        const invertedNibbles = hexStr\n            .split('')\n            .map((x) => {\n            const invertedNibble = ~parseInt(x, 16) & 0xf;\n            return '0123456789ABCDEF'.charAt(invertedNibble);\n        })\n            .join('');\n        /* After flipping the bits, add one to get the 2's complement representation */\n        const flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n        hexStr = flippedBitsBI.toString(16);\n        /*\n        For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n\n        Any sequence of '1' bits on the left can always be substituted with a single '1' bit\n        without changing the represented value.\n\n        This only happens in the case when the input is 80...00\n        */\n        if (hexStr.toUpperCase().startsWith('FF8')) {\n            hexStr = hexStr.substring(2);\n        }\n    }\n    return hexStr;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getPaddedHex } from '../getPaddedHex';\n/**\n * @internal\n */\nexport const calculateU = ({ A, B, }) => {\n    const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n    if (U.equals(BigInteger.ZERO)) {\n        throw new Error('U cannot be zero.');\n    }\n    return U;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nexport const getHkdfKey = (ikm, salt, info) => {\n    const awsCryptoHash = new Sha256(salt);\n    awsCryptoHash.update(ikm);\n    const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n    const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n    awsCryptoHashHmac.update(info);\n    const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n    const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n    return hashHexFromAWSCrypto.slice(0, 16);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { WordArray } from '@aws-amplify/core/internals/utils';\nimport { getBytesFromHex } from './getBytesFromHex';\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nexport const getRandomBytes = (nBytes) => {\n    const str = new WordArray().random(nBytes).toString();\n    return getBytesFromHex(str);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encoder } from '@aws-amplify/core/internals/utils';\nimport { getRandomBytes } from './getRandomBytes';\n/**\n * Helper function to generate a random string\n * @returns {string} a random value.\n *\n * @internal\n */\nexport const getRandomString = () => base64Encoder.convert(getRandomBytes(40));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../../errors/AuthError';\nimport { textEncoder } from '../../textEncoder';\nimport { BigInteger } from '../BigInteger';\nimport { calculateS, calculateU } from '../calculate';\nimport { getBytesFromHex } from '../getBytesFromHex';\nimport { getHashFromData } from '../getHashFromData';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getHexFromBytes } from '../getHexFromBytes';\nimport { getHkdfKey } from '../getHkdfKey';\nimport { getPaddedHex } from '../getPaddedHex';\nimport { getRandomBytes } from '../getRandomBytes';\nimport { getRandomString } from '../getRandomString';\n/** @class */\nexport default class AuthenticationHelper {\n    constructor({ userPoolName, a, g, A, N, }) {\n        this.encoder = textEncoder;\n        this.userPoolName = userPoolName;\n        this.a = a;\n        this.g = g;\n        this.A = A;\n        this.N = N;\n        this.k = new BigInteger(getHashFromHex(`${getPaddedHex(N)}${getPaddedHex(g)}`), 16);\n    }\n    /**\n     * @returns {string} Generated random value included in password hash.\n     */\n    getRandomPassword() {\n        if (!this.randomPassword) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerRandomPassword',\n                message: 'random password is empty',\n            });\n        }\n        return this.randomPassword;\n    }\n    /**\n     * @returns {string} Generated random value included in devices hash.\n     */\n    getSaltToHashDevices() {\n        if (!this.saltToHashDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegersaltToHashDevices',\n                message: 'saltToHashDevices is empty',\n            });\n        }\n        return this.saltToHashDevices;\n    }\n    /**\n     * @returns {string} Value used to verify devices.\n     */\n    getVerifierDevices() {\n        if (!this.verifierDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerVerifierDevices',\n                message: 'verifyDevices is empty',\n            });\n        }\n        return this.verifierDevices;\n    }\n    /**\n     * Generate salts and compute verifier.\n     *\n     * @param {string} deviceGroupKey Devices to generate verifier for.\n     * @param {string} username User to generate verifier for.\n     *\n     * @returns {Promise<void>}\n     */\n    async generateHashDevice(deviceGroupKey, username) {\n        this.randomPassword = getRandomString();\n        const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n        const hashedString = getHashFromData(combinedString);\n        const hexRandom = getHexFromBytes(getRandomBytes(16));\n        // The random hex will be unambiguously represented as a postive integer\n        this.saltToHashDevices = getPaddedHex(new BigInteger(hexRandom, 16));\n        return new Promise((resolve, reject) => {\n            this.g.modPow(new BigInteger(getHashFromHex(this.saltToHashDevices + hashedString), 16), this.N, (err, result) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                this.verifierDevices = getPaddedHex(result);\n                resolve();\n            });\n        });\n    }\n    /**\n     * Calculates the final HKDF key based on computed S value, computed U value and the key\n     *\n     * @param {String} username Username.\n     * @param {String} password Password.\n     * @param {AuthBigInteger} B Server B value.\n     * @param {AuthBigInteger} salt Generated salt.\n     */\n    async getPasswordAuthenticationKey({ username, password, serverBValue, salt, }) {\n        if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n            throw new Error('B cannot be zero.');\n        }\n        const U = calculateU({\n            A: this.A,\n            B: serverBValue,\n        });\n        const usernamePassword = `${this.userPoolName}${username}:${password}`;\n        const usernamePasswordHash = getHashFromData(usernamePassword);\n        const x = new BigInteger(getHashFromHex(getPaddedHex(salt) + usernamePasswordHash), 16);\n        const S = await calculateS({\n            a: this.a,\n            g: this.g,\n            k: this.k,\n            x,\n            B: serverBValue,\n            N: this.N,\n            U,\n        });\n        const context = this.encoder.convert('Caldera Derived Key');\n        const spacer = this.encoder.convert(String.fromCharCode(1));\n        const info = new Uint8Array(context.byteLength + spacer.byteLength);\n        info.set(context, 0);\n        info.set(spacer, context.byteLength);\n        const hkdfKey = getHkdfKey(getBytesFromHex(getPaddedHex(S)), getBytesFromHex(getPaddedHex(U)), info);\n        return hkdfKey;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\n/**\n * @internal\n */\nexport const calculateA = async ({ a, g, N, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(a, N, (err, A) => {\n            if (err) {\n                reject(err);\n                return;\n            }\n            if (A.mod(N).equals(BigInteger.ZERO)) {\n                reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n                return;\n            }\n            resolve(A);\n        });\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthenticationHelper } from './AuthenticationHelper';\nimport { BigInteger } from './BigInteger';\nimport { calculateA } from './calculate';\nimport { INIT_N } from './constants';\nimport { getHexFromBytes } from './getHexFromBytes';\nimport { getRandomBytes } from './getRandomBytes';\n/**\n * Returns a new {@link AuthenticationHelper} instance with randomly generated BigInteger seed\n *\n * @param userPoolName Cognito user pool name.\n * @returns An {@link AuthenticationHelper} instance.\n *\n * @internal\n */\nexport const getAuthenticationHelper = async (userPoolName) => {\n    const N = new BigInteger(INIT_N, 16);\n    const g = new BigInteger('2', 16);\n    const a = generateRandomBigInteger();\n    const A = await calculateA({ a, g, N });\n    return new AuthenticationHelper({ userPoolName, a, g, A, N });\n};\n/**\n * Generates a random BigInteger.\n *\n * @returns {BigInteger} a random value.\n */\nconst generateRandomBigInteger = () => {\n    // This will be interpreted as a postive 128-bit integer\n    const hexRandom = getHexFromBytes(getRandomBytes(128));\n    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n    return new BigInteger(hexRandom, 16);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encoder, getDeviceName, } from '@aws-amplify/core/internals/utils';\nimport { createConfirmDeviceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthenticationHelper, getBytesFromHex } from './srp';\n/**\n * This function is used to kick off the device management flow.\n *\n * If an error is thrown while generating a hash device or calling the `ConfirmDevice`\n * client, then this API will ignore the error and return undefined. Otherwise the authentication\n * flow will not complete and the user won't be able to be signed in.\n *\n * @returns DeviceMetadata | undefined\n */\nexport async function getNewDeviceMetadata({ userPoolId, userPoolEndpoint, newDeviceMetadata, accessToken, }) {\n    if (!newDeviceMetadata)\n        return undefined;\n    const userPoolName = userPoolId.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const deviceKey = newDeviceMetadata?.DeviceKey;\n    const deviceGroupKey = newDeviceMetadata?.DeviceGroupKey;\n    try {\n        await authenticationHelper.generateHashDevice(deviceGroupKey ?? '', deviceKey ?? '');\n    }\n    catch (errGenHash) {\n        // TODO: log error here\n        return undefined;\n    }\n    const deviceSecretVerifierConfig = {\n        Salt: base64Encoder.convert(getBytesFromHex(authenticationHelper.getSaltToHashDevices())),\n        PasswordVerifier: base64Encoder.convert(getBytesFromHex(authenticationHelper.getVerifierDevices())),\n    };\n    const randomPassword = authenticationHelper.getRandomPassword();\n    try {\n        const confirmDevice = createConfirmDeviceClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        await confirmDevice({ region: getRegionFromUserPoolId(userPoolId) }, {\n            AccessToken: accessToken,\n            DeviceName: await getDeviceName(),\n            DeviceKey: newDeviceMetadata?.DeviceKey,\n            DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        });\n        return {\n            deviceKey,\n            deviceGroupKey,\n            randomPassword,\n        };\n    }\n    catch (error) {\n        // TODO: log error here\n        return undefined;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories';\nimport { cacheCognitoTokens } from '../../../providers/cognito/tokenProvider/cacheTokens';\nimport { dispatchSignedInHubEvent } from '../../../providers/cognito/utils/dispatchSignedInHubEvent';\nimport { setActiveSignInState, signInStore } from '../../../client/utils/store';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { getPasskey } from '../../utils/passkey';\nimport { PasskeyErrorCode, assertPasskeyError, } from '../../utils/passkey/errors';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getNewDeviceMetadata } from '../../../providers/cognito/utils/getNewDeviceMetadata';\nexport async function handleWebAuthnSignInResult(challengeParameters) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, signInSession, signInDetails, challengeName } = signInStore.getState();\n    if (challengeName !== 'WEB_AUTHN' || !username) {\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: 'Unable to proceed due to invalid sign in state.',\n        });\n    }\n    const { CREDENTIAL_REQUEST_OPTIONS: credentialRequestOptions } = challengeParameters;\n    assertPasskeyError(!!credentialRequestOptions, PasskeyErrorCode.InvalidPasskeyAuthenticationOptions);\n    const cred = await getPasskey(JSON.parse(credentialRequestOptions));\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: authConfig.userPoolEndpoint,\n        }),\n    });\n    const { ChallengeName: nextChallengeName, ChallengeParameters: nextChallengeParameters, AuthenticationResult: authenticationResult, Session: nextSession, } = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        ChallengeName: 'WEB_AUTHN',\n        ChallengeResponses: {\n            USERNAME: username,\n            CREDENTIAL: JSON.stringify(cred),\n        },\n        ClientId: authConfig.userPoolClientId,\n        Session: signInSession,\n    });\n    setActiveSignInState({\n        signInSession: nextSession,\n        username,\n        challengeName: nextChallengeName,\n        signInDetails,\n    });\n    if (authenticationResult) {\n        await cacheCognitoTokens({\n            ...authenticationResult,\n            username,\n            NewDeviceMetadata: await getNewDeviceMetadata({\n                userPoolId: authConfig.userPoolId,\n                userPoolEndpoint: authConfig.userPoolEndpoint,\n                newDeviceMetadata: authenticationResult.NewDeviceMetadata,\n                accessToken: authenticationResult.AccessToken,\n            }),\n            signInDetails,\n        });\n        signInStore.dispatch({ type: 'RESET_STATE' });\n        await dispatchSignedInHubEvent();\n        return {\n            isSignedIn: true,\n            nextStep: { signInStep: 'DONE' },\n        };\n    }\n    if (nextChallengeName === 'WEB_AUTHN') {\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: 'Sequential WEB_AUTHN challenges returned from underlying service cannot be handled.',\n        });\n    }\n    return {\n        challengeName: nextChallengeName,\n        challengeParameters: nextChallengeParameters,\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MONTH_NAMES = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n];\nconst WEEK_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nexport const getNowString = () => {\n    const now = new Date();\n    const weekDay = WEEK_NAMES[now.getUTCDay()];\n    const month = MONTH_NAMES[now.getUTCMonth()];\n    const day = now.getUTCDate();\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n        hours = `0${hours}`;\n    }\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    const year = now.getUTCFullYear();\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n    return dateNow;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { base64Decoder, base64Encoder, } from '@aws-amplify/core/internals/utils';\nimport { textEncoder } from '../textEncoder';\nexport const getSignatureString = ({ userPoolName, username, challengeParameters, dateNow, hkdf, }) => {\n    const bufUPIDaToB = textEncoder.convert(userPoolName);\n    const bufUNaToB = textEncoder.convert(username);\n    const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n    const bufDNaToB = textEncoder.convert(dateNow);\n    const bufConcat = new Uint8Array(bufUPIDaToB.byteLength +\n        bufUNaToB.byteLength +\n        bufSBaToB.byteLength +\n        bufDNaToB.byteLength);\n    bufConcat.set(bufUPIDaToB, 0);\n    bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n    bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n    bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n    const awsCryptoHash = new Sha256(hkdf);\n    awsCryptoHash.update(bufConcat);\n    const resultFromAWSCrypto = awsCryptoHash.digestSync();\n    const signatureString = base64Encoder.convert(resultFromAWSCrypto);\n    return signatureString;\n};\nconst urlB64ToUint8Array = (base64String) => {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = base64Decoder.convert(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertDeviceMetadata } from './types';\nimport { getAuthenticationHelper, getNowString, getSignatureString, } from './srp';\nimport { BigInteger } from './srp/BigInteger';\nimport { getUserContextData } from './userContextData';\nexport async function handleDeviceSRPAuth({ username, config, clientMetadata, session, tokenOrchestrator, }) {\n    const { userPoolId, userPoolEndpoint } = config;\n    const clientId = config.userPoolClientId;\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const authenticationHelper = await getAuthenticationHelper(deviceMetadata.deviceGroupKey);\n    const challengeResponses = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        DEVICE_KEY: deviceMetadata.deviceKey,\n    };\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: clientId,\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { ChallengeParameters: respondedChallengeParameters, Session } = await respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n    return handleDevicePasswordVerifier(username, respondedChallengeParameters, clientMetadata, Session, authenticationHelper, config, tokenOrchestrator);\n}\nasync function handleDevicePasswordVerifier(username, challengeParameters, clientMetadata, session, authenticationHelper, { userPoolId, userPoolClientId, userPoolEndpoint }, tokenOrchestrator) {\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const { deviceKey } = deviceMetadata;\n    const { deviceGroupKey } = deviceMetadata;\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username: deviceMetadata.deviceKey,\n        password: deviceMetadata.randomPassword,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: challengeParameters?.USERNAME ?? username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username: deviceKey,\n            userPoolName: deviceGroupKey,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n        DEVICE_KEY: deviceKey,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n        ClientId: userPoolClientId,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getNowString, getSignatureString } from './srp';\nimport { BigInteger } from './srp/BigInteger';\nimport { getUserContextData } from './userContextData';\nimport { handleDeviceSRPAuth } from './handleDeviceSRPAuth';\nexport async function handlePasswordVerifierChallenge(password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const username = challengeParameters?.USER_ID_FOR_SRP;\n    if (!username)\n        throw new AuthError({\n            name: 'EmptyUserIdForSRPException',\n            message: 'USER_ID_FOR_SRP was not found in challengeParameters',\n        });\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username,\n        password,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username,\n            userPoolName,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'PASSWORD_VERIFIER',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\n/**\n * It will retry the function if the error is a `ResourceNotFoundException` and\n * will clean the device keys stored in the storage mechanism.\n *\n */\nexport async function retryOnResourceNotFoundException(func, args, username, tokenOrchestrator) {\n    try {\n        return await func(...args);\n    }\n    catch (error) {\n        if (error instanceof AuthError &&\n            error.name === 'ResourceNotFoundException' &&\n            error.message.includes('Device does not exist.')) {\n            await tokenOrchestrator.clearDeviceMetadata(username);\n            return func(...args);\n        }\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { signInStore } from '../../../client/utils/store';\nexport function setActiveSignInUsername(username) {\n    const { dispatch } = signInStore;\n    dispatch({ type: 'SET_USERNAME', value: username });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData';\nimport { getAuthenticationHelper } from '../../../providers/cognito/utils/srp';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { handlePasswordVerifierChallenge } from '../../../providers/cognito/utils/handlePasswordVerifierChallenge';\nimport { retryOnResourceNotFoundException } from '../../../providers/cognito/utils/retryOnResourceNotFoundException';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/setActiveSignInUsername';\n/**\n * Handles the Password SRP (Secure Remote Password) authentication flow.\n * This function can be used with both USER_SRP_AUTH and USER_AUTH flows.\n *\n * @param {Object} params - The parameters for the Password SRP authentication\n * @param {string} params.username - The username for authentication\n * @param {string} params.password - The user's password\n * @param {ClientMetadata} [params.clientMetadata] - Optional metadata to be sent with auth requests\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {AuthTokenOrchestrator} params.tokenOrchestrator - Token orchestrator for managing auth tokens\n * @param {AuthFlowType} params.authFlow - The type of authentication flow ('USER_SRP_AUTH' or 'USER_AUTH')\n * @param {AuthFactorType} [params.preferredChallenge] - Optional preferred challenge type when using USER_AUTH flow\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The authentication response\n */\nexport async function handlePasswordSRP({ username, password, clientMetadata, config, tokenOrchestrator, authFlow, preferredChallenge, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n    };\n    if (authFlow === 'USER_AUTH' && preferredChallenge) {\n        authParameters.PREFERRED_CHALLENGE = preferredChallenge;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: authFlow,\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const resp = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const { ChallengeParameters: challengeParameters, Session: session } = resp;\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (resp.ChallengeName === 'PASSWORD_VERIFIER') {\n        return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n            password,\n            challengeParameters,\n            clientMetadata,\n            session,\n            authenticationHelper,\n            config,\n            tokenOrchestrator,\n        ], activeUsername, tokenOrchestrator);\n    }\n    return resp;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AmplifyUrl, AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { InitiateAuthException } from '../types/errors';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { USER_ALREADY_AUTHENTICATED_EXCEPTION } from '../../../errors/constants';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createAssociateSoftwareTokenClient, createInitiateAuthClient, createRespondToAuthChallengeClient, createVerifySoftwareTokenClient, } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { handleWebAuthnSignInResult } from '../../../client/flows/userAuth/handleWebAuthnSignInResult';\nimport { handlePasswordSRP } from '../../../client/flows/shared/handlePasswordSRP';\nimport { initiateSelectedChallenge } from '../../../client/flows/userAuth/handleSelectChallenge';\nimport { handleSelectChallengeWithPassword } from '../../../client/flows/userAuth/handleSelectChallengeWithPassword';\nimport { handleSelectChallengeWithPasswordSRP } from '../../../client/flows/userAuth/handleSelectChallengeWithPasswordSRP';\nimport { signInStore } from '../../../client/utils/store';\nimport { getAuthenticationHelper } from './srp';\nimport { getUserContextData } from './userContextData';\nimport { handlePasswordVerifierChallenge } from './handlePasswordVerifierChallenge';\nimport { handleDeviceSRPAuth } from './handleDeviceSRPAuth';\nimport { retryOnResourceNotFoundException } from './retryOnResourceNotFoundException';\nimport { setActiveSignInUsername } from './setActiveSignInUsername';\nconst USER_ATTRIBUTES = 'userAttributes.';\nfunction isWebAuthnResultAuthSignInOutput(result) {\n    return 'isSignedIn' in result && 'nextStep' in result;\n}\nexport async function handleCustomChallenge({ challengeResponse, clientMetadata, session, username, config, tokenOrchestrator, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: challengeResponse,\n    };\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'CUSTOM_CHALLENGE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH') {\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    }\n    return response;\n}\nexport async function handleMFASetupChallenge({ challengeResponse, username, clientMetadata, session, deviceName, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    if (challengeResponse === 'EMAIL') {\n        return {\n            ChallengeName: 'MFA_SETUP',\n            Session: session,\n            ChallengeParameters: {\n                MFAS_CAN_SETUP: '[\"EMAIL_OTP\"]',\n            },\n            $metadata: {},\n        };\n    }\n    if (challengeResponse === 'TOTP') {\n        return {\n            ChallengeName: 'MFA_SETUP',\n            Session: session,\n            ChallengeParameters: {\n                MFAS_CAN_SETUP: '[\"SOFTWARE_TOKEN_MFA\"]',\n            },\n            $metadata: {},\n        };\n    }\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    const isTOTPCode = /^\\d+$/.test(challengeResponse);\n    if (isTOTPCode) {\n        const verifySoftwareToken = createVerifySoftwareTokenClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        const { Session } = await verifySoftwareToken({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, {\n            UserCode: challengeResponse,\n            Session: session,\n            FriendlyDeviceName: deviceName,\n        });\n        signInStore.dispatch({\n            type: 'SET_SIGN_IN_SESSION',\n            value: Session,\n        });\n        const jsonReq = {\n            ChallengeName: 'MFA_SETUP',\n            ChallengeResponses: challengeResponses,\n            Session,\n            ClientMetadata: clientMetadata,\n            ClientId: userPoolClientId,\n        };\n        const respondToAuthChallenge = createRespondToAuthChallengeClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        return respondToAuthChallenge({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, jsonReq);\n    }\n    const isEmail = challengeResponse.includes('@');\n    if (isEmail) {\n        challengeResponses.EMAIL = challengeResponse;\n        const jsonReq = {\n            ChallengeName: 'MFA_SETUP',\n            ChallengeResponses: challengeResponses,\n            Session: session,\n            ClientMetadata: clientMetadata,\n            ClientId: userPoolClientId,\n        };\n        const respondToAuthChallenge = createRespondToAuthChallengeClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        return respondToAuthChallenge({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, jsonReq);\n    }\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `Cannot proceed with MFA setup using challengeResponse: ${challengeResponse}`,\n        recoverySuggestion: 'Try passing \"EMAIL\", \"TOTP\", a valid email, or OTP code as the challengeResponse.',\n    });\n}\nexport async function handleSelectMFATypeChallenge({ challengeResponse, username, clientMetadata, session, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    assertValidationError(challengeResponse === 'TOTP' ||\n        challengeResponse === 'SMS' ||\n        challengeResponse === 'EMAIL', AuthValidationErrorCode.IncorrectMFAMethod);\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: mapMfaType(challengeResponse),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SELECT_MFA_TYPE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleCompleteNewPasswordChallenge({ challengeResponse, clientMetadata, session, username, requiredAttributes, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        ...createAttributes(requiredAttributes),\n        NEW_PASSWORD: challengeResponse,\n        USERNAME: username,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleUserPasswordAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = config;\n    const authParameters = {\n        USERNAME: username,\n        PASSWORD: password,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_PASSWORD_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ??\n        response.ChallengeParameters?.USER_ID_FOR_SRP ??\n        username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function handleUserSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    return handlePasswordSRP({\n        username,\n        password,\n        clientMetadata,\n        config,\n        tokenOrchestrator,\n        authFlow: 'USER_SRP_AUTH',\n    });\n}\nexport async function handleCustomAuthFlowWithoutSRP(username, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = config;\n    const authParameters = {\n        USERNAME: username,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function handleCustomSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    assertTokenProviderConfig(config);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        CHALLENGE_NAME: 'SRP_A',\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { ChallengeParameters: challengeParameters, Session: session } = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nexport async function getSignInResult(params) {\n    const { challengeName, challengeParameters, availableChallenges } = params;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    switch (challengeName) {\n        case 'CUSTOM_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE',\n                    additionalInfo: challengeParameters,\n                },\n            };\n        case 'MFA_SETUP': {\n            const { signInSession, username } = signInStore.getState();\n            const mfaSetupTypes = getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_SETUP)) || [];\n            const allowedMfaSetupTypes = getAllowedMfaSetupTypes(mfaSetupTypes);\n            const isTotpMfaSetupAvailable = allowedMfaSetupTypes.includes('TOTP');\n            const isEmailMfaSetupAvailable = allowedMfaSetupTypes.includes('EMAIL');\n            if (isTotpMfaSetupAvailable && isEmailMfaSetupAvailable) {\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SETUP_SELECTION',\n                        allowedMFATypes: allowedMfaSetupTypes,\n                    },\n                };\n            }\n            if (isEmailMfaSetupAvailable) {\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_EMAIL_SETUP',\n                    },\n                };\n            }\n            if (isTotpMfaSetupAvailable) {\n                const associateSoftwareToken = createAssociateSoftwareTokenClient({\n                    endpointResolver: createCognitoUserPoolEndpointResolver({\n                        endpointOverride: authConfig.userPoolEndpoint,\n                    }),\n                });\n                const { Session, SecretCode: secretCode } = await associateSoftwareToken({ region: getRegionFromUserPoolId(authConfig.userPoolId) }, {\n                    Session: signInSession,\n                });\n                signInStore.dispatch({\n                    type: 'SET_SIGN_IN_SESSION',\n                    value: Session,\n                });\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP',\n                        totpSetupDetails: getTOTPSetupDetails(secretCode, username),\n                    },\n                };\n            }\n            throw new AuthError({\n                name: AuthErrorCodes.SignInException,\n                message: `Cannot initiate MFA setup from available types: ${mfaSetupTypes}`,\n            });\n        }\n        case 'NEW_PASSWORD_REQUIRED':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED',\n                    missingAttributes: parseAttributes(challengeParameters.requiredAttributes),\n                },\n            };\n        case 'SELECT_MFA_TYPE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION',\n                    allowedMFATypes: getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_CHOOSE)),\n                },\n            };\n        case 'SMS_OTP':\n        case 'SMS_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_SMS_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'SOFTWARE_TOKEN_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_TOTP_CODE',\n                },\n            };\n        case 'EMAIL_OTP':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_EMAIL_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'WEB_AUTHN': {\n            const result = await handleWebAuthnSignInResult(challengeParameters);\n            if (isWebAuthnResultAuthSignInOutput(result)) {\n                return result;\n            }\n            return getSignInResult(result);\n        }\n        case 'PASSWORD':\n        case 'PASSWORD_SRP':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_PASSWORD',\n                },\n            };\n        case 'SELECT_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_FIRST_FACTOR_SELECTION',\n                    availableChallenges,\n                },\n            };\n        case 'ADMIN_NO_SRP_AUTH':\n            break;\n        case 'DEVICE_PASSWORD_VERIFIER':\n            break;\n        case 'DEVICE_SRP_AUTH':\n            break;\n        case 'PASSWORD_VERIFIER':\n            break;\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: 'An error occurred during the sign in process. ' +\n            `${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nexport function getTOTPSetupDetails(secretCode, username) {\n    return {\n        sharedSecret: secretCode,\n        getSetupUri: (appName, accountName) => {\n            const totpUri = `otpauth://totp/${appName}:${accountName ?? username}?secret=${secretCode}&issuer=${appName}`;\n            return new AmplifyUrl(totpUri);\n        },\n    };\n}\nexport function getSignInResultFromError(errorName) {\n    if (errorName === InitiateAuthException.PasswordResetRequiredException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'RESET_PASSWORD' },\n        };\n    }\n    else if (errorName === InitiateAuthException.UserNotConfirmedException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'CONFIRM_SIGN_UP' },\n        };\n    }\n}\nexport function parseAttributes(attributes) {\n    if (!attributes)\n        return [];\n    const parsedAttributes = JSON.parse(attributes).map(att => att.includes(USER_ATTRIBUTES) ? att.replace(USER_ATTRIBUTES, '') : att);\n    return parsedAttributes;\n}\nexport function createAttributes(attributes) {\n    if (!attributes)\n        return {};\n    const newAttributes = {};\n    Object.entries(attributes).forEach(([key, value]) => {\n        if (value)\n            newAttributes[`${USER_ATTRIBUTES}${key}`] = value;\n    });\n    return newAttributes;\n}\nexport async function handleChallengeName(username, challengeName, session, challengeResponse, config, tokenOrchestrator, clientMetadata, options) {\n    const userAttributes = options?.userAttributes;\n    const deviceName = options?.friendlyDeviceName;\n    switch (challengeName) {\n        case 'WEB_AUTHN':\n        case 'SELECT_CHALLENGE':\n            if (challengeResponse === 'PASSWORD_SRP' ||\n                challengeResponse === 'PASSWORD') {\n                return {\n                    ChallengeName: challengeResponse,\n                    Session: session,\n                    $metadata: {},\n                };\n            }\n            return initiateSelectedChallenge({\n                username,\n                session,\n                selectedChallenge: challengeResponse,\n                config,\n                clientMetadata,\n            });\n        case 'SELECT_MFA_TYPE':\n            return handleSelectMFATypeChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'MFA_SETUP':\n            return handleMFASetupChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                deviceName,\n                config,\n            });\n        case 'NEW_PASSWORD_REQUIRED':\n            return handleCompleteNewPasswordChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                requiredAttributes: userAttributes,\n                config,\n            });\n        case 'CUSTOM_CHALLENGE':\n            return retryOnResourceNotFoundException(handleCustomChallenge, [\n                {\n                    challengeResponse,\n                    clientMetadata,\n                    session,\n                    username,\n                    config,\n                    tokenOrchestrator,\n                },\n            ], username, tokenOrchestrator);\n        case 'SMS_MFA':\n        case 'SOFTWARE_TOKEN_MFA':\n        case 'SMS_OTP':\n        case 'EMAIL_OTP':\n            return handleMFAChallenge({\n                challengeName,\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'PASSWORD':\n            return handleSelectChallengeWithPassword(username, challengeResponse, clientMetadata, config, session);\n        case 'PASSWORD_SRP':\n            return handleSelectChallengeWithPasswordSRP(username, challengeResponse, // This is the actual password\n            clientMetadata, config, session, tokenOrchestrator);\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `An error occurred during the sign in process.\n\t\t${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nexport function mapMfaType(mfa) {\n    let mfaType = 'SMS_MFA';\n    if (mfa === 'TOTP')\n        mfaType = 'SOFTWARE_TOKEN_MFA';\n    if (mfa === 'EMAIL')\n        mfaType = 'EMAIL_OTP';\n    return mfaType;\n}\nexport function getMFAType(type) {\n    if (type === 'SMS_MFA')\n        return 'SMS';\n    if (type === 'SOFTWARE_TOKEN_MFA')\n        return 'TOTP';\n    if (type === 'EMAIL_OTP')\n        return 'EMAIL';\n    // TODO: log warning for unknown MFA type\n}\nexport function getMFATypes(types) {\n    if (!types)\n        return undefined;\n    return types.map(getMFAType).filter(Boolean);\n}\nexport function parseMFATypes(mfa) {\n    if (!mfa)\n        return [];\n    return JSON.parse(mfa);\n}\nexport function getAllowedMfaSetupTypes(availableMfaSetupTypes) {\n    return availableMfaSetupTypes.filter(authMfaType => authMfaType === 'EMAIL' || authMfaType === 'TOTP');\n}\nexport async function assertUserNotAuthenticated() {\n    let authUser;\n    try {\n        authUser = await getCurrentUser();\n    }\n    catch (error) { }\n    if (authUser && authUser.userId && authUser.username) {\n        throw new AuthError({\n            name: USER_ALREADY_AUTHENTICATED_EXCEPTION,\n            message: 'There is already a signed in user.',\n            recoverySuggestion: 'Call signOut before calling signIn again.',\n        });\n    }\n}\nexport function getActiveSignInUsername(username) {\n    const state = signInStore.getState();\n    return state.username ?? username;\n}\nexport async function handleMFAChallenge({ challengeName, challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    if (challengeName === 'EMAIL_OTP') {\n        challengeResponses.EMAIL_OTP_CODE = challengeResponse;\n    }\n    if (challengeName === 'SMS_MFA') {\n        challengeResponses.SMS_MFA_CODE = challengeResponse;\n    }\n    if (challengeName === 'SMS_OTP') {\n        challengeResponses.SMS_OTP_CODE = challengeResponse;\n    }\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n        challengeResponses.SOFTWARE_TOKEN_MFA_CODE = challengeResponse;\n    }\n    const userContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: challengeName,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData: userContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getSignInResult, getSignInResultFromError, handleCustomAuthFlowWithoutSRP, } from '../utils/signInHelpers';\nimport { resetActiveSignInState, setActiveSignInState, } from '../../../client/utils/store/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\nimport { retryOnResourceNotFoundException } from '../utils/retryOnResourceNotFoundException';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata';\n/**\n * Signs a user in using a custom authentication flow without password\n *\n * @param input -  The SignInWithCustomAuthInput object\n * @returns AuthSignInResult\n * @throws service: {@link InitiateAuthException } - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws SignInWithCustomAuthOutput - Thrown when the token provider config is invalid.\n */\nexport async function signInWithCustomAuth(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITHOUT_SRP',\n    };\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!password, AuthValidationErrorCode.CustomAuthSignInPassword);\n    try {\n        const { ChallengeName: retriedChallengeName, ChallengeParameters: retiredChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleCustomAuthFlowWithoutSRP, [username, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retriedChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            resetActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retriedChallengeName,\n            challengeParameters: retiredChallengeParameters,\n        });\n    }\n    catch (error) {\n        resetActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getSignInResult, getSignInResultFromError, handleCustomSRPAuthFlow, } from '../utils/signInHelpers';\nimport { resetActiveSignInState, setActiveSignInState, } from '../../../client/utils/store/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata';\n/**\n * Signs a user in using a custom authentication flow with SRP\n *\n * @param input -  The SignInWithCustomSRPAuthInput object\n * @returns SignInWithCustomSRPAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito\n * service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithCustomSRPAuth(input) {\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITH_SRP',\n    };\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleCustomSRPAuthFlow(username, password, metadata, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            resetActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        resetActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { autoSignInStore } from '../../../client/utils/store';\nimport { AuthError } from '../../../errors/AuthError';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants';\nconst initialAutoSignIn = async () => {\n    throw new AuthError({\n        name: AUTO_SIGN_IN_EXCEPTION,\n        message: 'The autoSignIn flow has not started, or has been cancelled/completed.',\n        recoverySuggestion: 'Please try to use the signIn API or log out before starting a new autoSignIn flow.',\n    });\n};\n/**\n * Signs a user in automatically after finishing the sign-up process.\n *\n * This API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n * - User confirmed their account with a verification code sent to their phone or email (default option).\n * - User confirmed their account with a verification link sent to their phone or email. In order to\n * enable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\n * look for your userpool, then go to the `Messaging` tab and enable `link` mode inside the `Verification message` option.\n * Finally you need to define the `signUpVerificationMethod` in your `Auth` config.\n *\n * @example\n * ```typescript\n *  Amplify.configure({\n *    Auth: {\n *     Cognito: {\n *    ...cognitoConfig,\n *    signUpVerificationMethod: \"link\" // the default value is \"code\"\n *   }\n *\t}});\n * ```\n *\n * @throws AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed.\n * @returns The signInOutput.\n *\n * @example\n * ```typescript\n *  // handleSignUp.ts\n * async function handleSignUp(\n *   username:string,\n *   password:string\n * ){\n *   try {\n *     const { nextStep } = await signUp({\n *       username,\n *       password,\n *       options: {\n *         userAttributes:{ email:'email@email.com'},\n *         autoSignIn: true // This enables the auto sign-in flow.\n *       },\n *     });\n *\n *     handleSignUpStep(nextStep);\n *\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // handleConfirmSignUp.ts\n * async function handleConfirmSignUp(username:string, confirmationCode:string) {\n *   try {\n *     const { nextStep } = await confirmSignUp({\n *       username,\n *       confirmationCode,\n *     });\n *\n *     handleSignUpStep(nextStep);\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // signUpUtils.ts\n * async function handleSignUpStep( step: SignUpOutput[\"nextStep\"]) {\n * switch (step.signUpStep) {\n *   case \"CONFIRM_SIGN_UP\":\n *\n *    // Redirect end-user to confirm-sign up screen.\n *\n *   case \"COMPLETE_AUTO_SIGN_IN\":\n *\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n *     if (codeDeliveryDetails) {\n *      // Redirect user to confirm-sign-up with link screen.\n *     }\n *     const signInOutput = await autoSignIn();\n *   // handle sign-in steps\n * }\n *\n * ```\n */\n// TODO(Eslint): can this be refactored not using `let` on exported member?\n// eslint-disable-next-line import/no-mutable-exports\nexport let autoSignIn = initialAutoSignIn;\n/**\n * Sets the context of autoSignIn at run time.\n * @internal\n */\nexport function setAutoSignIn(callback) {\n    autoSignIn = callback;\n}\n/**\n * Resets the context\n *\n * @internal\n */\nexport function resetAutoSignIn(resetCallback = true) {\n    if (resetCallback) {\n        autoSignIn = initialAutoSignIn;\n    }\n    autoSignInStore.dispatch({ type: 'RESET' });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getSignInResult, getSignInResultFromError, handleUserSRPAuthFlow, } from '../utils/signInHelpers';\nimport { resetActiveSignInState, setActiveSignInState, } from '../../../client/utils/store/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata';\nimport { resetAutoSignIn } from './autoSignIn';\n/**\n * Signs a user in\n *\n * @param input - The SignInWithSRPInput object\n * @returns SignInWithSRPOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithSRP(input) {\n    const { username, password } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_SRP_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = input.options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleUserSRPAuthFlow(username, password, clientMetaData, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            resetActiveSignInState();\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        resetActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getActiveSignInUsername, getSignInResult, getSignInResultFromError, handleUserPasswordAuthFlow, } from '../utils/signInHelpers';\nimport { resetActiveSignInState, setActiveSignInState, } from '../../../client/utils/store/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\nimport { retryOnResourceNotFoundException } from '../utils/retryOnResourceNotFoundException';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata';\nimport { resetAutoSignIn } from './autoSignIn';\n/**\n * Signs a user in using USER_PASSWORD_AUTH AuthFlowType\n *\n * @param input - The SignInWithUserPasswordInput object\n * @returns SignInWithUserPasswordOutput\n * @throws service: {@link InitiateAuthException } - Cognito service error thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithUserPassword(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_PASSWORD_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: retiredChallengeName, ChallengeParameters: retriedChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleUserPasswordAuthFlow, [username, password, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retiredChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                ...AuthenticationResult,\n                username: activeUsername,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            resetActiveSignInState();\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retiredChallengeName,\n            challengeParameters: retriedChallengeParameters,\n        });\n    }\n    catch (error) {\n        resetActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { handlePasswordSRP } from '../shared/handlePasswordSRP';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/setActiveSignInUsername';\n/**\n * Handles user authentication flow with configurable challenge preferences.\n * Supports AuthFactorType challenges through the USER_AUTH flow.\n *\n * @param {HandleUserAuthFlowInput} params - Authentication flow parameters\n * @param {string} params.username - The username for authentication\n * @param {Record<string, string>} [params.clientMetadata] - Optional metadata to pass to authentication service\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {AuthTokenOrchestrator} params.tokenOrchestrator - Manages authentication tokens and device tracking\n * @param {AuthFactorType} [params.preferredChallenge] - Optional preferred authentication method\n * @param {string} [params.password] - Required when preferredChallenge is 'PASSWORD' or 'PASSWORD_SRP'\n *\n * @returns {Promise<InitiateAuthCommandOutput>} The authentication response from Cognito\n */\nexport async function handleUserAuthFlow({ username, clientMetadata, config, tokenOrchestrator, preferredChallenge, password, session, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const authParameters = { USERNAME: username };\n    if (preferredChallenge) {\n        if (preferredChallenge === 'PASSWORD_SRP') {\n            assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n            return handlePasswordSRP({\n                username,\n                password,\n                clientMetadata,\n                config,\n                tokenOrchestrator,\n                authFlow: 'USER_AUTH',\n                preferredChallenge,\n            });\n        }\n        if (preferredChallenge === 'PASSWORD') {\n            assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n            authParameters.PASSWORD = password;\n        }\n        authParameters.PREFERRED_CHALLENGE = preferredChallenge;\n    }\n    const jsonReq = {\n        AuthFlow: 'USER_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    if (session) {\n        jsonReq.Session = session;\n    }\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    // Set the active username immediately after successful authentication attempt\n    // If a user starts a new sign-in while another sign-in is incomplete,\n    // this ensures we're tracking the correct user for subsequent auth challenges.\n    setActiveSignInUsername(username);\n    return response;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getSignInResult, getSignInResultFromError, } from '../utils/signInHelpers';\nimport { autoSignInStore } from '../../../client/utils/store';\nimport { resetActiveSignInState, setActiveSignInState, } from '../../../client/utils/store/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { handleUserAuthFlow, } from '../../../client/flows/userAuth/handleUserAuthFlow';\nimport { getNewDeviceMetadata } from '../utils/getNewDeviceMetadata';\nimport { resetAutoSignIn } from './autoSignIn';\n/**\n * Signs a user in through a registered email or phone number without a password by by receiving and entering an OTP.\n *\n * @param input - The SignInWithUserAuthInput object\n * @returns SignInWithUserAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password -- needs to change\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithUserAuth(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = options?.clientMetadata;\n    const preferredChallenge = options?.preferredChallenge;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    try {\n        const handleUserAuthFlowInput = {\n            username,\n            config: authConfig,\n            tokenOrchestrator,\n            clientMetadata: clientMetaData,\n            preferredChallenge,\n            password,\n        };\n        const autoSignInStoreState = autoSignInStore.getState();\n        if (autoSignInStoreState.active &&\n            autoSignInStoreState.username === username) {\n            handleUserAuthFlowInput.session = autoSignInStoreState.session;\n        }\n        const response = await handleUserAuthFlow(handleUserAuthFlowInput);\n        const activeUsername = getActiveSignInUsername(username);\n        setActiveSignInState({\n            signInSession: response.Session,\n            username: activeUsername,\n            challengeName: response.ChallengeName,\n            signInDetails,\n        });\n        if (response.AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...response.AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: response.AuthenticationResult.NewDeviceMetadata,\n                    accessToken: response.AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            resetActiveSignInState();\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: response.ChallengeName,\n            challengeParameters: response.ChallengeParameters,\n            availableChallenges: 'AvailableChallenges' in response\n                ? response.AvailableChallenges\n                : undefined,\n        });\n    }\n    catch (error) {\n        resetActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers';\nimport { signInWithCustomAuth } from './signInWithCustomAuth';\nimport { signInWithCustomSRPAuth } from './signInWithCustomSRPAuth';\nimport { signInWithSRP } from './signInWithSRP';\nimport { signInWithUserPassword } from './signInWithUserPassword';\nimport { signInWithUserAuth } from './signInWithUserAuth';\nimport { resetAutoSignIn } from './autoSignIn';\n/**\n * Signs a user in\n *\n * @param input -  The SignInInput object\n * @returns SignInOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n *  - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signIn(input) {\n    // Here we want to reset the store but not reassign the callback.\n    // The callback is reset when the underlying promise resolves or rejects.\n    // With the advent of session based sign in, this guarantees that the signIn API initiates a new auth flow,\n    // regardless of whether it is called for a user currently engaged in an active auto sign in session.\n    resetAutoSignIn(false);\n    const authFlowType = input.options?.authFlowType;\n    await assertUserNotAuthenticated();\n    switch (authFlowType) {\n        case 'USER_SRP_AUTH':\n            return signInWithSRP(input);\n        case 'USER_PASSWORD_AUTH':\n            return signInWithUserPassword(input);\n        case 'CUSTOM_WITHOUT_SRP':\n            return signInWithCustomAuth(input);\n        case 'CUSTOM_WITH_SRP':\n            return signInWithCustomSRPAuth(input);\n        case 'USER_AUTH':\n            return signInWithUserAuth(input);\n        default:\n            return signInWithSRP(input);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: delete this module when the Auth class is removed.\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings';\nconst logger = new ConsoleLogger('AuthError');\nexport class AuthError extends Error {\n    constructor(type) {\n        const { message, log } = authErrorMessages[type];\n        super(message);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.name = 'AuthError';\n        this.log = log || message;\n        logger.error(this.log);\n    }\n}\nexport class NoUserPoolError extends AuthError {\n    constructor(type) {\n        super(type);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(this, NoUserPoolError.prototype);\n        this.name = 'NoUserPoolError';\n    }\n}\nexport const authErrorMessages = {\n    oauthSignInError: {\n        message: AuthErrorStrings.OAUTH_ERROR,\n        log: 'Make sure Cognito Hosted UI has been configured correctly',\n    },\n    noConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `,\n    },\n    missingAuthConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `,\n    },\n    emptyUsername: {\n        message: AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { authErrorMessages } from '../../../../Errors';\nimport { AuthErrorCodes } from '../../../../common/AuthErrorStrings';\nimport { AuthError } from '../../../../errors/AuthError';\nexport const createOAuthError = (message, recoverySuggestion) => new AuthError({\n    message: message ?? 'An error has occurred during the oauth process.',\n    name: AuthErrorCodes.OAuthSignInError,\n    recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthErrorTypes;\n(function (AuthErrorTypes) {\n    AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n    AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n    AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n    AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n    AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n    AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n    AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n    AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n    AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n    AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n    AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n    AuthErrorTypes[\"Default\"] = \"default\";\n    AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n    AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n    AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n    AuthErrorTypes[\"OAuthSignInError\"] = \"oauthSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../errors/AuthError';\nimport { AuthErrorTypes } from '../../../../types/Auth';\nimport { oAuthStore } from './oAuthStore';\nexport const flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nexport const validationFailedMessage = 'An error occurred while validating the state.';\nexport const validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nexport const validateState = async (state) => {\n    const savedState = await oAuthStore.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: state === null ? flowCancelledMessage : validationFailedMessage,\n            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n        });\n    }\n    return validatedState;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMPLIFY_SYMBOL, AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, } from '@aws-amplify/core/internals/utils';\nimport { Hub, decodeJWT } from '@aws-amplify/core';\nimport { cacheCognitoTokens } from '../../tokenProvider/cacheTokens';\nimport { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent';\nimport { tokenOrchestrator } from '../../tokenProvider';\nimport { createOAuthError } from './createOAuthError';\nimport { resolveAndClearInflightPromises } from './inflightPromise';\nimport { validateState } from './validateState';\nimport { oAuthStore } from './oAuthStore';\nexport const completeOAuthFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) => {\n    const urlParams = new AmplifyUrl(currentUrl);\n    const error = urlParams.searchParams.get('error');\n    const errorMessage = urlParams.searchParams.get('error_description');\n    if (error) {\n        throw createOAuthError(errorMessage ?? error);\n    }\n    if (responseType === 'code') {\n        return handleCodeFlow({\n            currentUrl,\n            userAgentValue,\n            clientId,\n            redirectUri,\n            domain,\n            preferPrivateSession,\n        });\n    }\n    return handleImplicitFlow({\n        currentUrl,\n        redirectUri,\n        preferPrivateSession,\n    });\n};\nconst handleCodeFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) => {\n    /* Convert URL into an object with parameters as keys\n{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n    const url = new AmplifyUrl(currentUrl);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    // if `code` or `state` is not presented in the redirect url, most likely\n    // that the end user cancelled the inflight oauth flow by:\n    // 1. clicking the back button of browser\n    // 2. closing the provider hosted UI page and coming back to the app\n    if (!code || !state) {\n        throw createOAuthError('User cancelled OAuth flow.');\n    }\n    // may throw error is being caught in attemptCompleteOAuthFlow.ts\n    const validatedState = await validateState(state);\n    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n    // TODO(v6): check hub events\n    // dispatchAuthEvent(\n    // \t'codeFlow',\n    // \t{},\n    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n    // );\n    const codeVerifier = await oAuthStore.loadPKCE();\n    const oAuthTokenBody = {\n        grant_type: 'authorization_code',\n        code,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n    };\n    const body = Object.entries(oAuthTokenBody)\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    const { access_token, refresh_token: refreshToken, id_token, error, error_message: errorMessage, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            [USER_AGENT_HEADER]: userAgentValue,\n        },\n        body,\n    })).json();\n    if (error) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError(errorMessage ?? error);\n    }\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        RefreshToken: refreshToken,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst handleImplicitFlow = async ({ currentUrl, redirectUri, preferPrivateSession, }) => {\n    // hash is `null` if `#` doesn't exist on URL\n    const url = new AmplifyUrl(currentUrl);\n    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n        .substring(1) // Remove # from returned code\n        .split('&')\n        .map(pairings => pairings.split('='))\n        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n        id_token: undefined,\n        access_token: undefined,\n        state: undefined,\n        token_type: undefined,\n        expires_in: undefined,\n        error_description: undefined,\n        error: undefined,\n    });\n    if (error) {\n        throw createOAuthError(error_description ?? error);\n    }\n    if (!access_token) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError('No access token returned from OAuth flow.');\n    }\n    const validatedState = await validateState(state);\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst completeFlow = async ({ redirectUri, state, preferPrivateSession, }) => {\n    await tokenOrchestrator.setOAuthMetadata({\n        oauthSignIn: true,\n    });\n    await oAuthStore.clearOAuthData();\n    await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n    // this should be called before any call that involves `fetchAuthSession`\n    // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n    //  `fetchAuthSession` can be resolved\n    resolveAndClearInflightPromises();\n    // clear history before sending out final Hub events\n    clearHistory(redirectUri);\n    if (isCustomState(state)) {\n        Hub.dispatch('auth', {\n            event: 'customOAuthState',\n            data: urlSafeDecode(getCustomState(state)),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n    await dispatchSignedInHubEvent();\n};\nconst isCustomState = (state) => {\n    return /-/.test(state);\n};\nconst getCustomState = (state) => {\n    return state.split('-').splice(1).join('-');\n};\nconst clearHistory = (redirectUri) => {\n    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n        window.history.replaceState(window.history.state, '', redirectUri);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { invalidOriginException, invalidPreferredRedirectUrlException, invalidRedirectException, } from '../../../../errors/constants';\n/** @internal */\nexport function getRedirectUrl(redirects, preferredRedirectUrl) {\n    if (preferredRedirectUrl) {\n        const redirectUrl = redirects?.find(redirect => redirect === preferredRedirectUrl);\n        if (!redirectUrl) {\n            throw invalidPreferredRedirectUrlException;\n        }\n        return redirectUrl;\n    }\n    else {\n        const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ??\n            redirects?.find(isTheSameDomain);\n        const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n        if (redirectUrlFromTheSameOrigin) {\n            return redirectUrlFromTheSameOrigin;\n        }\n        else if (redirectUrlFromDifferentOrigin) {\n            throw invalidOriginException;\n        }\n        throw invalidRedirectException;\n    }\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = (redirect) => redirect.startsWith(\n// eslint-disable-next-line no-constant-binary-expression\nString(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = (redirect) => redirect.includes(String(window.location.hostname));\nconst isHttp = (redirect) => redirect.startsWith('http://');\nconst isHttps = (redirect) => redirect.startsWith('https://');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore';\nimport { resolveAndClearInflightPromises } from './inflightPromise';\nexport const handleFailure = async (error) => {\n    resolveAndClearInflightPromises();\n    await oAuthStore.clearOAuthInflightData();\n    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertOAuthConfig, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils';\nimport { oAuthStore } from './oAuthStore';\nimport { completeOAuthFlow } from './completeOAuthFlow';\nimport { getRedirectUrl } from './getRedirectUrl';\nimport { handleFailure } from './handleFailure';\nexport const attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        assertTokenProviderConfig(authConfig);\n        assertOAuthConfig(authConfig);\n        oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = getRedirectUrl(redirectSignIn);\n        await completeOAuthFlow({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await handleFailure(err);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { ADD_OAUTH_LISTENER, isBrowser, } from '@aws-amplify/core/internals/utils';\nimport { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow';\n// attach the side effect for handling the completion of an inflight oauth flow\n// this side effect works only on Web\nisBrowser() &&\n    (() => {\n        // add the listener to the singleton for triggering\n        Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n    })();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const IdentityIdStorageKeys = {\n    identityId: 'identityId',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { IdentityIdStorageKeys } from './types';\nconst logger = new ConsoleLogger('DefaultIdentityIdStore');\nexport class DefaultIdentityIdStore {\n    setAuthConfig(authConfigParam) {\n        assertIdentityPoolIdConfig(authConfigParam.Cognito);\n        this.authConfig = authConfigParam;\n        this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n    }\n    constructor(keyValueStorage) {\n        this._authKeys = {};\n        this._hasGuestIdentityId = false;\n        this.keyValueStorage = keyValueStorage;\n    }\n    async loadIdentityId() {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        try {\n            if (this._primaryIdentityId) {\n                return {\n                    id: this._primaryIdentityId,\n                    type: 'primary',\n                };\n            }\n            else {\n                const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n                if (storedIdentityId) {\n                    this._hasGuestIdentityId = true;\n                    return {\n                        id: storedIdentityId,\n                        type: 'guest',\n                    };\n                }\n                return null;\n            }\n        }\n        catch (err) {\n            logger.log('Error getting stored IdentityId.', err);\n            return null;\n        }\n    }\n    async storeIdentityId(identity) {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        if (identity.type === 'guest') {\n            this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n            // Clear in-memory storage of primary identityId\n            this._primaryIdentityId = undefined;\n            this._hasGuestIdentityId = true;\n        }\n        else {\n            this._primaryIdentityId = identity.id;\n            // Clear locally stored guest id\n            if (this._hasGuestIdentityId) {\n                this.keyValueStorage.removeItem(this._authKeys.identityId);\n                this._hasGuestIdentityId = false;\n            }\n        }\n    }\n    async clearIdentityId() {\n        this._primaryIdentityId = undefined;\n        await this.keyValueStorage.removeItem(this._authKeys.identityId);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nexport function formLoginsMap(idToken) {\n    const issuer = decodeJWT(idToken).payload.iss;\n    const res = {};\n    if (!issuer) {\n        throw new AuthError({\n            name: 'InvalidIdTokenException',\n            message: 'Invalid Idtoken.',\n        });\n    }\n    const domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n    res[domainName] = idToken;\n    return res;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getId } from '@aws-amplify/core';\nimport { AuthError } from '../../../errors/AuthError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers';\nimport { formLoginsMap } from './utils';\n/**\n * Provides a Cognito identityId\n *\n * @param tokens - The AuthTokens received after SignIn\n * @returns string\n * @throws configuration exceptions: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service exceptions: {@link GetIdException }\n */\nexport async function cognitoIdentityIdProvider({ tokens, authConfig, identityIdStore, }) {\n    identityIdStore.setAuthConfig({ Cognito: authConfig });\n    // will return null only if there is no identityId cached or if there is an error retrieving it\n    const identityId = await identityIdStore.loadIdentityId();\n    if (identityId) {\n        return identityId.id;\n    }\n    const logins = tokens?.idToken\n        ? formLoginsMap(tokens.idToken.toString())\n        : {};\n    const generatedIdentityId = await generateIdentityId(logins, authConfig);\n    // Store generated identityId\n    identityIdStore.storeIdentityId({\n        id: generatedIdentityId,\n        type: tokens ? 'primary' : 'guest',\n    });\n    return generatedIdentityId;\n}\nasync function generateIdentityId(logins, authConfig) {\n    const identityPoolId = authConfig?.identityPoolId;\n    const region = getRegionFromIdentityPoolId(identityPoolId);\n    // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n    let idResult;\n    // for a first-time user, this will return a brand new identity\n    // for a returning user, this will retrieve the previous identity assocaited with the logins\n    try {\n        idResult = (await getId({\n            region,\n        }, {\n            IdentityPoolId: identityPoolId,\n            Logins: logins,\n        })).IdentityId;\n    }\n    catch (e) {\n        assertServiceError(e);\n        throw new AuthError(e);\n    }\n    if (!idResult) {\n        throw new AuthError({\n            name: 'GetIdResponseException',\n            message: 'Received undefined response from getId operation',\n            recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.',\n        });\n    }\n    return idResult;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, getCredentialsForIdentity, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers';\nimport { assertIdTokenInAuthTokens } from '../utils/types';\nimport { cognitoIdentityIdProvider } from './IdentityIdProvider';\nimport { formLoginsMap } from './utils';\nconst logger = new ConsoleLogger('CognitoCredentialsProvider');\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nexport class CognitoAWSCredentialsAndIdentityIdProvider {\n    constructor(identityIdStore) {\n        this._nextCredentialsRefresh = 0;\n        this._identityIdStore = identityIdStore;\n    }\n    async clearCredentialsAndIdentityId() {\n        logger.debug('Clearing out credentials and identityId');\n        this._credentialsAndIdentityId = undefined;\n        await this._identityIdStore.clearIdentityId();\n    }\n    async clearCredentials() {\n        logger.debug('Clearing out in-memory credentials');\n        this._credentialsAndIdentityId = undefined;\n    }\n    async getCredentialsAndIdentityId(getCredentialsOptions) {\n        const isAuthenticated = getCredentialsOptions.authenticated;\n        const { tokens } = getCredentialsOptions;\n        const { authConfig } = getCredentialsOptions;\n        try {\n            assertIdentityPoolIdConfig(authConfig?.Cognito);\n        }\n        catch {\n            // No identity pool configured, skipping\n            return;\n        }\n        if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n            // TODO(V6): return partial result like Native platforms\n            return;\n        }\n        const { forceRefresh } = getCredentialsOptions;\n        const tokenHasChanged = this.hasTokenChanged(tokens);\n        const identityId = await cognitoIdentityIdProvider({\n            tokens,\n            authConfig: authConfig.Cognito,\n            identityIdStore: this._identityIdStore,\n        });\n        // Clear cached credentials when forceRefresh is true OR the cache token has changed\n        if (forceRefresh || tokenHasChanged) {\n            this.clearCredentials();\n        }\n        if (!isAuthenticated) {\n            return this.getGuestCredentials(identityId, authConfig.Cognito);\n        }\n        else {\n            assertIdTokenInAuthTokens(tokens);\n            return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n        }\n    }\n    async getGuestCredentials(identityId, authConfig) {\n        // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n            logger.info('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any authenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        // use identityId to obtain guest credentials\n        // save credentials in-memory\n        // No logins params should be passed for guest creds:\n        // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n        let clientResult;\n        try {\n            clientResult = await getCredentialsForIdentity({ region }, {\n                IdentityId: identityId,\n            });\n        }\n        catch (e) {\n            assertServiceError(e);\n            throw new AuthError(e);\n        }\n        if (clientResult?.Credentials?.AccessKeyId &&\n            clientResult?.Credentials?.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            if (clientResult.IdentityId) {\n                res.identityId = clientResult.IdentityId;\n                this._identityIdStore.storeIdentityId({\n                    id: clientResult.IdentityId,\n                    type: 'guest',\n                });\n            }\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: false,\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsNotFoundException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    async credsForOIDCTokens(authConfig, authTokens, identityId) {\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n            logger.debug('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const logins = authTokens.idToken\n            ? formLoginsMap(authTokens.idToken.toString())\n            : {};\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        let clientResult;\n        try {\n            clientResult = await getCredentialsForIdentity({ region }, {\n                IdentityId: identityId,\n                Logins: logins,\n            });\n        }\n        catch (e) {\n            assertServiceError(e);\n            throw new AuthError(e);\n        }\n        if (clientResult?.Credentials?.AccessKeyId &&\n            clientResult?.Credentials?.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            if (clientResult.IdentityId) {\n                res.identityId = clientResult.IdentityId;\n                // note: the following call removes guest identityId from the persistent store (localStorage)\n                this._identityIdStore.storeIdentityId({\n                    id: clientResult.IdentityId,\n                    type: 'primary',\n                });\n            }\n            // Store the credentials in-memory along with the expiration\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: true,\n                associatedIdToken: authTokens.idToken?.toString(),\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    isPastTTL() {\n        return this._nextCredentialsRefresh === undefined\n            ? true\n            : this._nextCredentialsRefresh <= Date.now();\n    }\n    hasTokenChanged(tokens) {\n        return (!!tokens &&\n            !!this._credentialsAndIdentityId?.associatedIdToken &&\n            tokens.idToken?.toString() !==\n                this._credentialsAndIdentityId.associatedIdToken);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage } from '@aws-amplify/core';\nimport { DefaultIdentityIdStore } from './IdentityIdStore';\nimport { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider';\n/**\n * Cognito specific implmentation of the CredentialsProvider interface\n * that manages setting and getting of AWS Credentials.\n *\n * @throws configuration expections: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service expections: {@link GetCredentialsForIdentityException}, {@link GetIdException}\n *\n */\nexport const cognitoCredentialsProvider = new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(defaultStorage));\nexport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, CookieStorage, defaultStorage, } from '@aws-amplify/core';\nimport { parseAmplifyConfig, } from '@aws-amplify/core/internals/utils';\nimport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore, cognitoCredentialsProvider, cognitoUserPoolsTokenProvider, } from './auth/cognito';\nexport const DefaultAmplify = {\n    /**\n     * Configures Amplify with the {@link resourceConfig} and {@link libraryOptions}.\n     *\n     * @param resourceConfig The {@link ResourcesConfig} object that is typically imported from the\n     * `amplifyconfiguration.json` file. It can also be an object literal created inline when calling `Amplify.configure`.\n     * @param libraryOptions The {@link LibraryOptions} additional options for the library.\n     *\n     * @example\n     * import config from './amplifyconfiguration.json';\n     *\n     * Amplify.configure(config);\n     */\n    configure(resourceConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourceConfig);\n        const cookieBasedKeyValueStorage = new CookieStorage({ sameSite: 'lax' });\n        const resolvedKeyValueStorage = libraryOptions?.ssr\n            ? cookieBasedKeyValueStorage\n            : defaultStorage;\n        const resolvedCredentialsProvider = libraryOptions?.ssr\n            ? new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(cookieBasedKeyValueStorage))\n            : cognitoCredentialsProvider;\n        // If no Auth config is provided, no special handling will be required, configure as is.\n        // Otherwise, we can assume an Auth config is provided from here on.\n        if (!resolvedResourceConfig.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If Auth options are provided, always just configure as is.\n        // Otherwise, we can assume no Auth libraryOptions were provided from here on.\n        if (libraryOptions?.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If no Auth libraryOptions were previously configured, then always add default providers.\n        if (!Amplify.libraryOptions.Auth) {\n            cognitoUserPoolsTokenProvider.setAuthConfig(resolvedResourceConfig.Auth);\n            cognitoUserPoolsTokenProvider.setKeyValueStorage(\n            // TODO: allow configure with a public interface\n            resolvedKeyValueStorage);\n            Amplify.configure(resolvedResourceConfig, {\n                ...libraryOptions,\n                Auth: {\n                    tokenProvider: cognitoUserPoolsTokenProvider,\n                    credentialsProvider: resolvedCredentialsProvider,\n                },\n            });\n            return;\n        }\n        // At this point, Auth libraryOptions would have been previously configured and no overriding\n        // Auth options were given, so we should preserve the currently configured Auth libraryOptions.\n        if (libraryOptions) {\n            const authLibraryOptions = Amplify.libraryOptions.Auth;\n            // If ssr is provided through libraryOptions, we should respect the intentional reconfiguration.\n            if (libraryOptions.ssr !== undefined) {\n                cognitoUserPoolsTokenProvider.setKeyValueStorage(\n                // TODO: allow configure with a public interface\n                resolvedKeyValueStorage);\n                authLibraryOptions.credentialsProvider = resolvedCredentialsProvider;\n            }\n            Amplify.configure(resolvedResourceConfig, {\n                Auth: authLibraryOptions,\n                ...libraryOptions,\n            });\n            return;\n        }\n        // Finally, if there were no libraryOptions given at all, we should simply not touch the currently\n        // configured libraryOptions.\n        Amplify.configure(resolvedResourceConfig);\n    },\n    /**\n     * Returns the {@link ResourcesConfig} object passed in as the `resourceConfig` parameter when calling\n     * `Amplify.configure`.\n     *\n     * @returns An {@link ResourcesConfig} object.\n     */\n    getConfig() {\n        return Amplify.getConfig();\n    },\n};\n", "// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\r\n\r\nconst config =  {\r\n    API: {\r\n        GraphQL: {\r\n          endpoint: 'https://xwj5jyayprgazjpcy25pmneeoi.appsync-api.us-west-2.amazonaws.com/graphql',\r\n          region: 'us-west-2',\r\n          defaultAuthMode: 'apiKey',\r\n          apiKey: 'da2-sib2x77isbf7dpruxmpfnpxgke'\r\n        }\r\n    }\r\n};\r\n\r\nexport default config;", "import { Amplify } from 'aws-amplify';\r\nimport { signIn, signOut, fetchAuthSession } from 'aws-amplify/auth';\r\nimport awsExports from './aws-exports'; // Import your aws-exports.js file\r\n\r\n//  VERY IMPORTANT:  Configure Amplify *before* using it.\r\nAmplify.configure(awsExports); // Use the configuration from awsExports\r\n\r\nasync function handleSignIn() {\r\n  try {\r\n      const user = await signIn({\r\n          username: 'testuser', //  email or username\r\n          password: 'testpassword',\r\n      });\r\n      console.log('Sign in successful:', user);\r\n\r\n      // Example of fetching auth session\r\n      const session = await fetchAuthSession();\r\n      console.log(\"Session:\", session);\r\n\r\n\r\n  } catch (error) {\r\n      console.error('Error signing in:', error);\r\n  }\r\n}\r\n\r\nasync function handleSignOut() {\r\n    try {\r\n        await signOut();\r\n        console.log('Signed out');\r\n    } catch (error) {\r\n        console.error('Error signing out: ', error);\r\n    }\r\n}\r\n\r\nhandleSignIn();"],
  "mappings": "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",
  "names": ["LogType", "name", "config", "name", "AmplifyErrorCode", "name", "name", "AuthConfigurationErrorCode", "name", "logger", "config", "api", "name", "config", "version", "name", "RawSha256", "fromUtf8", "Sha256", "Framework", "Category", "AiAction", "AnalyticsAction", "ApiAction", "AuthAction", "DataStoreAction", "GeoAction", "InAppMessagingAction", "InteractionsAction", "PredictionsAction", "PubSubAction", "PushNotificationAction", "StorageAction", "api", "fetchAuthSession", "fetchAuthSessionInternal", "defaultConfig", "config", "jitteredBackoff", "jitteredBackoffUtil", "jitteredBackoff", "logger", "name", "converter", "defaultConfig", "CacheErrorCode", "assert", "logger", "config", "defaultConfig", "assert", "logger", "config", "defaultConfig", "logger", "I18nErrorCode", "assert", "logger", "I18n", "config", "I18nClass", "assert", "crypto", "AuthValidationErrorCode", "AuthErrorStrings", "AuthErrorCodes", "name", "AssociateSoftwareTokenException", "ChangePasswordException", "ConfirmDeviceException", "ConfirmForgotPasswordException", "ConfirmSignUpException", "DeleteUserAttributesException", "DeleteUserException", "ForgetDeviceException", "ForgotPasswordException", "GetUserException", "GetIdException", "GetCredentialsForIdentityException", "GetUserAttributeVerificationException", "GlobalSignOutException", "InitiateAuthException", "ResendConfirmationException", "RespondToAuthChallengeException", "SetUserMFAPreferenceException", "SignUpException", "UpdateUserAttributesException", "VerifySoftwareTokenException", "VerifyUserAttributeException", "UpdateDeviceStatusException", "ListDevicesException", "getCurrentUser", "getCurrentUserInternal", "getSharedHeaders", "buildHttpRpcRequest", "disableCacheMiddlewareFactory", "jitteredBackoff", "config", "config", "config", "TokenProviderErrorCode", "assert", "assert", "createKeysForAuthStorage", "getCurrentUser", "PasskeyErrorCode", "config", "SHORT_TO_HEX", "HEX_TO_SHORT", "HEX_TO_SHORT", "SHORT_TO_HEX", "config", "tokenOrchestrator", "config", "tokenOrchestrator", "tokenOrchestrator", "config", "tokenOrchestrator", "config", "tokenOrchestrator", "getCurrentUser", "config", "tokenOrchestrator", "logger", "AuthErrorTypes", "getRedirectUrl", "getRedirectUrl", "logger", "createKeysForAuthStorage", "logger", "isAuthenticated", "fetchAuthSession"]
}
